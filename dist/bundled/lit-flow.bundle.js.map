{"version":3,"file":"lit-flow.bundle.js","sources":["../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-selection/src/namespaces.js","../../node_modules/d3-selection/src/namespace.js","../../node_modules/d3-selection/src/creator.js","../../node_modules/d3-selection/src/selector.js","../../node_modules/d3-selection/src/selection/select.js","../../node_modules/d3-selection/src/array.js","../../node_modules/d3-selection/src/selectorAll.js","../../node_modules/d3-selection/src/selection/selectAll.js","../../node_modules/d3-selection/src/matcher.js","../../node_modules/d3-selection/src/selection/selectChild.js","../../node_modules/d3-selection/src/selection/selectChildren.js","../../node_modules/d3-selection/src/selection/filter.js","../../node_modules/d3-selection/src/selection/sparse.js","../../node_modules/d3-selection/src/selection/enter.js","../../node_modules/d3-selection/src/constant.js","../../node_modules/d3-selection/src/selection/data.js","../../node_modules/d3-selection/src/selection/exit.js","../../node_modules/d3-selection/src/selection/join.js","../../node_modules/d3-selection/src/selection/merge.js","../../node_modules/d3-selection/src/selection/order.js","../../node_modules/d3-selection/src/selection/sort.js","../../node_modules/d3-selection/src/selection/call.js","../../node_modules/d3-selection/src/selection/nodes.js","../../node_modules/d3-selection/src/selection/node.js","../../node_modules/d3-selection/src/selection/size.js","../../node_modules/d3-selection/src/selection/empty.js","../../node_modules/d3-selection/src/selection/each.js","../../node_modules/d3-selection/src/selection/attr.js","../../node_modules/d3-selection/src/window.js","../../node_modules/d3-selection/src/selection/style.js","../../node_modules/d3-selection/src/selection/property.js","../../node_modules/d3-selection/src/selection/classed.js","../../node_modules/d3-selection/src/selection/text.js","../../node_modules/d3-selection/src/selection/html.js","../../node_modules/d3-selection/src/selection/raise.js","../../node_modules/d3-selection/src/selection/lower.js","../../node_modules/d3-selection/src/selection/append.js","../../node_modules/d3-selection/src/selection/insert.js","../../node_modules/d3-selection/src/selection/remove.js","../../node_modules/d3-selection/src/selection/clone.js","../../node_modules/d3-selection/src/selection/datum.js","../../node_modules/d3-selection/src/selection/on.js","../../node_modules/d3-selection/src/selection/dispatch.js","../../node_modules/d3-selection/src/selection/iterator.js","../../node_modules/d3-selection/src/selection/index.js","../../node_modules/d3-selection/src/select.js","../../node_modules/d3-selection/src/sourceEvent.js","../../node_modules/d3-selection/src/pointer.js","../../node_modules/d3-drag/src/noevent.js","../../node_modules/d3-drag/src/nodrag.js","../../node_modules/d3-color/src/define.js","../../node_modules/d3-color/src/color.js","../../node_modules/d3-interpolate/src/constant.js","../../node_modules/d3-interpolate/src/color.js","../../node_modules/d3-interpolate/src/rgb.js","../../node_modules/d3-interpolate/src/numberArray.js","../../node_modules/d3-interpolate/src/array.js","../../node_modules/d3-interpolate/src/date.js","../../node_modules/d3-interpolate/src/number.js","../../node_modules/d3-interpolate/src/object.js","../../node_modules/d3-interpolate/src/string.js","../../node_modules/d3-interpolate/src/value.js","../../node_modules/d3-interpolate/src/transform/decompose.js","../../node_modules/d3-interpolate/src/transform/parse.js","../../node_modules/d3-interpolate/src/transform/index.js","../../node_modules/d3-interpolate/src/zoom.js","../../node_modules/d3-timer/src/timer.js","../../node_modules/d3-timer/src/timeout.js","../../node_modules/d3-transition/src/transition/schedule.js","../../node_modules/d3-transition/src/interrupt.js","../../node_modules/d3-transition/src/selection/interrupt.js","../../node_modules/d3-transition/src/transition/tween.js","../../node_modules/d3-transition/src/transition/interpolate.js","../../node_modules/d3-transition/src/transition/attr.js","../../node_modules/d3-transition/src/transition/attrTween.js","../../node_modules/d3-transition/src/transition/delay.js","../../node_modules/d3-transition/src/transition/duration.js","../../node_modules/d3-transition/src/transition/ease.js","../../node_modules/d3-transition/src/transition/easeVarying.js","../../node_modules/d3-transition/src/transition/filter.js","../../node_modules/d3-transition/src/transition/merge.js","../../node_modules/d3-transition/src/transition/on.js","../../node_modules/d3-transition/src/transition/remove.js","../../node_modules/d3-transition/src/transition/select.js","../../node_modules/d3-transition/src/transition/selectAll.js","../../node_modules/d3-transition/src/transition/selection.js","../../node_modules/d3-transition/src/transition/style.js","../../node_modules/d3-transition/src/transition/styleTween.js","../../node_modules/d3-transition/src/transition/text.js","../../node_modules/d3-transition/src/transition/textTween.js","../../node_modules/d3-transition/src/transition/transition.js","../../node_modules/d3-transition/src/transition/end.js","../../node_modules/d3-transition/src/transition/index.js","../../node_modules/d3-ease/src/cubic.js","../../node_modules/d3-transition/src/selection/transition.js","../../node_modules/d3-transition/src/selection/index.js","../../node_modules/d3-zoom/src/constant.js","../../node_modules/d3-zoom/src/event.js","../../node_modules/d3-zoom/src/transform.js","../../node_modules/d3-zoom/src/noevent.js","../../node_modules/d3-zoom/src/zoom.js","../../node_modules/@xyflow/system/dist/esm/index.js","../../src/core/flow-instance.ts","../../src/core/store.ts","../../node_modules/@lit/reactive-element/css-tag.js","../../node_modules/@lit/reactive-element/reactive-element.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-element/lit-element.js","../../node_modules/lit-html/static.js","../../node_modules/@lit/reactive-element/decorators/custom-element.js","../../node_modules/@lit/reactive-element/decorators/property.js","../../node_modules/lit-html/directive.js","../../node_modules/lit-html/directives/style-map.js","../../src/utils/geometry.ts","../../src/components/flow-canvas.ts","../../src/components/node-resizer.ts","../../src/components/flow-node.ts","../../src/components/flow-edge.ts","../../src/components/flow-background.ts","../../src/components/flow-minimap.ts","../../src/components/flow-controls.ts","../../src/components/ui/erd-table-node.ts","../../src/components/shapes/shapes/basic-shapes.ts","../../src/components/shapes/shapes/geometric-shapes.ts","../../src/components/shapes/shapes/symbolic-shapes.ts","../../src/components/shapes/shape-registry.ts","../../src/components/shapes/shape-node.ts","../../src/components/ui/base-node.ts","../../src/mixins/node-mixin.ts"],"sourcesContent":["var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {passive: false};\nexport const nonpassivecapture = {capture: true, passive: false};\n\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","export default x => () => x;\n","export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","import { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\nimport { interpolateZoom, interpolate } from 'd3-interpolate';\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (handleType, { id, sourceHandle, targetHandle }) => `Couldn't create edge for ${handleType} handle id: \"${handleType === 'source' ? sourceHandle : targetHandle}\", edge id: ${id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n    error013: (lib = 'react') => `It seems that you haven't loaded the styles. Please import '@xyflow/${lib}/dist/style.css' or base.css to make sure everything is working properly.`,\n    error014: () => 'useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID.',\n    error015: () => 'It seems that you are trying to drag a node that is not initialized. Please use onNodesChange as explained in the docs.',\n};\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst defaultAriaLabelConfig = {\n    'node.a11yDescription.default': 'Press enter or space to select a node. Press delete to remove it and escape to cancel.',\n    'node.a11yDescription.keyboardDisabled': 'Press enter or space to select a node. You can then use the arrow keys to move the node around. Press delete to remove it and escape to cancel.',\n    'node.a11yDescription.ariaLiveMessage': ({ direction, x, y }) => `Moved selected node ${direction}. New position, x: ${x}, y: ${y}`,\n    'edge.a11yDescription.default': 'Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.',\n    // Control elements\n    'controls.ariaLabel': 'Control Panel',\n    'controls.zoomIn.ariaLabel': 'Zoom In',\n    'controls.zoomOut.ariaLabel': 'Zoom Out',\n    'controls.fitView.ariaLabel': 'Fit View',\n    'controls.interactive.ariaLabel': 'Toggle Interactivity',\n    // Mini map\n    'minimap.ariaLabel': 'Mini Map',\n    // Handle\n    'handle.ariaLabel': 'Handle',\n};\n\n/**\n * The `ConnectionMode` is used to set the mode of connection between nodes.\n * The `Strict` mode is the default one and only allows source to target edges.\n * `Loose` mode allows source to source and target to target edges as well.\n *\n * @public\n */\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\n/**\n * This enum is used to set the different modes of panning the viewport when the\n * user scrolls. The `Free` mode allows the user to pan in any direction by scrolling\n * with a device like a trackpad. The `Vertical` and `Horizontal` modes restrict\n * scroll panning to only the vertical or horizontal axis, respectively.\n *\n * @public\n */\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nconst initialConnection = {\n    inProgress: false,\n    isValid: null,\n    from: null,\n    fromHandle: null,\n    fromPosition: null,\n    fromNode: null,\n    to: null,\n    toHandle: null,\n    toPosition: null,\n    toNode: null,\n};\n\n/**\n * If you set the `connectionLineType` prop on your [`<ReactFlow />`](/api-reference/react-flow#connection-connectionLineType)\n *component, it will dictate the style of connection line rendered when creating\n *new edges.\n *\n * @public\n *\n * @remarks If you choose to render a custom connection line component, this value will be\n *passed to your component as part of its [`ConnectionLineComponentProps`](/api-reference/types/connection-line-component-props).\n */\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\n/**\n * Edges may optionally have a marker on either end. The MarkerType type enumerates\n * the options available to you when configuring a given marker.\n *\n * @public\n */\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\n/**\n * While [`PanelPosition`](/api-reference/types/panel-position) can be used to place a\n * component in the corners of a container, the `Position` enum is less precise and used\n * primarily in relation to edges and handles.\n *\n * @public\n */\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\n\n/**\n * @internal\n */\nfunction areConnectionMapsEqual(a, b) {\n    if (!a && !b) {\n        return true;\n    }\n    if (!a || !b || a.size !== b.size) {\n        return false;\n    }\n    if (!a.size && !b.size) {\n        return true;\n    }\n    for (const key of a.keys()) {\n        if (!b.has(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * We call the callback for all connections in a that are not in b\n *\n * @internal\n */\nfunction handleConnectionChange(a, b, cb) {\n    if (!cb) {\n        return;\n    }\n    const diff = [];\n    a.forEach((connection, key) => {\n        if (!b?.has(key)) {\n            diff.push(connection);\n        }\n    });\n    if (diff.length) {\n        cb(diff);\n    }\n}\nfunction getConnectionStatus(isValid) {\n    return isValid === null ? null : isValid ? 'valid' : 'invalid';\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Test whether an object is usable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nconst isEdgeBase = (element) => 'id' in element && 'source' in element && 'target' in element;\n/**\n * Test whether an object is usable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nconst isNodeBase = (element) => 'id' in element && 'position' in element && !('source' in element) && !('target' in element);\nconst isInternalNodeBase = (element) => 'id' in element && 'internals' in element && !('source' in element) && !('target' in element);\n/**\n * This util is used to tell you what nodes, if any, are connected to the given node\n * as the _target_ of an edge.\n * @public\n * @param node - The node to get the connected nodes from.\n * @param nodes - The array of all nodes.\n * @param edges - The array of all edges.\n * @returns An array of nodes that are connected over edges where the source is the given node.\n *\n * @example\n * ```ts\n *import { getOutgoers } from '@xyflow/react';\n *\n *const nodes = [];\n *const edges = [];\n *\n *const outgoers = getOutgoers(\n *  { id: '1', position: { x: 0, y: 0 }, data: { label: 'node' } },\n *  nodes,\n *  edges,\n *);\n *```\n */\nconst getOutgoers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const outgoerIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.source === node.id) {\n            outgoerIds.add(edge.target);\n        }\n    });\n    return nodes.filter((n) => outgoerIds.has(n.id));\n};\n/**\n * This util is used to tell you what nodes, if any, are connected to the given node\n * as the _source_ of an edge.\n * @public\n * @param node - The node to get the connected nodes from.\n * @param nodes - The array of all nodes.\n * @param edges - The array of all edges.\n * @returns An array of nodes that are connected over edges where the target is the given node.\n *\n * @example\n * ```ts\n *import { getIncomers } from '@xyflow/react';\n *\n *const nodes = [];\n *const edges = [];\n *\n *const incomers = getIncomers(\n *  { id: '1', position: { x: 0, y: 0 }, data: { label: 'node' } },\n *  nodes,\n *  edges,\n *);\n *```\n */\nconst getIncomers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const incomersIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.target === node.id) {\n            incomersIds.add(edge.source);\n        }\n    });\n    return nodes.filter((n) => incomersIds.has(n.id));\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    const { width, height } = getNodeDimensions(node);\n    const origin = node.origin ?? nodeOrigin;\n    const offsetX = width * origin[0];\n    const offsetY = height * origin[1];\n    return {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n};\n/**\n * Returns the bounding box that contains all the given nodes in an array. This can\n * be useful when combined with [`getViewportForBounds`](/api-reference/utils/get-viewport-for-bounds)\n * to calculate the correct transform to fit the given nodes in a viewport.\n * @public\n * @remarks Useful when combined with {@link getViewportForBounds} to calculate the correct transform to fit the given nodes in a viewport.\n * @param nodes - Nodes to calculate the bounds for.\n * @returns Bounding box enclosing all nodes.\n *\n * @remarks This function was previously called `getRectOfNodes`\n *\n * @example\n * ```js\n *import { getNodesBounds } from '@xyflow/react';\n *\n *const nodes = [\n *  {\n *    id: 'a',\n *    position: { x: 0, y: 0 },\n *    data: { label: 'a' },\n *    width: 50,\n *    height: 25,\n *  },\n *  {\n *    id: 'b',\n *    position: { x: 100, y: 100 },\n *    data: { label: 'b' },\n *    width: 50,\n *    height: 25,\n *  },\n *];\n *\n *const bounds = getNodesBounds(nodes);\n *```\n */\nconst getNodesBounds = (nodes, params = { nodeOrigin: [0, 0] }) => {\n    if (process.env.NODE_ENV === 'development' && !params.nodeLookup) {\n        console.warn('Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows.');\n    }\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, nodeOrId) => {\n        const isId = typeof nodeOrId === 'string';\n        let currentNode = !params.nodeLookup && !isId ? nodeOrId : undefined;\n        if (params.nodeLookup) {\n            currentNode = isId\n                ? params.nodeLookup.get(nodeOrId)\n                : !isInternalNodeBase(nodeOrId)\n                    ? params.nodeLookup.get(nodeOrId.id)\n                    : nodeOrId;\n        }\n        const nodeBox = currentNode ? nodeToBox(currentNode, params.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };\n        return getBoundsOfBoxes(currBox, nodeBox);\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n/**\n * Determines a bounding box that contains all given nodes in an array\n * @internal\n */\nconst getInternalNodesBounds = (nodeLookup, params = {}) => {\n    if (nodeLookup.size === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    let box = { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity };\n    nodeLookup.forEach((node) => {\n        if (params.filter === undefined || params.filter(node)) {\n            const nodeBox = nodeToBox(node);\n            box = getBoundsOfBoxes(box, nodeBox);\n        }\n    });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodes, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false) => {\n    const paneRect = {\n        ...pointToRendererPoint(rect, [tx, ty, tScale]),\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    for (const node of nodes.values()) {\n        const { measured, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            continue;\n        }\n        const width = measured.width ?? node.width ?? node.initialWidth ?? null;\n        const height = measured.height ?? node.height ?? node.initialHeight ?? null;\n        const overlappingArea = getOverlappingArea(paneRect, nodeToRect(node));\n        const area = (width ?? 0) * (height ?? 0);\n        const partiallyVisible = partially && overlappingArea > 0;\n        const forceInitialRender = !node.internals.handleBounds;\n        const isVisible = forceInitialRender || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    }\n    return visibleNodes;\n};\n/**\n * This utility filters an array of edges, keeping only those where either the source or target\n * node is present in the given array of nodes.\n * @public\n * @param nodes - Nodes you want to get the connected edges for.\n * @param edges - All edges.\n * @returns Array of edges that connect any of the given nodes with each other.\n *\n * @example\n * ```js\n *import { getConnectedEdges } from '@xyflow/react';\n *\n *const nodes = [\n *  { id: 'a', position: { x: 0, y: 0 } },\n *  { id: 'b', position: { x: 100, y: 0 } },\n *];\n *\n *const edges = [\n *  { id: 'a->c', source: 'a', target: 'c' },\n *  { id: 'c->d', source: 'c', target: 'd' },\n *];\n *\n *const connectedEdges = getConnectedEdges(nodes, edges);\n * // => [{ id: 'a->c', source: 'a', target: 'c' }]\n *```\n */\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = new Set();\n    nodes.forEach((node) => {\n        nodeIds.add(node.id);\n    });\n    return edges.filter((edge) => nodeIds.has(edge.source) || nodeIds.has(edge.target));\n};\nfunction getFitViewNodes(nodeLookup, options) {\n    const fitViewNodes = new Map();\n    const optionNodeIds = options?.nodes ? new Set(options.nodes.map((node) => node.id)) : null;\n    nodeLookup.forEach((n) => {\n        const isVisible = n.measured.width && n.measured.height && (options?.includeHiddenNodes || !n.hidden);\n        if (isVisible && (!optionNodeIds || optionNodeIds.has(n.id))) {\n            fitViewNodes.set(n.id, n);\n        }\n    });\n    return fitViewNodes;\n}\nasync function fitViewport({ nodes, width, height, panZoom, minZoom, maxZoom }, options) {\n    if (nodes.size === 0) {\n        return Promise.resolve(true);\n    }\n    const nodesToFit = getFitViewNodes(nodes, options);\n    const bounds = getInternalNodesBounds(nodesToFit);\n    const viewport = getViewportForBounds(bounds, width, height, options?.minZoom ?? minZoom, options?.maxZoom ?? maxZoom, options?.padding ?? 0.1);\n    await panZoom.setViewport(viewport, {\n        duration: options?.duration,\n        ease: options?.ease,\n        interpolate: options?.interpolate,\n    });\n    return Promise.resolve(true);\n}\n/**\n * This function calculates the next position of a node, taking into account the node's extent, parent node, and origin.\n *\n * @internal\n * @returns position, positionAbsolute\n */\nfunction calculateNodePosition({ nodeId, nextPosition, nodeLookup, nodeOrigin = [0, 0], nodeExtent, onError, }) {\n    const node = nodeLookup.get(nodeId);\n    const parentNode = node.parentId ? nodeLookup.get(node.parentId) : undefined;\n    const { x: parentX, y: parentY } = parentNode ? parentNode.internals.positionAbsolute : { x: 0, y: 0 };\n    const origin = node.origin ?? nodeOrigin;\n    let extent = node.extent || nodeExtent;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (!parentNode) {\n            onError?.('005', errorMessages['error005']());\n        }\n        else {\n            const parentWidth = parentNode.measured.width;\n            const parentHeight = parentNode.measured.height;\n            if (parentWidth && parentHeight) {\n                extent = [\n                    [parentX, parentY],\n                    [parentX + parentWidth, parentY + parentHeight],\n                ];\n            }\n        }\n    }\n    else if (parentNode && isCoordinateExtent(node.extent)) {\n        extent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    const positionAbsolute = isCoordinateExtent(extent)\n        ? clampPosition(nextPosition, extent, node.measured)\n        : nextPosition;\n    if (node.measured.width === undefined || node.measured.height === undefined) {\n        onError?.('015', errorMessages['error015']());\n    }\n    return {\n        position: {\n            x: positionAbsolute.x - parentX + (node.measured.width ?? 0) * origin[0],\n            y: positionAbsolute.y - parentY + (node.measured.height ?? 0) * origin[1],\n        },\n        positionAbsolute,\n    };\n}\n/**\n * Pass in nodes & edges to delete, get arrays of nodes and edges that actually can be deleted\n * @internal\n * @param param.nodesToRemove - The nodes to remove\n * @param param.edgesToRemove - The edges to remove\n * @param param.nodes - All nodes\n * @param param.edges - All edges\n * @param param.onBeforeDelete - Callback to check which nodes and edges can be deleted\n * @returns nodes: nodes that can be deleted, edges: edges that can be deleted\n */\nasync function getElementsToRemove({ nodesToRemove = [], edgesToRemove = [], nodes, edges, onBeforeDelete, }) {\n    const nodeIds = new Set(nodesToRemove.map((node) => node.id));\n    const matchingNodes = [];\n    for (const node of nodes) {\n        if (node.deletable === false) {\n            continue;\n        }\n        const isIncluded = nodeIds.has(node.id);\n        const parentHit = !isIncluded && node.parentId && matchingNodes.find((n) => n.id === node.parentId);\n        if (isIncluded || parentHit) {\n            matchingNodes.push(node);\n        }\n    }\n    const edgeIds = new Set(edgesToRemove.map((edge) => edge.id));\n    const deletableEdges = edges.filter((edge) => edge.deletable !== false);\n    const connectedEdges = getConnectedEdges(matchingNodes, deletableEdges);\n    const matchingEdges = connectedEdges;\n    for (const edge of deletableEdges) {\n        const isIncluded = edgeIds.has(edge.id);\n        if (isIncluded && !matchingEdges.find((e) => e.id === edge.id)) {\n            matchingEdges.push(edge);\n        }\n    }\n    if (!onBeforeDelete) {\n        return {\n            edges: matchingEdges,\n            nodes: matchingNodes,\n        };\n    }\n    const onBeforeDeleteResult = await onBeforeDelete({\n        nodes: matchingNodes,\n        edges: matchingEdges,\n    });\n    if (typeof onBeforeDeleteResult === 'boolean') {\n        return onBeforeDeleteResult ? { edges: matchingEdges, nodes: matchingNodes } : { edges: [], nodes: [] };\n    }\n    return onBeforeDeleteResult;\n}\n\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent, dimensions) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0] - (dimensions?.width ?? 0)),\n    y: clamp(position.y, extent[0][1], extent[1][1] - (dimensions?.height ?? 0)),\n});\nfunction clampPositionToParent(childPosition, childDimensions, parent) {\n    const { width: parentWidth, height: parentHeight } = getNodeDimensions(parent);\n    const { x: parentX, y: parentY } = parent.internals.positionAbsolute;\n    return clampPosition(childPosition, [\n        [parentX, parentY],\n        [parentX + parentWidth, parentY + parentHeight],\n    ], childDimensions);\n}\n/**\n * Calculates the velocity of panning when the mouse is close to the edge of the canvas\n * @internal\n * @param value - One dimensional poition of the mouse (x or y)\n * @param min - Minimal position on canvas before panning starts\n * @param max - Maximal position on canvas before panning starts\n * @returns - A number between 0 and 1 that represents the velocity of panning\n */\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, min) / min;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, min) / min;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds, speed = 15, distance = 40) => {\n    const xMovement = calcAutoPanVelocity(pos.x, distance, bounds.width - distance) * speed;\n    const yMovement = calcAutoPanVelocity(pos.y, distance, bounds.height - distance) * speed;\n    return [xMovement, yMovement];\n};\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n};\nconst nodeToBox = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        x2: x + (node.measured?.width ?? node.width ?? node.initialWidth ?? 0),\n        y2: y + (node.measured?.height ?? node.height ?? node.initialHeight ?? 0),\n    };\n};\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\n// used for a11y key board controls for nodes and edges\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst snapPosition = (position, snapGrid = [1, 1]) => {\n    return {\n        x: snapGrid[0] * Math.round(position.x / snapGrid[0]),\n        y: snapGrid[1] * Math.round(position.y / snapGrid[1]),\n    };\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid = false, snapGrid = [1, 1]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    return snapToGrid ? snapPosition(position, snapGrid) : position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\n/**\n * Parses a single padding value to a number\n * @internal\n * @param padding - Padding to parse\n * @param viewport - Width or height of the viewport\n * @returns The padding in pixels\n */\nfunction parsePadding(padding, viewport) {\n    if (typeof padding === 'number') {\n        return Math.floor((viewport - viewport / (1 + padding)) * 0.5);\n    }\n    if (typeof padding === 'string' && padding.endsWith('px')) {\n        const paddingValue = parseFloat(padding);\n        if (!Number.isNaN(paddingValue)) {\n            return Math.floor(paddingValue);\n        }\n    }\n    if (typeof padding === 'string' && padding.endsWith('%')) {\n        const paddingValue = parseFloat(padding);\n        if (!Number.isNaN(paddingValue)) {\n            return Math.floor(viewport * paddingValue * 0.01);\n        }\n    }\n    console.error(`[React Flow] The padding value \"${padding}\" is invalid. Please provide a number or a string with a valid unit (px or %).`);\n    return 0;\n}\n/**\n * Parses the paddings to an object with top, right, bottom, left, x and y paddings\n * @internal\n * @param padding - Padding to parse\n * @param width - Width of the viewport\n * @param height - Height of the viewport\n * @returns An object with the paddings in pixels\n */\nfunction parsePaddings(padding, width, height) {\n    if (typeof padding === 'string' || typeof padding === 'number') {\n        const paddingY = parsePadding(padding, height);\n        const paddingX = parsePadding(padding, width);\n        return {\n            top: paddingY,\n            right: paddingX,\n            bottom: paddingY,\n            left: paddingX,\n            x: paddingX * 2,\n            y: paddingY * 2,\n        };\n    }\n    if (typeof padding === 'object') {\n        const top = parsePadding(padding.top ?? padding.y ?? 0, height);\n        const bottom = parsePadding(padding.bottom ?? padding.y ?? 0, height);\n        const left = parsePadding(padding.left ?? padding.x ?? 0, width);\n        const right = parsePadding(padding.right ?? padding.x ?? 0, width);\n        return { top, right, bottom, left, x: left + right, y: top + bottom };\n    }\n    return { top: 0, right: 0, bottom: 0, left: 0, x: 0, y: 0 };\n}\n/**\n * Calculates the resulting paddings if the new viewport is applied\n * @internal\n * @param bounds - Bounds to fit inside viewport\n * @param x - X position of the viewport\n * @param y - Y position of the viewport\n * @param zoom - Zoom level of the viewport\n * @param width - Width of the viewport\n * @param height - Height of the viewport\n * @returns An object with the minimum padding required to fit the bounds inside the viewport\n */\nfunction calculateAppliedPaddings(bounds, x, y, zoom, width, height) {\n    const { x: left, y: top } = rendererPointToPoint(bounds, [x, y, zoom]);\n    const { x: boundRight, y: boundBottom } = rendererPointToPoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, [x, y, zoom]);\n    const right = width - boundRight;\n    const bottom = height - boundBottom;\n    return {\n        left: Math.floor(left),\n        top: Math.floor(top),\n        right: Math.floor(right),\n        bottom: Math.floor(bottom),\n    };\n}\n/**\n * Returns a viewport that encloses the given bounds with padding.\n * @public\n * @remarks You can determine bounds of nodes with {@link getNodesBounds} and {@link getBoundsOfRects}\n * @param bounds - Bounds to fit inside viewport.\n * @param width - Width of the viewport.\n * @param height  - Height of the viewport.\n * @param minZoom - Minimum zoom level of the resulting viewport.\n * @param maxZoom - Maximum zoom level of the resulting viewport.\n * @param padding - Padding around the bounds.\n * @returns A transformed {@link Viewport} that encloses the given bounds which you can pass to e.g. {@link setViewport}.\n * @example\n * const { x, y, zoom } = getViewportForBounds(\n * { x: 0, y: 0, width: 100, height: 100},\n * 1200, 800, 0.5, 2);\n */\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding) => {\n    // First we resolve all the paddings to actual pixel values\n    const p = parsePaddings(padding, width, height);\n    const xZoom = (width - p.x) / bounds.width;\n    const yZoom = (height - p.y) / bounds.height;\n    // We calculate the new x, y, zoom for a centered view\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    // Then we calculate the minimum padding, to respect asymmetric paddings\n    const newPadding = calculateAppliedPaddings(bounds, x, y, clampedZoom, width, height);\n    // We only want to have an offset if the newPadding is smaller than the required padding\n    const offset = {\n        left: Math.min(newPadding.left - p.left, 0),\n        top: Math.min(newPadding.top - p.top, 0),\n        right: Math.min(newPadding.right - p.right, 0),\n        bottom: Math.min(newPadding.bottom - p.bottom, 0),\n    };\n    return {\n        x: x - offset.left + offset.right,\n        y: y - offset.top + offset.bottom,\n        zoom: clampedZoom,\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\nfunction isCoordinateExtent(extent) {\n    return extent !== undefined && extent !== null && extent !== 'parent';\n}\nfunction getNodeDimensions(node) {\n    return {\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n}\nfunction nodeHasDimensions(node) {\n    return ((node.measured?.width ?? node.width ?? node.initialWidth) !== undefined &&\n        (node.measured?.height ?? node.height ?? node.initialHeight) !== undefined);\n}\n/**\n * Convert child position to aboslute position\n *\n * @internal\n * @param position\n * @param parentId\n * @param nodeLookup\n * @param nodeOrigin\n * @returns an internal node with an absolute position\n */\nfunction evaluateAbsolutePosition(position, dimensions = { width: 0, height: 0 }, parentId, nodeLookup, nodeOrigin) {\n    const positionAbsolute = { ...position };\n    const parent = nodeLookup.get(parentId);\n    if (parent) {\n        const origin = parent.origin || nodeOrigin;\n        positionAbsolute.x += parent.internals.positionAbsolute.x - (dimensions.width ?? 0) * origin[0];\n        positionAbsolute.y += parent.internals.positionAbsolute.y - (dimensions.height ?? 0) * origin[1];\n    }\n    return positionAbsolute;\n}\nfunction areSetsEqual(a, b) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a) {\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Polyfill for Promise.withResolvers until we can use it in all browsers\n * @internal\n */\nfunction withResolvers() {\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    return { promise, resolve, reject };\n}\nfunction mergeAriaLabelConfig(partial) {\n    return { ...defaultAriaLabelConfig, ...(partial || {}) };\n}\n\nfunction getPointerPosition(event, { snapGrid = [0, 0], snapToGrid = false, transform, containerBounds }) {\n    const { x, y } = getEventPosition(event);\n    const pointerPos = pointToRendererPoint({ x: x - (containerBounds?.left ?? 0), y: y - (containerBounds?.top ?? 0) }, transform);\n    const { x: xSnapped, y: ySnapped } = snapToGrid ? snapPosition(pointerPos, snapGrid) : pointerPos;\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n        xSnapped,\n        ySnapped,\n        ...pointerPos,\n    };\n}\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst getHostForElement = (element) => element?.getRootNode?.() || window?.document;\nconst inputTags = ['INPUT', 'SELECT', 'TEXTAREA'];\nfunction isInputDOMNode(event) {\n    // using composed path for handling shadow dom\n    const target = (event.composedPath?.()?.[0] || event.target);\n    if (target?.nodeType !== 1 /* Node.ELEMENT_NODE */)\n        return false;\n    const isInput = inputTags.includes(target.nodeName) || target.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouse = isMouseEvent(event);\n    const evtX = isMouse ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouse ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n/*\n * The handle bounds are calculated relative to the node element.\n * We store them in the internals object of the node in order to avoid\n * unnecessary recalculations.\n */\nconst getHandleBounds = (type, nodeElement, nodeBounds, zoom, nodeId) => {\n    const handles = nodeElement.querySelectorAll(`.${type}`);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    return Array.from(handles).map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            type,\n            nodeId,\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left) / zoom,\n            y: (handleBounds.top - nodeBounds.top) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\n\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    /*\n     * cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n     * https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n     */\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\n/**\n * The `getBezierPath` util returns everything you need to render a bezier edge\n *between two nodes.\n * @public\n * @returns A path string you can use in an SVG, the `labelX` and `labelY` position (center of path)\n * and `offsetX`, `offsetY` between source handle and label.\n * - `path`: the path to use in an SVG `<path>` element.\n * - `labelX`: the `x` position you can use to render a label for this edge.\n * - `labelY`: the `y` position you can use to render a label for this edge.\n * - `offsetX`: the absolute difference between the source `x` position and the `x` position of the\n * middle of this path.\n * - `offsetY`: the absolute difference between the source `y` position and the `y` position of the\n * middle of this path.\n * @example\n * ```js\n *  const source = { x: 0, y: 20 };\n *  const target = { x: 150, y: 100 };\n *\n *  const [path, labelX, labelY, offsetX, offsetY] = getBezierPath({\n *    sourceX: source.x,\n *    sourceY: source.y,\n *    sourcePosition: Position.Right,\n *    targetX: target.x,\n *    targetY: target.y,\n *    targetPosition: Position.Left,\n *});\n *```\n *\n * @remarks This function returns a tuple (aka a fixed-size array) to make it easier to\n *work with multiple edge paths at once.\n */\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\n\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\n/**\n * Returns the z-index for an edge based on the node it connects and whether it is selected.\n * By default, edges are rendered below nodes. This behaviour is different for edges that are\n * connected to nodes with a parent, as they are rendered above the parent node.\n */\nfunction getElevatedEdgeZIndex({ sourceNode, targetNode, selected = false, zIndex, elevateOnSelect = false, }) {\n    if (zIndex !== undefined) {\n        return zIndex;\n    }\n    const edgeZ = elevateOnSelect && selected ? 1000 : 0;\n    const nodeZ = Math.max(sourceNode.parentId || (elevateOnSelect && sourceNode.selected) ? sourceNode.internals.z : 0, targetNode.parentId || (elevateOnSelect && targetNode.selected) ? targetNode.internals.z : 0);\n    return edgeZ + nodeZ;\n}\nfunction isEdgeVisible({ sourceNode, targetNode, width, height, transform }) {\n    const edgeBox = getBoundsOfBoxes(nodeToBox(sourceNode), nodeToBox(targetNode));\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewRect = {\n        x: -transform[0] / transform[2],\n        y: -transform[1] / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    };\n    return getOverlappingArea(viewRect, boxToRect(edgeBox)) > 0;\n}\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `xy-edge__${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\n/**\n * This util is a convenience function to add a new Edge to an array of edges. It also performs some validation to make sure you don't add an invalid edge or duplicate an existing one.\n * @public\n * @param edgeParams - Either an `Edge` or a `Connection` you want to add.\n * @param edges - The array of all current edges.\n * @returns A new array of edges with the new edge added.\n *\n * @remarks If an edge with the same `target` and `source` already exists (and the same\n *`targetHandle` and `sourceHandle` if those are set), then this util won't add\n *a new edge even if the `id` property is different.\n *\n */\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdgeBase(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    if (edge.sourceHandle === null) {\n        delete edge.sourceHandle;\n    }\n    if (edge.targetHandle === null) {\n        delete edge.targetHandle;\n    }\n    return edges.concat(edge);\n};\n/**\n * A handy utility to update an existing [`Edge`](/api-reference/types/edge) with new properties.\n *This searches your edge array for an edge with a matching `id` and updates its\n *properties with the connection you provide.\n * @public\n * @param oldEdge - The edge you want to update.\n * @param newConnection - The new connection you want to update the edge with.\n * @param edges - The array of all current edges.\n * @returns The updated edges array.\n *\n * @example\n * ```js\n *const onReconnect = useCallback(\n *  (oldEdge: Edge, newConnection: Connection) => setEdges((els) => reconnectEdge(oldEdge, newConnection, els)),[]);\n *```\n */\nconst reconnectEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\n\n/**\n * Calculates the straight line path between two points.\n * @public\n * @returns A path string you can use in an SVG, the `labelX` and `labelY` position (center of path)\n * and `offsetX`, `offsetY` between source handle and label.\n *\n * - `path`: the path to use in an SVG `<path>` element.\n * - `labelX`: the `x` position you can use to render a label for this edge.\n * - `labelY`: the `y` position you can use to render a label for this edge.\n * - `offsetX`: the absolute difference between the source `x` position and the `x` position of the\n * middle of this path.\n * - `offsetY`: the absolute difference between the source `y` position and the `y` position of the\n * middle of this path.\n * @example\n * ```js\n *  const source = { x: 0, y: 20 };\n *  const target = { x: 150, y: 100 };\n *\n *  const [path, labelX, labelY, offsetX, offsetY] = getStraightPath({\n *    sourceX: source.x,\n *    sourceY: source.y,\n *    sourcePosition: Position.Right,\n *    targetX: target.x,\n *    targetY: target.y,\n *    targetPosition: Position.Left,\n *  });\n * ```\n * @remarks This function returns a tuple (aka a fixed-size array) to make it easier to work with multiple edge paths at once.\n */\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n/*\n * With this function we try to mimic an orthogonal edge routing behaviour\n * It's not as good as a real orthogonal edge routing, but it's faster and good enough as a default for step and smooth step edges\n */\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, stepPosition, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [, , defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        if (dirAccessor === 'x') {\n            // Primary direction is horizontal, so stepPosition affects X coordinate\n            centerX = center.x ?? (sourceGapped.x + (targetGapped.x - sourceGapped.x) * stepPosition);\n            centerY = center.y ?? (sourceGapped.y + targetGapped.y) / 2;\n        }\n        else {\n            // Primary direction is vertical, so stepPosition affects Y coordinate  \n            centerX = center.x ?? (sourceGapped.x + targetGapped.x) / 2;\n            centerY = center.y ?? (sourceGapped.y + (targetGapped.y - sourceGapped.y) * stepPosition);\n        }\n        /*\n         *    --->\n         *    |\n         * >---\n         */\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        /*\n         *    |\n         *  ---\n         *  |\n         */\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\n/**\n * The `getSmoothStepPath` util returns everything you need to render a stepped path\n * between two nodes. The `borderRadius` property can be used to choose how rounded\n * the corners of those steps are.\n * @public\n * @returns A path string you can use in an SVG, the `labelX` and `labelY` position (center of path)\n * and `offsetX`, `offsetY` between source handle and label.\n *\n * - `path`: the path to use in an SVG `<path>` element.\n * - `labelX`: the `x` position you can use to render a label for this edge.\n * - `labelY`: the `y` position you can use to render a label for this edge.\n * - `offsetX`: the absolute difference between the source `x` position and the `x` position of the\n * middle of this path.\n * - `offsetY`: the absolute difference between the source `y` position and the `y` position of the\n * middle of this path.\n * @example\n * ```js\n *  const source = { x: 0, y: 20 };\n *  const target = { x: 150, y: 100 };\n *\n *  const [path, labelX, labelY, offsetX, offsetY] = getSmoothStepPath({\n *    sourceX: source.x,\n *    sourceY: source.y,\n *    sourcePosition: Position.Right,\n *    targetX: target.x,\n *    targetY: target.y,\n *    targetPosition: Position.Left,\n *  });\n * ```\n * @remarks This function returns a tuple (aka a fixed-size array) to make it easier to work with multiple edge paths at once.\n */\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, stepPosition = 0.5, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n        stepPosition,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\n\nfunction isNodeInitialized(node) {\n    return (node &&\n        !!(node.internals.handleBounds || node.handles?.length) &&\n        !!(node.measured.width || node.width || node.initialWidth));\n}\nfunction getEdgePosition(params) {\n    const { sourceNode, targetNode } = params;\n    if (!isNodeInitialized(sourceNode) || !isNodeInitialized(targetNode)) {\n        return null;\n    }\n    const sourceHandleBounds = sourceNode.internals.handleBounds || toHandleBounds(sourceNode.handles);\n    const targetHandleBounds = targetNode.internals.handleBounds || toHandleBounds(targetNode.handles);\n    const sourceHandle = getHandle$1(sourceHandleBounds?.source ?? [], params.sourceHandle);\n    const targetHandle = getHandle$1(\n    // when connection type is loose we can define all handles as sources and connect source -> source\n    params.connectionMode === ConnectionMode.Strict\n        ? targetHandleBounds?.target ?? []\n        : (targetHandleBounds?.target ?? []).concat(targetHandleBounds?.source ?? []), params.targetHandle);\n    if (!sourceHandle || !targetHandle) {\n        params.onError?.('008', errorMessages['error008'](!sourceHandle ? 'source' : 'target', {\n            id: params.id,\n            sourceHandle: params.sourceHandle,\n            targetHandle: params.targetHandle,\n        }));\n        return null;\n    }\n    const sourcePosition = sourceHandle?.position || Position.Bottom;\n    const targetPosition = targetHandle?.position || Position.Top;\n    const source = getHandlePosition(sourceNode, sourceHandle, sourcePosition);\n    const target = getHandlePosition(targetNode, targetHandle, targetPosition);\n    return {\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n        sourcePosition,\n        targetPosition,\n    };\n}\nfunction toHandleBounds(handles) {\n    if (!handles) {\n        return null;\n    }\n    const source = [];\n    const target = [];\n    for (const handle of handles) {\n        handle.width = handle.width ?? 1;\n        handle.height = handle.height ?? 1;\n        if (handle.type === 'source') {\n            source.push(handle);\n        }\n        else if (handle.type === 'target') {\n            target.push(handle);\n        }\n    }\n    return {\n        source,\n        target,\n    };\n}\nfunction getHandlePosition(node, handle, fallbackPosition = Position.Left, center = false) {\n    const x = (handle?.x ?? 0) + node.internals.positionAbsolute.x;\n    const y = (handle?.y ?? 0) + node.internals.positionAbsolute.y;\n    const { width, height } = handle ?? getNodeDimensions(node);\n    if (center) {\n        return { x: x + width / 2, y: y + height / 2 };\n    }\n    const position = handle?.position ?? fallbackPosition;\n    switch (position) {\n        case Position.Top:\n            return { x: x + width / 2, y };\n        case Position.Right:\n            return { x: x + width, y: y + height / 2 };\n        case Position.Bottom:\n            return { x: x + width / 2, y: y + height };\n        case Position.Left:\n            return { x, y: y + height / 2 };\n    }\n}\nfunction getHandle$1(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    // if no handleId is given, we use the first handle, otherwise we check for the id\n    return (!handleId ? bounds[0] : bounds.find((d) => d.id === handleId)) || null;\n}\n\nfunction getMarkerId(marker, id) {\n    if (!marker) {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = id ? `${id}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n}\nfunction createMarkerIds(edges, { id, defaultColor, defaultMarkerStart, defaultMarkerEnd, }) {\n    const ids = new Set();\n    return edges\n        .reduce((markers, edge) => {\n        [edge.markerStart || defaultMarkerStart, edge.markerEnd || defaultMarkerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, id);\n                if (!ids.has(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.add(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n}\n\nfunction getNodeToolbarTransform(nodeRect, viewport, position, offset, align) {\n    let alignmentOffset = 0.5;\n    if (align === 'start') {\n        alignmentOffset = 0;\n    }\n    else if (align === 'end') {\n        alignmentOffset = 1;\n    }\n    /*\n     * position === Position.Top\n     * we set the x any y position of the toolbar based on the nodes position\n     */\n    let pos = [\n        (nodeRect.x + nodeRect.width * alignmentOffset) * viewport.zoom + viewport.x,\n        nodeRect.y * viewport.zoom + viewport.y - offset,\n    ];\n    // and than shift it based on the alignment. The shift values are in %.\n    let shift = [-100 * alignmentOffset, -100];\n    switch (position) {\n        case Position.Right:\n            pos = [\n                (nodeRect.x + nodeRect.width) * viewport.zoom + viewport.x + offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [0, -100 * alignmentOffset];\n            break;\n        case Position.Bottom:\n            pos[1] = (nodeRect.y + nodeRect.height) * viewport.zoom + viewport.y + offset;\n            shift[1] = 0;\n            break;\n        case Position.Left:\n            pos = [\n                nodeRect.x * viewport.zoom + viewport.x - offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [-100, -100 * alignmentOffset];\n            break;\n    }\n    return `translate(${pos[0]}px, ${pos[1]}px) translate(${shift[0]}%, ${shift[1]}%)`;\n}\n\nconst defaultOptions = {\n    nodeOrigin: [0, 0],\n    nodeExtent: infiniteExtent,\n    elevateNodesOnSelect: true,\n    defaults: {},\n};\nconst adoptUserNodesDefaultOptions = {\n    ...defaultOptions,\n    checkEquality: true,\n};\nfunction mergeObjects(base, incoming) {\n    const result = { ...base };\n    for (const key in incoming) {\n        if (incoming[key] !== undefined) {\n            // typecast is safe here, because we check for undefined\n            result[key] = incoming[key];\n        }\n    }\n    return result;\n}\nfunction updateAbsolutePositions(nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(defaultOptions, options);\n    for (const node of nodeLookup.values()) {\n        if (node.parentId) {\n            updateChildNode(node, nodeLookup, parentLookup, _options);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(node, _options.nodeOrigin);\n            const extent = isCoordinateExtent(node.extent) ? node.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(node));\n            node.internals.positionAbsolute = clampedPosition;\n        }\n    }\n}\nfunction parseHandles(userNode, internalNode) {\n    if (!userNode.handles) {\n        return !userNode.measured ? undefined : internalNode?.internals.handleBounds;\n    }\n    const source = [];\n    const target = [];\n    for (const handle of userNode.handles) {\n        const handleBounds = {\n            id: handle.id,\n            width: handle.width ?? 1,\n            height: handle.height ?? 1,\n            nodeId: userNode.id,\n            x: handle.x,\n            y: handle.y,\n            position: handle.position,\n            type: handle.type,\n        };\n        if (handle.type === 'source') {\n            source.push(handleBounds);\n        }\n        else if (handle.type === 'target') {\n            target.push(handleBounds);\n        }\n    }\n    return {\n        source,\n        target,\n    };\n}\nfunction adoptUserNodes(nodes, nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(adoptUserNodesDefaultOptions, options);\n    let nodesInitialized = nodes.length > 0;\n    const tmpLookup = new Map(nodeLookup);\n    const selectedNodeZ = _options?.elevateNodesOnSelect ? 1000 : 0;\n    nodeLookup.clear();\n    parentLookup.clear();\n    for (const userNode of nodes) {\n        let internalNode = tmpLookup.get(userNode.id);\n        if (_options.checkEquality && userNode === internalNode?.internals.userNode) {\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(userNode, _options.nodeOrigin);\n            const extent = isCoordinateExtent(userNode.extent) ? userNode.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(userNode));\n            internalNode = {\n                ..._options.defaults,\n                ...userNode,\n                measured: {\n                    width: userNode.measured?.width,\n                    height: userNode.measured?.height,\n                },\n                internals: {\n                    positionAbsolute: clampedPosition,\n                    // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured\n                    handleBounds: parseHandles(userNode, internalNode),\n                    z: calculateZ(userNode, selectedNodeZ),\n                    userNode,\n                },\n            };\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        if ((internalNode.measured === undefined ||\n            internalNode.measured.width === undefined ||\n            internalNode.measured.height === undefined) &&\n            !internalNode.hidden) {\n            nodesInitialized = false;\n        }\n        if (userNode.parentId) {\n            updateChildNode(internalNode, nodeLookup, parentLookup, options);\n        }\n    }\n    return nodesInitialized;\n}\nfunction updateParentLookup(node, parentLookup) {\n    if (!node.parentId) {\n        return;\n    }\n    const childNodes = parentLookup.get(node.parentId);\n    if (childNodes) {\n        childNodes.set(node.id, node);\n    }\n    else {\n        parentLookup.set(node.parentId, new Map([[node.id, node]]));\n    }\n}\n/**\n * Updates positionAbsolute and zIndex of a child node and the parentLookup.\n */\nfunction updateChildNode(node, nodeLookup, parentLookup, options) {\n    const { elevateNodesOnSelect, nodeOrigin, nodeExtent } = mergeObjects(defaultOptions, options);\n    const parentId = node.parentId;\n    const parentNode = nodeLookup.get(parentId);\n    if (!parentNode) {\n        console.warn(`Parent node ${parentId} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);\n        return;\n    }\n    updateParentLookup(node, parentLookup);\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    const { x, y, z } = calculateChildXYZ(node, parentNode, nodeOrigin, nodeExtent, selectedNodeZ);\n    const { positionAbsolute } = node.internals;\n    const positionChanged = x !== positionAbsolute.x || y !== positionAbsolute.y;\n    if (positionChanged || z !== node.internals.z) {\n        // we create a new object to mark the node as updated\n        nodeLookup.set(node.id, {\n            ...node,\n            internals: {\n                ...node.internals,\n                positionAbsolute: positionChanged ? { x, y } : positionAbsolute,\n                z,\n            },\n        });\n    }\n}\nfunction calculateZ(node, selectedNodeZ) {\n    return (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n}\nfunction calculateChildXYZ(childNode, parentNode, nodeOrigin, nodeExtent, selectedNodeZ) {\n    const { x: parentX, y: parentY } = parentNode.internals.positionAbsolute;\n    const childDimensions = getNodeDimensions(childNode);\n    const positionWithOrigin = getNodePositionWithOrigin(childNode, nodeOrigin);\n    const clampedPosition = isCoordinateExtent(childNode.extent)\n        ? clampPosition(positionWithOrigin, childNode.extent, childDimensions)\n        : positionWithOrigin;\n    let absolutePosition = clampPosition({ x: parentX + clampedPosition.x, y: parentY + clampedPosition.y }, nodeExtent, childDimensions);\n    if (childNode.extent === 'parent') {\n        absolutePosition = clampPositionToParent(absolutePosition, childDimensions, parentNode);\n    }\n    const childZ = calculateZ(childNode, selectedNodeZ);\n    const parentZ = parentNode.internals.z ?? 0;\n    return {\n        x: absolutePosition.x,\n        y: absolutePosition.y,\n        z: parentZ >= childZ ? parentZ + 1 : childZ,\n    };\n}\nfunction handleExpandParent(children, nodeLookup, parentLookup, nodeOrigin = [0, 0]) {\n    const changes = [];\n    const parentExpansions = new Map();\n    // determine the expanded rectangle the child nodes would take for each parent\n    for (const child of children) {\n        const parent = nodeLookup.get(child.parentId);\n        if (!parent) {\n            continue;\n        }\n        const parentRect = parentExpansions.get(child.parentId)?.expandedRect ?? nodeToRect(parent);\n        const expandedRect = getBoundsOfRects(parentRect, child.rect);\n        parentExpansions.set(child.parentId, { expandedRect, parent });\n    }\n    if (parentExpansions.size > 0) {\n        parentExpansions.forEach(({ expandedRect, parent }, parentId) => {\n            // determine the position & dimensions of the parent\n            const positionAbsolute = parent.internals.positionAbsolute;\n            const dimensions = getNodeDimensions(parent);\n            const origin = parent.origin ?? nodeOrigin;\n            // determine how much the parent expands in width and position\n            const xChange = expandedRect.x < positionAbsolute.x ? Math.round(Math.abs(positionAbsolute.x - expandedRect.x)) : 0;\n            const yChange = expandedRect.y < positionAbsolute.y ? Math.round(Math.abs(positionAbsolute.y - expandedRect.y)) : 0;\n            const newWidth = Math.max(dimensions.width, Math.round(expandedRect.width));\n            const newHeight = Math.max(dimensions.height, Math.round(expandedRect.height));\n            const widthChange = (newWidth - dimensions.width) * origin[0];\n            const heightChange = (newHeight - dimensions.height) * origin[1];\n            // We need to correct the position of the parent node if the origin is not [0,0]\n            if (xChange > 0 || yChange > 0 || widthChange || heightChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'position',\n                    position: {\n                        x: parent.position.x - xChange + widthChange,\n                        y: parent.position.y - yChange + heightChange,\n                    },\n                });\n                /*\n                 * We move all child nodes in the oppsite direction\n                 * so the x,y changes of the parent do not move the children\n                 */\n                parentLookup.get(parentId)?.forEach((childNode) => {\n                    if (!children.some((child) => child.id === childNode.id)) {\n                        changes.push({\n                            id: childNode.id,\n                            type: 'position',\n                            position: {\n                                x: childNode.position.x + xChange,\n                                y: childNode.position.y + yChange,\n                            },\n                        });\n                    }\n                });\n            }\n            // We need to correct the dimensions of the parent node if the origin is not [0,0]\n            if (dimensions.width < expandedRect.width || dimensions.height < expandedRect.height || xChange || yChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'dimensions',\n                    setAttributes: true,\n                    dimensions: {\n                        width: newWidth + (xChange ? origin[0] * xChange - widthChange : 0),\n                        height: newHeight + (yChange ? origin[1] * yChange - heightChange : 0),\n                    },\n                });\n            }\n        });\n    }\n    return changes;\n}\nfunction updateNodeInternals(updates, nodeLookup, parentLookup, domNode, nodeOrigin, nodeExtent) {\n    const viewportNode = domNode?.querySelector('.xyflow__viewport');\n    let updatedInternals = false;\n    if (!viewportNode) {\n        return { changes: [], updatedInternals };\n    }\n    const changes = [];\n    const style = window.getComputedStyle(viewportNode);\n    const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n    // in this array we collect nodes, that might trigger changes (like expanding parent)\n    const parentExpandChildren = [];\n    for (const update of updates.values()) {\n        const node = nodeLookup.get(update.id);\n        if (!node) {\n            continue;\n        }\n        if (node.hidden) {\n            nodeLookup.set(node.id, {\n                ...node,\n                internals: {\n                    ...node.internals,\n                    handleBounds: undefined,\n                },\n            });\n            updatedInternals = true;\n            continue;\n        }\n        const dimensions = getDimensions(update.nodeElement);\n        const dimensionChanged = node.measured.width !== dimensions.width || node.measured.height !== dimensions.height;\n        const doUpdate = !!(dimensions.width &&\n            dimensions.height &&\n            (dimensionChanged || !node.internals.handleBounds || update.force));\n        if (doUpdate) {\n            const nodeBounds = update.nodeElement.getBoundingClientRect();\n            const extent = isCoordinateExtent(node.extent) ? node.extent : nodeExtent;\n            let { positionAbsolute } = node.internals;\n            if (node.parentId && node.extent === 'parent') {\n                positionAbsolute = clampPositionToParent(positionAbsolute, dimensions, nodeLookup.get(node.parentId));\n            }\n            else if (extent) {\n                positionAbsolute = clampPosition(positionAbsolute, extent, dimensions);\n            }\n            const newNode = {\n                ...node,\n                measured: dimensions,\n                internals: {\n                    ...node.internals,\n                    positionAbsolute,\n                    handleBounds: {\n                        source: getHandleBounds('source', update.nodeElement, nodeBounds, zoom, node.id),\n                        target: getHandleBounds('target', update.nodeElement, nodeBounds, zoom, node.id),\n                    },\n                },\n            };\n            nodeLookup.set(node.id, newNode);\n            if (node.parentId) {\n                updateChildNode(newNode, nodeLookup, parentLookup, { nodeOrigin });\n            }\n            updatedInternals = true;\n            if (dimensionChanged) {\n                changes.push({\n                    id: node.id,\n                    type: 'dimensions',\n                    dimensions,\n                });\n                if (node.expandParent && node.parentId) {\n                    parentExpandChildren.push({\n                        id: node.id,\n                        parentId: node.parentId,\n                        rect: nodeToRect(newNode, nodeOrigin),\n                    });\n                }\n            }\n        }\n    }\n    if (parentExpandChildren.length > 0) {\n        const parentExpandChanges = handleExpandParent(parentExpandChildren, nodeLookup, parentLookup, nodeOrigin);\n        changes.push(...parentExpandChanges);\n    }\n    return { changes, updatedInternals };\n}\nasync function panBy({ delta, panZoom, transform, translateExtent, width, height, }) {\n    if (!panZoom || (!delta.x && !delta.y)) {\n        return Promise.resolve(false);\n    }\n    const nextViewport = await panZoom.setViewportConstrained({\n        x: transform[0] + delta.x,\n        y: transform[1] + delta.y,\n        zoom: transform[2],\n    }, [\n        [0, 0],\n        [width, height],\n    ], translateExtent);\n    const transformChanged = !!nextViewport &&\n        (nextViewport.x !== transform[0] || nextViewport.y !== transform[1] || nextViewport.k !== transform[2]);\n    return Promise.resolve(transformChanged);\n}\n/**\n * this function adds the connection to the connectionLookup\n * at the following keys: nodeId-type-handleId, nodeId-type and nodeId\n * @param type type of the connection\n * @param connection connection that should be added to the lookup\n * @param connectionKey at which key the connection should be added\n * @param connectionLookup reference to the connection lookup\n * @param nodeId nodeId of the connection\n * @param handleId handleId of the conneciton\n */\nfunction addConnectionToLookup(type, connection, connectionKey, connectionLookup, nodeId, handleId) {\n    /*\n     * We add the connection to the connectionLookup at the following keys\n     * 1. nodeId, 2. nodeId-type, 3. nodeId-type-handleId\n     * If the key already exists, we add the connection to the existing map\n     */\n    let key = nodeId;\n    const nodeMap = connectionLookup.get(key) || new Map();\n    connectionLookup.set(key, nodeMap.set(connectionKey, connection));\n    key = `${nodeId}-${type}`;\n    const typeMap = connectionLookup.get(key) || new Map();\n    connectionLookup.set(key, typeMap.set(connectionKey, connection));\n    if (handleId) {\n        key = `${nodeId}-${type}-${handleId}`;\n        const handleMap = connectionLookup.get(key) || new Map();\n        connectionLookup.set(key, handleMap.set(connectionKey, connection));\n    }\n}\nfunction updateConnectionLookup(connectionLookup, edgeLookup, edges) {\n    connectionLookup.clear();\n    edgeLookup.clear();\n    for (const edge of edges) {\n        const { source: sourceNode, target: targetNode, sourceHandle = null, targetHandle = null } = edge;\n        const connection = { edgeId: edge.id, source: sourceNode, target: targetNode, sourceHandle, targetHandle };\n        const sourceKey = `${sourceNode}-${sourceHandle}--${targetNode}-${targetHandle}`;\n        const targetKey = `${targetNode}-${targetHandle}--${sourceNode}-${sourceHandle}`;\n        addConnectionToLookup('source', connection, targetKey, connectionLookup, sourceNode, sourceHandle);\n        addConnectionToLookup('target', connection, sourceKey, connectionLookup, targetNode, targetHandle);\n        edgeLookup.set(edge.id, edge);\n    }\n}\n\nfunction shallowNodeData(a, b) {\n    if (a === null || b === null) {\n        return false;\n    }\n    const _a = Array.isArray(a) ? a : [a];\n    const _b = Array.isArray(b) ? b : [b];\n    if (_a.length !== _b.length) {\n        return false;\n    }\n    for (let i = 0; i < _a.length; i++) {\n        if (_a[i].id !== _b[i].id || _a[i].type !== _b[i].type || !Object.is(_a[i].data, _b[i].data)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isParentSelected(node, nodeLookup) {\n    if (!node.parentId) {\n        return false;\n    }\n    const parentNode = nodeLookup.get(node.parentId);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeLookup);\n}\nfunction hasSelector(target, selector, domNode) {\n    let current = target;\n    do {\n        if (current?.matches?.(selector))\n            return true;\n        if (current === domNode)\n            return false;\n        current = current?.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeLookup, nodesDraggable, mousePos, nodeId) {\n    const dragItems = new Map();\n    for (const [id, node] of nodeLookup) {\n        if ((node.selected || node.id === nodeId) &&\n            (!node.parentId || !isParentSelected(node, nodeLookup)) &&\n            (node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'))) {\n            const internalNode = nodeLookup.get(id);\n            if (internalNode) {\n                dragItems.set(id, {\n                    id,\n                    position: internalNode.position || { x: 0, y: 0 },\n                    distance: {\n                        x: mousePos.x - internalNode.internals.positionAbsolute.x,\n                        y: mousePos.y - internalNode.internals.positionAbsolute.y,\n                    },\n                    extent: internalNode.extent,\n                    parentId: internalNode.parentId,\n                    origin: internalNode.origin,\n                    expandParent: internalNode.expandParent,\n                    internals: {\n                        positionAbsolute: internalNode.internals.positionAbsolute || { x: 0, y: 0 },\n                    },\n                    measured: {\n                        width: internalNode.measured.width ?? 0,\n                        height: internalNode.measured.height ?? 0,\n                    },\n                });\n            }\n        }\n    }\n    return dragItems;\n}\n/*\n * returns two params:\n * 1. the dragged node (or the first of the list, if we are dragging a node selection)\n * 2. array of selected nodes (for multi selections)\n */\nfunction getEventHandlerParams({ nodeId, dragItems, nodeLookup, dragging = true, }) {\n    const nodesFromDragItems = [];\n    for (const [id, dragItem] of dragItems) {\n        const node = nodeLookup.get(id)?.internals.userNode;\n        if (node) {\n            nodesFromDragItems.push({\n                ...node,\n                position: dragItem.position,\n                dragging,\n            });\n        }\n    }\n    if (!nodeId) {\n        return [nodesFromDragItems[0], nodesFromDragItems];\n    }\n    const node = nodeLookup.get(nodeId)?.internals.userNode;\n    return [\n        !node\n            ? nodesFromDragItems[0]\n            : {\n                ...node,\n                position: dragItems.get(nodeId)?.position || node.position,\n                dragging,\n            },\n        nodesFromDragItems,\n    ];\n}\n/**\n * If a selection is being dragged we want to apply the same snap offset to all nodes in the selection.\n * This function calculates the snap offset based on the first node in the selection.\n */\nfunction calculateSnapOffset({ dragItems, snapGrid, x, y, }) {\n    const refDragItem = dragItems.values().next().value;\n    if (!refDragItem) {\n        return null;\n    }\n    const refPos = {\n        x: x - refDragItem.distance.x,\n        y: y - refDragItem.distance.y,\n    };\n    const refPosSnapped = snapPosition(refPos, snapGrid);\n    return {\n        x: refPosSnapped.x - refPos.x,\n        y: refPosSnapped.y - refPos.y,\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction XYDrag({ onNodeMouseDown, getStoreItems, onDragStart, onDrag, onDragStop, }) {\n    let lastPos = { x: null, y: null };\n    let autoPanId = 0;\n    let dragItems = new Map();\n    let autoPanStarted = false;\n    let mousePosition = { x: 0, y: 0 };\n    let containerBounds = null;\n    let dragStarted = false;\n    let d3Selection = null;\n    let abortDrag = false; // prevents unintentional dragging on multitouch\n    let nodePositionsChanged = false;\n    // we store the last drag event to be able to use it in the update function\n    let dragEvent = null;\n    // public functions\n    function update({ noDragClassName, handleSelector, domNode, isSelectable, nodeId, nodeClickDistance = 0, }) {\n        d3Selection = select(domNode);\n        function updateNodes({ x, y }) {\n            const { nodeLookup, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onNodeDrag, onSelectionDrag, onError, updateNodePositions, } = getStoreItems();\n            lastPos = { x, y };\n            let hasChange = false;\n            const isMultiDrag = dragItems.size > 1;\n            const nodesBox = isMultiDrag && nodeExtent ? rectToBox(getInternalNodesBounds(dragItems)) : null;\n            const multiDragSnapOffset = isMultiDrag && snapToGrid\n                ? calculateSnapOffset({\n                    dragItems,\n                    snapGrid,\n                    x,\n                    y,\n                })\n                : null;\n            for (const [id, dragItem] of dragItems) {\n                /*\n                 * if the node is not in the nodeLookup anymore, it was probably deleted while dragging\n                 */\n                if (!nodeLookup.has(id)) {\n                    continue;\n                }\n                let nextPosition = { x: x - dragItem.distance.x, y: y - dragItem.distance.y };\n                if (snapToGrid) {\n                    nextPosition = multiDragSnapOffset\n                        ? {\n                            x: Math.round(nextPosition.x + multiDragSnapOffset.x),\n                            y: Math.round(nextPosition.y + multiDragSnapOffset.y),\n                        }\n                        : snapPosition(nextPosition, snapGrid);\n                }\n                let adjustedNodeExtent = null;\n                if (isMultiDrag && nodeExtent && !dragItem.extent && nodesBox) {\n                    const { positionAbsolute } = dragItem.internals;\n                    const x1 = positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                    const x2 = positionAbsolute.x + dragItem.measured.width - nodesBox.x2 + nodeExtent[1][0];\n                    const y1 = positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                    const y2 = positionAbsolute.y + dragItem.measured.height - nodesBox.y2 + nodeExtent[1][1];\n                    adjustedNodeExtent = [\n                        [x1, y1],\n                        [x2, y2],\n                    ];\n                }\n                const { position, positionAbsolute } = calculateNodePosition({\n                    nodeId: id,\n                    nextPosition,\n                    nodeLookup,\n                    nodeExtent: adjustedNodeExtent ? adjustedNodeExtent : nodeExtent,\n                    nodeOrigin,\n                    onError,\n                });\n                // we want to make sure that we only fire a change event when there is a change\n                hasChange = hasChange || dragItem.position.x !== position.x || dragItem.position.y !== position.y;\n                dragItem.position = position;\n                dragItem.internals.positionAbsolute = positionAbsolute;\n            }\n            nodePositionsChanged = nodePositionsChanged || hasChange;\n            if (!hasChange) {\n                return;\n            }\n            updateNodePositions(dragItems, true);\n            if (dragEvent && (onDrag || onNodeDrag || (!nodeId && onSelectionDrag))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDrag?.(dragEvent, dragItems, currentNode, currentNodes);\n                onNodeDrag?.(dragEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDrag?.(dragEvent, currentNodes);\n                }\n            }\n        }\n        async function autoPan() {\n            if (!containerBounds) {\n                return;\n            }\n            const { transform, panBy, autoPanSpeed, autoPanOnNodeDrag } = getStoreItems();\n            if (!autoPanOnNodeDrag) {\n                autoPanStarted = false;\n                cancelAnimationFrame(autoPanId);\n                return;\n            }\n            const [xMovement, yMovement] = calcAutoPan(mousePosition, containerBounds, autoPanSpeed);\n            if (xMovement !== 0 || yMovement !== 0) {\n                lastPos.x = (lastPos.x ?? 0) - xMovement / transform[2];\n                lastPos.y = (lastPos.y ?? 0) - yMovement / transform[2];\n                if (await panBy({ x: xMovement, y: yMovement })) {\n                    updateNodes(lastPos);\n                }\n            }\n            autoPanId = requestAnimationFrame(autoPan);\n        }\n        function startDrag(event) {\n            const { nodeLookup, multiSelectionActive, nodesDraggable, transform, snapGrid, snapToGrid, selectNodesOnDrag, onNodeDragStart, onSelectionDragStart, unselectNodesAndEdges, } = getStoreItems();\n            dragStarted = true;\n            if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                if (!nodeLookup.get(nodeId)?.selected) {\n                    // we need to reset selected nodes when selectNodesOnDrag=false\n                    unselectNodesAndEdges();\n                }\n            }\n            if (isSelectable && selectNodesOnDrag && nodeId) {\n                onNodeMouseDown?.(nodeId);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            dragItems = getDragItems(nodeLookup, nodesDraggable, pointerPos, nodeId);\n            if (dragItems.size > 0 && (onDragStart || onNodeDragStart || (!nodeId && onSelectionDragStart))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDragStart?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                onNodeDragStart?.(event.sourceEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDragStart?.(event.sourceEvent, currentNodes);\n                }\n            }\n        }\n        const d3DragInstance = drag()\n            .clickDistance(nodeClickDistance)\n            .on('start', (event) => {\n            const { domNode, nodeDragThreshold, transform, snapGrid, snapToGrid } = getStoreItems();\n            containerBounds = domNode?.getBoundingClientRect() || null;\n            abortDrag = false;\n            nodePositionsChanged = false;\n            dragEvent = event.sourceEvent;\n            if (nodeDragThreshold === 0) {\n                startDrag(event);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n        })\n            .on('drag', (event) => {\n            const { autoPanOnNodeDrag, transform, snapGrid, snapToGrid, nodeDragThreshold, nodeLookup } = getStoreItems();\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            dragEvent = event.sourceEvent;\n            if ((event.sourceEvent.type === 'touchmove' && event.sourceEvent.touches.length > 1) ||\n                // if user deletes a node while dragging, we need to abort the drag to prevent errors\n                (nodeId && !nodeLookup.has(nodeId))) {\n                abortDrag = true;\n            }\n            if (abortDrag) {\n                return;\n            }\n            if (!autoPanStarted && autoPanOnNodeDrag && dragStarted) {\n                autoPanStarted = true;\n                autoPan();\n            }\n            if (!dragStarted) {\n                // Calculate distance in client coordinates for consistent drag threshold behavior across zoom levels\n                const currentMousePosition = getEventPosition(event.sourceEvent, containerBounds);\n                const x = currentMousePosition.x - mousePosition.x;\n                const y = currentMousePosition.y - mousePosition.y;\n                const distance = Math.sqrt(x * x + y * y);\n                if (distance > nodeDragThreshold) {\n                    startDrag(event);\n                }\n            }\n            // skip events without movement\n            if ((lastPos.x !== pointerPos.xSnapped || lastPos.y !== pointerPos.ySnapped) && dragItems && dragStarted) {\n                mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n                updateNodes(pointerPos);\n            }\n        })\n            .on('end', (event) => {\n            if (!dragStarted || abortDrag) {\n                return;\n            }\n            autoPanStarted = false;\n            dragStarted = false;\n            cancelAnimationFrame(autoPanId);\n            if (dragItems.size > 0) {\n                const { nodeLookup, updateNodePositions, onNodeDragStop, onSelectionDragStop } = getStoreItems();\n                if (nodePositionsChanged) {\n                    updateNodePositions(dragItems, false);\n                    nodePositionsChanged = false;\n                }\n                if (onDragStop || onNodeDragStop || (!nodeId && onSelectionDragStop)) {\n                    const [currentNode, currentNodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems,\n                        nodeLookup,\n                        dragging: false,\n                    });\n                    onDragStop?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                    onNodeDragStop?.(event.sourceEvent, currentNode, currentNodes);\n                    if (!nodeId) {\n                        onSelectionDragStop?.(event.sourceEvent, currentNodes);\n                    }\n                }\n            }\n        })\n            .filter((event) => {\n            const target = event.target;\n            const isDraggable = !event.button &&\n                (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, domNode)) &&\n                (!handleSelector || hasSelector(target, handleSelector, domNode));\n            return isDraggable;\n        });\n        d3Selection.call(d3DragInstance);\n    }\n    function destroy() {\n        d3Selection?.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nfunction getNodesWithinDistance(position, nodeLookup, distance) {\n    const nodes = [];\n    const rect = {\n        x: position.x - distance,\n        y: position.y - distance,\n        width: distance * 2,\n        height: distance * 2,\n    };\n    for (const node of nodeLookup.values()) {\n        if (getOverlappingArea(rect, nodeToRect(node)) > 0) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n/*\n * this distance is used for the area around the user pointer\n * while doing a connection for finding the closest nodes\n */\nconst ADDITIONAL_DISTANCE = 250;\nfunction getClosestHandle(position, connectionRadius, nodeLookup, fromHandle) {\n    let closestHandles = [];\n    let minDistance = Infinity;\n    const closeNodes = getNodesWithinDistance(position, nodeLookup, connectionRadius + ADDITIONAL_DISTANCE);\n    for (const node of closeNodes) {\n        const allHandles = [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n        for (const handle of allHandles) {\n            // if the handle is the same as the fromHandle we skip it\n            if (fromHandle.nodeId === handle.nodeId && fromHandle.type === handle.type && fromHandle.id === handle.id) {\n                continue;\n            }\n            // determine absolute position of the handle\n            const { x, y } = getHandlePosition(node, handle, handle.position, true);\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n            if (distance > connectionRadius) {\n                continue;\n            }\n            if (distance < minDistance) {\n                closestHandles = [{ ...handle, x, y }];\n                minDistance = distance;\n            }\n            else if (distance === minDistance) {\n                // when multiple handles are on the same distance we collect all of them\n                closestHandles.push({ ...handle, x, y });\n            }\n        }\n    }\n    if (!closestHandles.length) {\n        return null;\n    }\n    // when multiple handles overlay each other we prefer the opposite handle\n    if (closestHandles.length > 1) {\n        const oppositeHandleType = fromHandle.type === 'source' ? 'target' : 'source';\n        return closestHandles.find((handle) => handle.type === oppositeHandleType) ?? closestHandles[0];\n    }\n    return closestHandles[0];\n}\nfunction getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode, withAbsolutePosition = false) {\n    const node = nodeLookup.get(nodeId);\n    if (!node) {\n        return null;\n    }\n    const handles = connectionMode === 'strict'\n        ? node.internals.handleBounds?.[handleType]\n        : [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n    const handle = (handleId ? handles?.find((h) => h.id === handleId) : handles?.[0]) ?? null;\n    return handle && withAbsolutePosition\n        ? { ...handle, ...getHandlePosition(node, handle, handle.position, true) }\n        : handle;\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction isConnectionValid(isInsideConnectionRadius, isHandleValid) {\n    let isValid = null;\n    if (isHandleValid) {\n        isValid = true;\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        isValid = false;\n    }\n    return isValid;\n}\n\nconst alwaysValid = () => true;\nfunction onPointerDown(event, { connectionMode, connectionRadius, handleId, nodeId, edgeUpdaterType, isTarget, domNode, nodeLookup, lib, autoPanOnConnect, flowId, panBy, cancelConnection, onConnectStart, onConnect, onConnectEnd, isValidConnection = alwaysValid, onReconnectEnd, updateConnection, getTransform, getFromHandle, autoPanSpeed, dragThreshold = 1, handleDomNode, }) {\n    // when xyflow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const handleType = getHandleType(edgeUpdaterType, handleDomNode);\n    const containerBounds = domNode?.getBoundingClientRect();\n    let connectionStarted = false;\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    const fromHandleInternal = getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode);\n    if (!fromHandleInternal) {\n        return;\n    }\n    let position = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let resultHandleDomNode = null;\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    function autoPan() {\n        if (!autoPanOnConnect || !containerBounds) {\n            return;\n        }\n        const [x, y] = calcAutoPan(position, containerBounds, autoPanSpeed);\n        panBy({ x, y });\n        autoPanId = requestAnimationFrame(autoPan);\n    }\n    // Stays the same for all consecutive pointermove events\n    const fromHandle = {\n        ...fromHandleInternal,\n        nodeId,\n        type: handleType,\n        position: fromHandleInternal.position,\n    };\n    const fromNodeInternal = nodeLookup.get(nodeId);\n    const from = getHandlePosition(fromNodeInternal, fromHandle, Position.Left, true);\n    let previousConnection = {\n        inProgress: true,\n        isValid: null,\n        from,\n        fromHandle,\n        fromPosition: fromHandle.position,\n        fromNode: fromNodeInternal,\n        to: position,\n        toHandle: null,\n        toPosition: oppositePosition[fromHandle.position],\n        toNode: null,\n    };\n    function startConnection() {\n        connectionStarted = true;\n        updateConnection(previousConnection);\n        onConnectStart?.(event, { nodeId, handleId, handleType });\n    }\n    if (dragThreshold === 0) {\n        startConnection();\n    }\n    function onPointerMove(event) {\n        if (!connectionStarted) {\n            const { x: evtX, y: evtY } = getEventPosition(event);\n            const dx = evtX - x;\n            const dy = evtY - y;\n            const nextConnectionStarted = dx * dx + dy * dy > dragThreshold * dragThreshold;\n            if (!nextConnectionStarted) {\n                return;\n            }\n            startConnection();\n        }\n        if (!getFromHandle() || !fromHandle) {\n            onPointerUp(event);\n            return;\n        }\n        const transform = getTransform();\n        position = getEventPosition(event, containerBounds);\n        closestHandle = getClosestHandle(pointToRendererPoint(position, transform, false, [1, 1]), connectionRadius, nodeLookup, fromHandle);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, {\n            handle: closestHandle,\n            connectionMode,\n            fromNodeId: nodeId,\n            fromHandleId: handleId,\n            fromType: isTarget ? 'target' : 'source',\n            isValidConnection,\n            doc,\n            lib,\n            flowId,\n            nodeLookup,\n        });\n        resultHandleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = isConnectionValid(!!closestHandle, result.isValid);\n        const newConnection = {\n            // from stays the same\n            ...previousConnection,\n            isValid,\n            to: result.toHandle && isValid\n                ? rendererPointToPoint({ x: result.toHandle.x, y: result.toHandle.y }, transform)\n                : position,\n            toHandle: result.toHandle,\n            toPosition: isValid && result.toHandle ? result.toHandle.position : oppositePosition[fromHandle.position],\n            toNode: result.toHandle ? nodeLookup.get(result.toHandle.nodeId) : null,\n        };\n        /*\n         * we don't want to trigger an update when the connection\n         * is snapped to the same handle as before\n         */\n        if (isValid &&\n            closestHandle &&\n            previousConnection.toHandle &&\n            newConnection.toHandle &&\n            previousConnection.toHandle.type === newConnection.toHandle.type &&\n            previousConnection.toHandle.nodeId === newConnection.toHandle.nodeId &&\n            previousConnection.toHandle.id === newConnection.toHandle.id &&\n            previousConnection.to.x === newConnection.to.x &&\n            previousConnection.to.y === newConnection.to.y) {\n            return;\n        }\n        updateConnection(newConnection);\n        previousConnection = newConnection;\n    }\n    function onPointerUp(event) {\n        // Prevent multi-touch aborting connection\n        if ('touches' in event && event.touches.length > 0) {\n            return;\n        }\n        if (connectionStarted) {\n            if ((closestHandle || resultHandleDomNode) && connection && isValid) {\n                onConnect?.(connection);\n            }\n            /*\n             * it's important to get a fresh reference from the store here\n             * in order to get the latest state of onConnectEnd\n             */\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { inProgress, ...connectionState } = previousConnection;\n            const finalConnectionState = {\n                ...connectionState,\n                toPosition: previousConnection.toHandle ? previousConnection.toPosition : null,\n            };\n            onConnectEnd?.(event, finalConnectionState);\n            if (edgeUpdaterType) {\n                onReconnectEnd?.(event, finalConnectionState);\n            }\n        }\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        resultHandleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, { handle, connectionMode, fromNodeId, fromHandleId, fromType, doc, lib, flowId, isValidConnection = alwaysValid, nodeLookup, }) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = handle\n        ? doc.querySelector(`.${lib}-flow__handle[data-id=\"${flowId}-${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`)\n        : null;\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    /*\n     * we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n     * because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n     */\n    const handleToCheck = handleBelow?.classList.contains(`${lib}-flow__handle`) ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: null,\n        toHandle: null,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        if (!handleNodeId || !handleType) {\n            return result;\n        }\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        result.isValid = isValid && isValidConnection(connection);\n        result.toHandle = getHandle(handleNodeId, handleType, handleId, nodeLookup, connectionMode, true);\n    }\n    return result;\n}\nconst XYHandle = {\n    onPointerDown,\n    isValid: isValidHandle,\n};\n\nfunction XYMinimap({ domNode, panZoom, getTransform, getViewScale }) {\n    const selection = select(domNode);\n    function update({ translateExtent, width, height, zoomStep = 1, pannable = true, zoomable = true, inversePan = false, }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const zoomHandler = (event) => {\n            if (event.sourceEvent.type !== 'wheel' || !panZoom) {\n                return;\n            }\n            const transform = getTransform();\n            const factor = event.sourceEvent.ctrlKey && isMacOs() ? 10 : 1;\n            const pinchDelta = -event.sourceEvent.deltaY *\n                (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                zoomStep;\n            const nextZoom = transform[2] * Math.pow(2, pinchDelta * factor);\n            panZoom.scaleTo(nextZoom);\n        };\n        let panStart = [0, 0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panStartHandler = (event) => {\n            if (event.sourceEvent.type === 'mousedown' || event.sourceEvent.type === 'touchstart') {\n                panStart = [\n                    event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                    event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n                ];\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panHandler = (event) => {\n            const transform = getTransform();\n            if ((event.sourceEvent.type !== 'mousemove' && event.sourceEvent.type !== 'touchmove') || !panZoom) {\n                return;\n            }\n            const panCurrent = [\n                event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n            ];\n            const panDelta = [panCurrent[0] - panStart[0], panCurrent[1] - panStart[1]];\n            panStart = panCurrent;\n            const moveScale = getViewScale() * Math.max(transform[2], Math.log(transform[2])) * (inversePan ? -1 : 1);\n            const position = {\n                x: transform[0] - panDelta[0] * moveScale,\n                y: transform[1] - panDelta[1] * moveScale,\n            };\n            const extent = [\n                [0, 0],\n                [width, height],\n            ];\n            panZoom.setViewportConstrained({\n                x: position.x,\n                y: position.y,\n                zoom: transform[2],\n            }, extent, translateExtent);\n        };\n        const zoomAndPanHandler = zoom()\n            .on('start', panStartHandler)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom', pannable ? panHandler : null)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom.wheel', zoomable ? zoomHandler : null);\n        selection.call(zoomAndPanHandler, {});\n    }\n    function destroy() {\n        selection.on('zoom', null);\n    }\n    return {\n        update,\n        destroy,\n        pointer,\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst transformToViewport = (transform) => ({\n    x: transform.x,\n    y: transform.y,\n    zoom: transform.k,\n});\nconst viewportToTransform = ({ x, y, zoom }) => zoomIdentity.translate(x, y).scale(zoom);\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\n// taken from d3-ease: https://github.com/d3/d3-ease/blob/main/src/cubic.js\nconst defaultEase = (t) => ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\nconst getD3Transition = (selection, duration = 0, ease = defaultEase, onEnd = () => { }) => {\n    const hasDuration = typeof duration === 'number' && duration > 0;\n    if (!hasDuration) {\n        onEnd();\n    }\n    return hasDuration ? selection.transition().duration(duration).ease(ease).on('end', onEnd) : selection;\n};\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\n\nfunction createPanOnScrollHandler({ zoomPanValues, noWheelClassName, d3Selection, d3Zoom, panOnScrollMode, panOnScrollSpeed, zoomOnPinch, onPanZoomStart, onPanZoom, onPanZoomEnd, }) {\n    return (event) => {\n        if (isWrappedWithClass(event, noWheelClassName)) {\n            if (event.ctrlKey) {\n                event.preventDefault(); // stop native page zoom for pinch zooming\n            }\n            return false;\n        }\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        const currentZoom = d3Selection.property('__zoom').k || 1;\n        // macos sets ctrlKey=true for pinch gesture on a trackpad\n        if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n        }\n        /*\n         * increase scroll speed in firefox\n         * firefox: deltaMode === 1; chrome: deltaMode === 0\n         */\n        const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n        let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n        let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n        // this enables vertical scrolling with shift + scroll on windows\n        if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n        }\n        d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n        // @ts-ignore\n        { internal: true });\n        const nextViewport = transformToViewport(d3Selection.property('__zoom'));\n        clearTimeout(zoomPanValues.panScrollTimeout);\n        /*\n         * for pan on scroll we need to handle the event calls on our own\n         * we can't use the start, zoom and end events from d3-zoom\n         * because start and move gets called on every scroll event and not once at the beginning\n         */\n        if (!zoomPanValues.isPanScrolling) {\n            zoomPanValues.isPanScrolling = true;\n            onPanZoomStart?.(event, nextViewport);\n        }\n        if (zoomPanValues.isPanScrolling) {\n            onPanZoom?.(event, nextViewport);\n            zoomPanValues.panScrollTimeout = setTimeout(() => {\n                onPanZoomEnd?.(event, nextViewport);\n                zoomPanValues.isPanScrolling = false;\n            }, 150);\n        }\n    };\n}\nfunction createZoomOnScrollHandler({ noWheelClassName, preventScrolling, d3ZoomHandler }) {\n    return function (event, d) {\n        const isWheel = event.type === 'wheel';\n        // we still want to enable pinch zooming even if preventScrolling is set to false\n        const preventZoom = !preventScrolling && isWheel && !event.ctrlKey;\n        const hasNoWheelClass = isWrappedWithClass(event, noWheelClassName);\n        // if user is pinch zooming above a nowheel element, we don't want the browser to zoom\n        if (event.ctrlKey && isWheel && hasNoWheelClass) {\n            event.preventDefault();\n        }\n        if (preventZoom || hasNoWheelClass) {\n            return null;\n        }\n        event.preventDefault();\n        d3ZoomHandler.call(this, event, d);\n    };\n}\nfunction createPanZoomStartHandler({ zoomPanValues, onDraggingChange, onPanZoomStart }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        const viewport = transformToViewport(event.transform);\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        zoomPanValues.mouseButton = event.sourceEvent?.button || 0;\n        zoomPanValues.isZoomingOrPanning = true;\n        zoomPanValues.prevViewport = viewport;\n        if (event.sourceEvent?.type === 'mousedown') {\n            onDraggingChange(true);\n        }\n        if (onPanZoomStart) {\n            onPanZoomStart?.(event.sourceEvent, viewport);\n        }\n    };\n}\nfunction createPanZoomHandler({ zoomPanValues, panOnDrag, onPaneContextMenu, onTransformChange, onPanZoom, }) {\n    return (event) => {\n        zoomPanValues.usedRightMouseButton = !!(onPaneContextMenu && isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0));\n        if (!event.sourceEvent?.sync) {\n            onTransformChange([event.transform.x, event.transform.y, event.transform.k]);\n        }\n        if (onPanZoom && !event.sourceEvent?.internal) {\n            onPanZoom?.(event.sourceEvent, transformToViewport(event.transform));\n        }\n    };\n}\nfunction createPanZoomEndHandler({ zoomPanValues, panOnDrag, panOnScroll, onDraggingChange, onPanZoomEnd, onPaneContextMenu, }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        zoomPanValues.isZoomingOrPanning = false;\n        if (onPaneContextMenu &&\n            isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0) &&\n            !zoomPanValues.usedRightMouseButton &&\n            event.sourceEvent) {\n            onPaneContextMenu(event.sourceEvent);\n        }\n        zoomPanValues.usedRightMouseButton = false;\n        onDraggingChange(false);\n        if (onPanZoomEnd && viewChanged(zoomPanValues.prevViewport, event.transform)) {\n            const viewport = transformToViewport(event.transform);\n            zoomPanValues.prevViewport = viewport;\n            clearTimeout(zoomPanValues.timerId);\n            zoomPanValues.timerId = setTimeout(() => {\n                onPanZoomEnd?.(event.sourceEvent, viewport);\n            }, \n            // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll\n            panOnScroll ? 150 : 0);\n        }\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createFilter({ zoomActivationKeyPressed, zoomOnScroll, zoomOnPinch, panOnDrag, panOnScroll, zoomOnDoubleClick, userSelectionActive, noWheelClassName, noPanClassName, lib, connectionInProgress, }) {\n    return (event) => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        const isWheelEvent = event.type === 'wheel';\n        if (event.button === 1 &&\n            event.type === 'mousedown' &&\n            (isWrappedWithClass(event, `${lib}-flow__node`) || isWrappedWithClass(event, `${lib}-flow__edge`))) {\n            return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n            return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n            return false;\n        }\n        // we want to disable pinch-zooming while making a connection\n        if (connectionInProgress && !isWheelEvent) {\n            return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && isWheelEvent) {\n            return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) &&\n            (!isWheelEvent || (panOnScroll && isWheelEvent && !zoomActivationKeyPressed))) {\n            return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && isWheelEvent) {\n            return false;\n        }\n        if (!zoomOnPinch && event.type === 'touchstart' && event.touches?.length > 1) {\n            event.preventDefault(); // if you manage to start with 2 touches, we prevent native zoom\n            return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && isWheelEvent) {\n            return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n            return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n            return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || isWheelEvent) && buttonAllowed;\n    };\n}\n\nfunction XYPanZoom({ domNode, minZoom, maxZoom, paneClickDistance, translateExtent, viewport, onPanZoom, onPanZoomStart, onPanZoomEnd, onDraggingChange, }) {\n    const zoomPanValues = {\n        isZoomingOrPanning: false,\n        usedRightMouseButton: false,\n        prevViewport: { x: 0, y: 0, zoom: 0 },\n        mouseButton: 0,\n        timerId: undefined,\n        panScrollTimeout: undefined,\n        isPanScrolling: false,\n    };\n    const bbox = domNode.getBoundingClientRect();\n    const d3ZoomInstance = zoom()\n        .clickDistance(!isNumeric(paneClickDistance) || paneClickDistance < 0 ? 0 : paneClickDistance)\n        .scaleExtent([minZoom, maxZoom])\n        .translateExtent(translateExtent);\n    const d3Selection = select(domNode).call(d3ZoomInstance);\n    setViewportConstrained({\n        x: viewport.x,\n        y: viewport.y,\n        zoom: clamp(viewport.zoom, minZoom, maxZoom),\n    }, [\n        [0, 0],\n        [bbox.width, bbox.height],\n    ], translateExtent);\n    const d3ZoomHandler = d3Selection.on('wheel.zoom');\n    const d3DblClickZoomHandler = d3Selection.on('dblclick.zoom');\n    d3ZoomInstance.wheelDelta(wheelDelta);\n    function setTransform(transform, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.interpolate(options?.interpolate === 'linear' ? interpolate : interpolateZoom).transform(getD3Transition(d3Selection, options?.duration, options?.ease, () => resolve(true)), transform);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    // public functions\n    function update({ noWheelClassName, noPanClassName, onPaneContextMenu, userSelectionActive, panOnScroll, panOnDrag, panOnScrollMode, panOnScrollSpeed, preventScrolling, zoomOnPinch, zoomOnScroll, zoomOnDoubleClick, zoomActivationKeyPressed, lib, onTransformChange, connectionInProgress, }) {\n        if (userSelectionActive && !zoomPanValues.isZoomingOrPanning) {\n            destroy();\n        }\n        const isPanOnScroll = panOnScroll && !zoomActivationKeyPressed && !userSelectionActive;\n        const wheelHandler = isPanOnScroll\n            ? createPanOnScrollHandler({\n                zoomPanValues,\n                noWheelClassName,\n                d3Selection,\n                d3Zoom: d3ZoomInstance,\n                panOnScrollMode,\n                panOnScrollSpeed,\n                zoomOnPinch,\n                onPanZoomStart,\n                onPanZoom,\n                onPanZoomEnd,\n            })\n            : createZoomOnScrollHandler({\n                noWheelClassName,\n                preventScrolling,\n                d3ZoomHandler,\n            });\n        d3Selection.on('wheel.zoom', wheelHandler, { passive: false });\n        if (!userSelectionActive) {\n            // pan zoom start\n            const startHandler = createPanZoomStartHandler({\n                zoomPanValues,\n                onDraggingChange,\n                onPanZoomStart,\n            });\n            d3ZoomInstance.on('start', startHandler);\n            // pan zoom\n            const panZoomHandler = createPanZoomHandler({\n                zoomPanValues,\n                panOnDrag,\n                onPaneContextMenu: !!onPaneContextMenu,\n                onPanZoom,\n                onTransformChange,\n            });\n            d3ZoomInstance.on('zoom', panZoomHandler);\n            // pan zoom end\n            const panZoomEndHandler = createPanZoomEndHandler({\n                zoomPanValues,\n                panOnDrag,\n                panOnScroll,\n                onPaneContextMenu,\n                onPanZoomEnd,\n                onDraggingChange,\n            });\n            d3ZoomInstance.on('end', panZoomEndHandler);\n        }\n        const filter = createFilter({\n            zoomActivationKeyPressed,\n            panOnDrag,\n            zoomOnScroll,\n            panOnScroll,\n            zoomOnDoubleClick,\n            zoomOnPinch,\n            userSelectionActive,\n            noPanClassName,\n            noWheelClassName,\n            lib,\n            connectionInProgress,\n        });\n        d3ZoomInstance.filter(filter);\n        /*\n         * We cannot add zoomOnDoubleClick to the filter above because\n         * double tapping on touch screens circumvents the filter and\n         * dblclick.zoom is fired on the selection directly\n         */\n        if (zoomOnDoubleClick) {\n            d3Selection.on('dblclick.zoom', d3DblClickZoomHandler);\n        }\n        else {\n            d3Selection.on('dblclick.zoom', null);\n        }\n    }\n    function destroy() {\n        d3ZoomInstance.on('zoom', null);\n    }\n    async function setViewportConstrained(viewport, extent, translateExtent) {\n        const nextTransform = viewportToTransform(viewport);\n        const contrainedTransform = d3ZoomInstance?.constrain()(nextTransform, extent, translateExtent);\n        if (contrainedTransform) {\n            await setTransform(contrainedTransform);\n        }\n        return new Promise((resolve) => resolve(contrainedTransform));\n    }\n    async function setViewport(viewport, options) {\n        const nextTransform = viewportToTransform(viewport);\n        await setTransform(nextTransform, options);\n        return new Promise((resolve) => resolve(nextTransform));\n    }\n    function syncViewport(viewport) {\n        if (d3Selection) {\n            const nextTransform = viewportToTransform(viewport);\n            const currentTransform = d3Selection.property('__zoom');\n            if (currentTransform.k !== viewport.zoom ||\n                currentTransform.x !== viewport.x ||\n                currentTransform.y !== viewport.y) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                d3ZoomInstance?.transform(d3Selection, nextTransform, null, { sync: true });\n            }\n        }\n    }\n    function getViewport() {\n        const transform = d3Selection ? zoomTransform(d3Selection.node()) : { x: 0, y: 0, k: 1 };\n        return { x: transform.x, y: transform.y, zoom: transform.k };\n    }\n    function scaleTo(zoom, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.interpolate(options?.interpolate === 'linear' ? interpolate : interpolateZoom).scaleTo(getD3Transition(d3Selection, options?.duration, options?.ease, () => resolve(true)), zoom);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function scaleBy(factor, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.interpolate(options?.interpolate === 'linear' ? interpolate : interpolateZoom).scaleBy(getD3Transition(d3Selection, options?.duration, options?.ease, () => resolve(true)), factor);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function setScaleExtent(scaleExtent) {\n        d3ZoomInstance?.scaleExtent(scaleExtent);\n    }\n    function setTranslateExtent(translateExtent) {\n        d3ZoomInstance?.translateExtent(translateExtent);\n    }\n    function setClickDistance(distance) {\n        const validDistance = !isNumeric(distance) || distance < 0 ? 0 : distance;\n        d3ZoomInstance?.clickDistance(validDistance);\n    }\n    return {\n        update,\n        destroy,\n        setViewport,\n        setViewportConstrained,\n        getViewport,\n        scaleTo,\n        scaleBy,\n        setScaleExtent,\n        setTranslateExtent,\n        syncViewport,\n        setClickDistance,\n    };\n}\n\n/**\n * Used to determine the variant of the resize control\n *\n * @public\n */\nvar ResizeControlVariant;\n(function (ResizeControlVariant) {\n    ResizeControlVariant[\"Line\"] = \"line\";\n    ResizeControlVariant[\"Handle\"] = \"handle\";\n})(ResizeControlVariant || (ResizeControlVariant = {}));\nconst XY_RESIZER_HANDLE_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nconst XY_RESIZER_LINE_POSITIONS = ['top', 'right', 'bottom', 'left'];\n\n/**\n * Get all connecting edges for a given set of nodes\n * @param width - new width of the node\n * @param prevWidth - previous width of the node\n * @param height - new height of the node\n * @param prevHeight - previous height of the node\n * @param affectsX - whether to invert the resize direction for the x axis\n * @param affectsY - whether to invert the resize direction for the y axis\n * @returns array of two numbers representing the direction of the resize for each axis, 0 = no change, 1 = increase, -1 = decrease\n */\nfunction getResizeDirection({ width, prevWidth, height, prevHeight, affectsX, affectsY, }) {\n    const deltaWidth = width - prevWidth;\n    const deltaHeight = height - prevHeight;\n    const direction = [deltaWidth > 0 ? 1 : deltaWidth < 0 ? -1 : 0, deltaHeight > 0 ? 1 : deltaHeight < 0 ? -1 : 0];\n    if (deltaWidth && affectsX) {\n        direction[0] = direction[0] * -1;\n    }\n    if (deltaHeight && affectsY) {\n        direction[1] = direction[1] * -1;\n    }\n    return direction;\n}\n/**\n * Parses the control position that is being dragged to dimensions that are being resized\n * @param controlPosition - position of the control that is being dragged\n * @returns isHorizontal, isVertical, affectsX, affectsY,\n */\nfunction getControlDirection(controlPosition) {\n    const isHorizontal = controlPosition.includes('right') || controlPosition.includes('left');\n    const isVertical = controlPosition.includes('bottom') || controlPosition.includes('top');\n    const affectsX = controlPosition.includes('left');\n    const affectsY = controlPosition.includes('top');\n    return {\n        isHorizontal,\n        isVertical,\n        affectsX,\n        affectsY,\n    };\n}\nfunction getLowerExtentClamp(lowerExtent, lowerBound) {\n    return Math.max(0, lowerBound - lowerExtent);\n}\nfunction getUpperExtentClamp(upperExtent, upperBound) {\n    return Math.max(0, upperExtent - upperBound);\n}\nfunction getSizeClamp(size, minSize, maxSize) {\n    return Math.max(0, minSize - size, size - maxSize);\n}\nfunction xor(a, b) {\n    return a ? !b : b;\n}\n/**\n * Calculates new width & height and x & y of node after resize based on pointer position\n * @description - Buckle up, this is a chunky one... If you want to determine the new dimensions of a node after a resize,\n * you have to account for all possible restrictions: min/max width/height of the node, the maximum extent the node is allowed\n * to move in (in this case: resize into) determined by the parent node, the minimal extent determined by child nodes\n * with expandParent or extent: 'parent' set and oh yeah, these things also have to work with keepAspectRatio!\n * The way this is done is by determining how much each of these restricting actually restricts the resize and then applying the\n * strongest restriction. Because the resize affects x, y and width, height and width, height of a opposing side with keepAspectRatio,\n * the resize amount is always kept in distX & distY amount (the distance in mouse movement)\n * Instead of clamping each value, we first calculate the biggest 'clamp' (for the lack of a better name) and then apply it to all values.\n * To complicate things nodeOrigin has to be taken into account as well. This is done by offsetting the nodes as if their origin is [0, 0],\n * then calculating the restrictions as usual\n * @param startValues - starting values of resize\n * @param controlDirection - dimensions affected by the resize\n * @param pointerPosition - the current pointer position corrected for snapping\n * @param boundaries - minimum and maximum dimensions of the node\n * @param keepAspectRatio - prevent changes of asprect ratio\n * @returns x, y, width and height of the node after resize\n */\nfunction getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, extent, childExtent) {\n    let { affectsX, affectsY } = controlDirection;\n    const { isHorizontal, isVertical } = controlDirection;\n    const isDiagonal = isHorizontal && isVertical;\n    const { xSnapped, ySnapped } = pointerPosition;\n    const { minWidth, maxWidth, minHeight, maxHeight } = boundaries;\n    const { x: startX, y: startY, width: startWidth, height: startHeight, aspectRatio } = startValues;\n    let distX = Math.floor(isHorizontal ? xSnapped - startValues.pointerX : 0);\n    let distY = Math.floor(isVertical ? ySnapped - startValues.pointerY : 0);\n    const newWidth = startWidth + (affectsX ? -distX : distX);\n    const newHeight = startHeight + (affectsY ? -distY : distY);\n    const originOffsetX = -nodeOrigin[0] * startWidth;\n    const originOffsetY = -nodeOrigin[1] * startHeight;\n    // Check if maxWidth, minWWidth, maxHeight, minHeight are restricting the resize\n    let clampX = getSizeClamp(newWidth, minWidth, maxWidth);\n    let clampY = getSizeClamp(newHeight, minHeight, maxHeight);\n    // Check if extent is restricting the resize\n    if (extent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + distX + originOffsetX, extent[0][0]);\n        }\n        else if (!affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + newWidth + originOffsetX, extent[1][0]);\n        }\n        if (affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + distY + originOffsetY, extent[0][1]);\n        }\n        else if (!affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + newHeight + originOffsetY, extent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the child extent is restricting the resize\n    if (childExtent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + distX, childExtent[0][0]);\n        }\n        else if (!affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + newWidth, childExtent[1][0]);\n        }\n        if (affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + distY, childExtent[0][1]);\n        }\n        else if (!affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + newHeight, childExtent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the aspect ratio resizing of the other side is restricting the resize\n    if (keepAspectRatio) {\n        if (isHorizontal) {\n            // Check if the max dimensions might be restricting the resize\n            const aspectHeightClamp = getSizeClamp(newWidth / aspectRatio, minHeight, maxHeight) * aspectRatio;\n            clampX = Math.max(clampX, aspectHeightClamp);\n            // Check if the extent is restricting the resize\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + originOffsetY + newWidth / aspectRatio, extent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startY + originOffsetY + (affectsX ? distX : -distX) / aspectRatio, extent[0][1]) *\n                            aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n            // Check if the child extent is restricting the resize\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startY + newWidth / aspectRatio, childExtent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + (affectsX ? distX : -distX) / aspectRatio, childExtent[0][1]) * aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n        }\n        // Do the same thing for vertical resizing\n        if (isVertical) {\n            const aspectWidthClamp = getSizeClamp(newHeight * aspectRatio, minWidth, maxWidth) / aspectRatio;\n            clampY = Math.max(clampY, aspectWidthClamp);\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + newHeight * aspectRatio + originOffsetX, extent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio + originOffsetX, extent[0][0]) /\n                            aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startX + newHeight * aspectRatio, childExtent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio, childExtent[0][0]) / aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n        }\n    }\n    distY = distY + (distY < 0 ? clampY : -clampY);\n    distX = distX + (distX < 0 ? clampX : -clampX);\n    if (keepAspectRatio) {\n        if (isDiagonal) {\n            if (newWidth > newHeight * aspectRatio) {\n                distY = (xor(affectsX, affectsY) ? -distX : distX) / aspectRatio;\n            }\n            else {\n                distX = (xor(affectsX, affectsY) ? -distY : distY) * aspectRatio;\n            }\n        }\n        else {\n            if (isHorizontal) {\n                distY = distX / aspectRatio;\n                affectsY = affectsX;\n            }\n            else {\n                distX = distY * aspectRatio;\n                affectsX = affectsY;\n            }\n        }\n    }\n    const x = affectsX ? startX + distX : startX;\n    const y = affectsY ? startY + distY : startY;\n    return {\n        width: startWidth + (affectsX ? -distX : distX),\n        height: startHeight + (affectsY ? -distY : distY),\n        x: nodeOrigin[0] * distX * (!affectsX ? 1 : -1) + x,\n        y: nodeOrigin[1] * distY * (!affectsY ? 1 : -1) + y,\n    };\n}\n\nconst initPrevValues = { width: 0, height: 0, x: 0, y: 0 };\nconst initStartValues = {\n    ...initPrevValues,\n    pointerX: 0,\n    pointerY: 0,\n    aspectRatio: 1,\n};\nfunction nodeToParentExtent(node) {\n    return [\n        [0, 0],\n        [node.measured.width, node.measured.height],\n    ];\n}\nfunction nodeToChildExtent(child, parent, nodeOrigin) {\n    const x = parent.position.x + child.position.x;\n    const y = parent.position.y + child.position.y;\n    const width = child.measured.width ?? 0;\n    const height = child.measured.height ?? 0;\n    const originOffsetX = nodeOrigin[0] * width;\n    const originOffsetY = nodeOrigin[1] * height;\n    return [\n        [x - originOffsetX, y - originOffsetY],\n        [x + width - originOffsetX, y + height - originOffsetY],\n    ];\n}\nfunction XYResizer({ domNode, nodeId, getStoreItems, onChange, onEnd }) {\n    const selection = select(domNode);\n    function update({ controlPosition, boundaries, keepAspectRatio, resizeDirection, onResizeStart, onResize, onResizeEnd, shouldResize, }) {\n        let prevValues = { ...initPrevValues };\n        let startValues = { ...initStartValues };\n        const controlDirection = getControlDirection(controlPosition);\n        let node = undefined;\n        let containerBounds = null;\n        let childNodes = [];\n        let parentNode = undefined; // Needed to fix expandParent\n        let parentExtent = undefined;\n        let childExtent = undefined;\n        // we only want to trigger onResizeEnd if onResize was actually called\n        let resizeDetected = false;\n        const dragHandler = drag()\n            .on('start', (event) => {\n            const { nodeLookup, transform, snapGrid, snapToGrid, nodeOrigin, paneDomNode } = getStoreItems();\n            node = nodeLookup.get(nodeId);\n            if (!node) {\n                return;\n            }\n            containerBounds = paneDomNode?.getBoundingClientRect() ?? null;\n            const { xSnapped, ySnapped } = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            prevValues = {\n                width: node.measured.width ?? 0,\n                height: node.measured.height ?? 0,\n                x: node.position.x ?? 0,\n                y: node.position.y ?? 0,\n            };\n            startValues = {\n                ...prevValues,\n                pointerX: xSnapped,\n                pointerY: ySnapped,\n                aspectRatio: prevValues.width / prevValues.height,\n            };\n            parentNode = undefined;\n            if (node.parentId && (node.extent === 'parent' || node.expandParent)) {\n                parentNode = nodeLookup.get(node.parentId);\n                parentExtent = parentNode && node.extent === 'parent' ? nodeToParentExtent(parentNode) : undefined;\n            }\n            /*\n             * Collect all child nodes to correct their relative positions when top/left changes\n             * Determine largest minimal extent the parent node is allowed to resize to\n             */\n            childNodes = [];\n            childExtent = undefined;\n            for (const [childId, child] of nodeLookup) {\n                if (child.parentId === nodeId) {\n                    childNodes.push({\n                        id: childId,\n                        position: { ...child.position },\n                        extent: child.extent,\n                    });\n                    if (child.extent === 'parent' || child.expandParent) {\n                        const extent = nodeToChildExtent(child, node, child.origin ?? nodeOrigin);\n                        if (childExtent) {\n                            childExtent = [\n                                [Math.min(extent[0][0], childExtent[0][0]), Math.min(extent[0][1], childExtent[0][1])],\n                                [Math.max(extent[1][0], childExtent[1][0]), Math.max(extent[1][1], childExtent[1][1])],\n                            ];\n                        }\n                        else {\n                            childExtent = extent;\n                        }\n                    }\n                }\n            }\n            onResizeStart?.(event, { ...prevValues });\n        })\n            .on('drag', (event) => {\n            const { transform, snapGrid, snapToGrid, nodeOrigin: storeNodeOrigin } = getStoreItems();\n            const pointerPosition = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            const childChanges = [];\n            if (!node) {\n                return;\n            }\n            const { x: prevX, y: prevY, width: prevWidth, height: prevHeight } = prevValues;\n            const change = {};\n            const nodeOrigin = node.origin ?? storeNodeOrigin;\n            const { width, height, x, y } = getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, parentExtent, childExtent);\n            const isWidthChange = width !== prevWidth;\n            const isHeightChange = height !== prevHeight;\n            const isXPosChange = x !== prevX && isWidthChange;\n            const isYPosChange = y !== prevY && isHeightChange;\n            if (!isXPosChange && !isYPosChange && !isWidthChange && !isHeightChange) {\n                return;\n            }\n            if (isXPosChange || isYPosChange || nodeOrigin[0] === 1 || nodeOrigin[1] === 1) {\n                change.x = isXPosChange ? x : prevValues.x;\n                change.y = isYPosChange ? y : prevValues.y;\n                prevValues.x = change.x;\n                prevValues.y = change.y;\n                /*\n                 * when top/left changes, correct the relative positions of child nodes\n                 * so that they stay in the same position\n                 */\n                if (childNodes.length > 0) {\n                    const xChange = x - prevX;\n                    const yChange = y - prevY;\n                    for (const childNode of childNodes) {\n                        childNode.position = {\n                            x: childNode.position.x - xChange + nodeOrigin[0] * (width - prevWidth),\n                            y: childNode.position.y - yChange + nodeOrigin[1] * (height - prevHeight),\n                        };\n                        childChanges.push(childNode);\n                    }\n                }\n            }\n            if (isWidthChange || isHeightChange) {\n                change.width =\n                    isWidthChange && (!resizeDirection || resizeDirection === 'horizontal') ? width : prevValues.width;\n                change.height =\n                    isHeightChange && (!resizeDirection || resizeDirection === 'vertical') ? height : prevValues.height;\n                prevValues.width = change.width;\n                prevValues.height = change.height;\n            }\n            // Fix expandParent when resizing from top/left\n            if (parentNode && node.expandParent) {\n                const xLimit = nodeOrigin[0] * (change.width ?? 0);\n                if (change.x && change.x < xLimit) {\n                    prevValues.x = xLimit;\n                    startValues.x = startValues.x - (change.x - xLimit);\n                }\n                const yLimit = nodeOrigin[1] * (change.height ?? 0);\n                if (change.y && change.y < yLimit) {\n                    prevValues.y = yLimit;\n                    startValues.y = startValues.y - (change.y - yLimit);\n                }\n            }\n            const direction = getResizeDirection({\n                width: prevValues.width,\n                prevWidth,\n                height: prevValues.height,\n                prevHeight,\n                affectsX: controlDirection.affectsX,\n                affectsY: controlDirection.affectsY,\n            });\n            const nextValues = { ...prevValues, direction };\n            const callResize = shouldResize?.(event, nextValues);\n            if (callResize === false) {\n                return;\n            }\n            resizeDetected = true;\n            onResize?.(event, nextValues);\n            onChange(change, childChanges);\n        })\n            .on('end', (event) => {\n            if (!resizeDetected) {\n                return;\n            }\n            onResizeEnd?.(event, { ...prevValues });\n            onEnd?.({ ...prevValues });\n            resizeDetected = false;\n        });\n        selection.call(dragHandler);\n    }\n    function destroy() {\n        selection.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nexport { ConnectionLineType, ConnectionMode, MarkerType, PanOnScrollMode, Position, ResizeControlVariant, SelectionMode, XYDrag, XYHandle, XYMinimap, XYPanZoom, XYResizer, XY_RESIZER_HANDLE_POSITIONS, XY_RESIZER_LINE_POSITIONS, addEdge, adoptUserNodes, areConnectionMapsEqual, areSetsEqual, boxToRect, calcAutoPan, calculateNodePosition, clamp, clampPosition, clampPositionToParent, createMarkerIds, defaultAriaLabelConfig, devWarn, elementSelectionKeys, errorMessages, evaluateAbsolutePosition, fitViewport, getBezierEdgeCenter, getBezierPath, getBoundsOfBoxes, getBoundsOfRects, getConnectedEdges, getConnectionStatus, getDimensions, getEdgeCenter, getEdgePosition, getElementsToRemove, getElevatedEdgeZIndex, getEventPosition, getHandleBounds, getHandlePosition, getHostForElement, getIncomers, getInternalNodesBounds, getMarkerId, getNodeDimensions, getNodePositionWithOrigin, getNodeToolbarTransform, getNodesBounds, getNodesInside, getOutgoers, getOverlappingArea, getPointerPosition, getSmoothStepPath, getStraightPath, getViewportForBounds, handleConnectionChange, handleExpandParent, infiniteExtent, initialConnection, isCoordinateExtent, isEdgeBase, isEdgeVisible, isInputDOMNode, isInternalNodeBase, isMacOs, isMouseEvent, isNodeBase, isNumeric, isRectObject, mergeAriaLabelConfig, nodeHasDimensions, nodeToBox, nodeToRect, oppositePosition, panBy, pointToRendererPoint, reconnectEdge, rectToBox, rendererPointToPoint, shallowNodeData, snapPosition, updateAbsolutePositions, updateConnectionLookup, updateNodeInternals, withResolvers };\n","/**\r\n * FlowInstance - Core wrapper around @xyflow/system\r\n * This class provides the main API for interacting with the flow\r\n */\r\n\r\nimport { XYPanZoom } from '@xyflow/system';\r\nimport type { PanOnScrollMode, Transform } from '@xyflow/system';\r\nimport type { Node, Edge, FlowOptions, FlowState, InternalNode, Viewport } from './types';\r\n\r\nexport class FlowInstance {\r\n  private container: HTMLElement | null = null;\r\n  private state: FlowState = {\r\n    nodes: [],\r\n    edges: [],\r\n    viewport: { x: 0, y: 0, zoom: 1 },\r\n    nodeLookup: new Map(),\r\n    edgeLookup: new Map()\r\n  };\r\n  private subscribers: Set<(state: FlowState) => void> = new Set();\r\n  private panZoomInstance: ReturnType<typeof XYPanZoom> | null = null;\r\n  private options: FlowOptions;\r\n  \r\n  // Track nodes that are pending rendering\r\n  private pendingNodes: string[] = [];\r\n\r\n  constructor(options: FlowOptions = {}) {\r\n    this.options = {\r\n      minZoom: 0.5,\r\n      maxZoom: 2,\r\n      defaultZoom: 1,\r\n      nodesDraggable: true,\r\n      nodesConnectable: true,\r\n      elementsSelectable: true,\r\n      ...options\r\n    };\r\n    \r\n    this.state.nodes = options.nodes || [];\r\n    this.state.edges = options.edges || [];\r\n    this.updateLookups();\r\n  }\r\n\r\n  mount(container: HTMLElement) {\r\n    this.container = container;\r\n    \r\n    // Initialize XYPanZoom for viewport control\r\n    this.panZoomInstance = XYPanZoom({\r\n      domNode: container,\r\n      minZoom: this.options.minZoom || 0.5,\r\n      maxZoom: this.options.maxZoom || 2,\r\n      paneClickDistance: 0,\r\n      translateExtent: [[-Infinity, -Infinity], [Infinity, Infinity]],\r\n      viewport: this.state.viewport,\r\n      onDraggingChange: (isDragging: boolean) => {\r\n        // Toggle panning cursor\r\n        this.container?.classList.toggle('panning', isDragging);\r\n      },\r\n      onPanZoom: (_event, viewport) => {\r\n        this.state.viewport = viewport;\r\n        this.notifySubscribers();\r\n      },\r\n      onPanZoomStart: (_event, _viewport) => {\r\n        // Handle pan/zoom start\r\n      },\r\n      onPanZoomEnd: (_event, _viewport) => {\r\n        // Handle pan/zoom end\r\n      }\r\n    });\r\n\r\n    // Enable panning/zooming interactions\r\n    this.panZoomInstance.update({\r\n      noWheelClassName: 'nowheel',\r\n      noPanClassName: 'nopan',\r\n      onPaneContextMenu: undefined,\r\n      preventScrolling: true,\r\n      panOnScroll: true,\r\n      panOnDrag: true,\r\n      panOnScrollMode: 'free' as unknown as PanOnScrollMode,\r\n      panOnScrollSpeed: 0.8,\r\n      userSelectionActive: false,\r\n      zoomOnPinch: true,\r\n      zoomOnScroll: true,\r\n      zoomOnDoubleClick: true,\r\n      zoomActivationKeyPressed: false,\r\n      lib: 'lit-flow',\r\n      onTransformChange: (_t: Transform) => {},\r\n      connectionInProgress: false,\r\n    });\r\n\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  destroy() {\r\n    this.panZoomInstance?.destroy();\r\n    this.panZoomInstance = null;\r\n    this.container = null;\r\n    this.subscribers.clear();\r\n  }\r\n\r\n  getState(): FlowState {\r\n    return this.state;\r\n  }\r\n\r\n  get nodes(): Node[] {\r\n    return this.state.nodes;\r\n  }\r\n\r\n  get edges(): Edge[] {\r\n    return this.state.edges;\r\n  }\r\n\r\n  getViewport(): Viewport {\r\n    return this.state.viewport;\r\n  }\r\n\r\n  setViewport(viewport: Viewport) {\r\n    this.state.viewport = viewport;\r\n    this.panZoomInstance?.setViewport?.(viewport);\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  setNodes(nodes: Node[]) {\r\n    // Register all node IDs as pending\r\n    this.pendingNodes.push(...nodes.map(node => node.id));\r\n    \r\n    this.state.nodes = nodes;\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  setEdges(edges: Edge[]) {\r\n    this.retryEdgeRendering(edges);\r\n  }\r\n\r\n  updateNode(id: string, updates: Partial<Node>) {\r\n    this.state.nodes = this.state.nodes.map(node => \r\n      node.id === id ? { ...node, ...updates } : node\r\n    );\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  updateEdge(id: string, updates: Partial<Edge>) {\r\n    this.state.edges = this.state.edges.map(edge => \r\n      edge.id === id ? { ...edge, ...updates } : edge\r\n    );\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  addNode(node: Node) {\r\n    this.state.nodes = [...this.state.nodes, node];\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  removeNode(id: string) {\r\n    this.state.nodes = this.state.nodes.filter(node => node.id !== id);\r\n    // Also remove connected edges\r\n    this.state.edges = this.state.edges.filter(\r\n      edge => edge.source !== id && edge.target !== id\r\n    );\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  addEdge(edge: Edge) {\r\n    this.state.edges = [...this.state.edges, edge];\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  removeEdge(id: string) {\r\n    this.state.edges = this.state.edges.filter(edge => edge.id !== id);\r\n    this.updateLookups();\r\n    this.notifySubscribers();\r\n  }\r\n\r\n  subscribe(callback: (state: FlowState) => void): () => void {\r\n    this.subscribers.add(callback);\r\n    return () => this.subscribers.delete(callback);\r\n  }\r\n\r\n  zoomIn() {\r\n    const currentZoom = this.state.viewport.zoom;\r\n    const newZoom = Math.min(currentZoom * 1.2, this.options.maxZoom || 2);\r\n    this.setViewport({ ...this.state.viewport, zoom: newZoom });\r\n  }\r\n\r\n  zoomOut() {\r\n    const currentZoom = this.state.viewport.zoom;\r\n    const newZoom = Math.max(currentZoom / 1.2, this.options.minZoom || 0.5);\r\n    this.setViewport({ ...this.state.viewport, zoom: newZoom });\r\n  }\r\n\r\n  fitView() {\r\n    if (this.state.nodes.length === 0 || !this.container) return;\r\n\r\n    // Calculate bounds of all nodes\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n    \r\n    this.state.nodes.forEach(node => {\r\n      const width = node.measured?.width || node.width || 150;\r\n      const height = node.measured?.height || node.height || 50;\r\n      \r\n      minX = Math.min(minX, node.position.x);\r\n      minY = Math.min(minY, node.position.y);\r\n      maxX = Math.max(maxX, node.position.x + width);\r\n      maxY = Math.max(maxY, node.position.y + height);\r\n    });\r\n\r\n    const bounds = {\r\n      x: minX,\r\n      y: minY,\r\n      width: maxX - minX,\r\n      height: maxY - minY\r\n    };\r\n\r\n    const containerWidth = this.container.clientWidth;\r\n    const containerHeight = this.container.clientHeight;\r\n    \r\n    const padding = 50;\r\n    const zoomX = (containerWidth - padding * 2) / bounds.width;\r\n    const zoomY = (containerHeight - padding * 2) / bounds.height;\r\n    const zoom = Math.min(zoomX, zoomY, this.options.maxZoom || 2);\r\n\r\n    const x = (containerWidth - bounds.width * zoom) / 2 - bounds.x * zoom;\r\n    const y = (containerHeight - bounds.height * zoom) / 2 - bounds.y * zoom;\r\n\r\n    this.setViewport({ x, y, zoom });\r\n  }\r\n\r\n  private updateLookups() {\r\n    // Update node lookup\r\n    this.state.nodeLookup.clear();\r\n    this.state.nodes.forEach(node => {\r\n      const internalNode: InternalNode = {\r\n        ...node,\r\n        measured: node.measured || { width: node.width, height: node.height },\r\n        internals: {\r\n          positionAbsolute: node.position,\r\n          z: node.zIndex || 0,\r\n          userNode: node\r\n        }\r\n      };\r\n      this.state.nodeLookup.set(node.id, internalNode);\r\n    });\r\n\r\n    // Update edge lookup\r\n    this.state.edgeLookup.clear();\r\n    this.state.edges.forEach(edge => {\r\n      this.state.edgeLookup.set(edge.id, edge);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if a node is fully rendered\r\n   */\r\n  private isNodeRendered(nodeId: string): boolean {\r\n    if (!this.container) return false;\r\n    const nodeEl = this.container.querySelector(`[id=\"${CSS.escape(nodeId)}\"]`) as HTMLElement | null;\r\n    if (!nodeEl) return false;\r\n    \r\n    const rect = nodeEl.getBoundingClientRect();\r\n    return rect.width > 0 && rect.height > 0;\r\n  }\r\n\r\n  /**\r\n   * Check if any of the required nodes are still pending\r\n   */\r\n  private hasPendingNodes(nodeIds: string[]): boolean {\r\n    return nodeIds.some(id => this.pendingNodes.includes(id) || !this.isNodeRendered(id));\r\n  }\r\n\r\n  /**\r\n   * Remove node from pending list when it's rendered\r\n   */\r\n  private markNodeAsRendered(nodeId: string) {\r\n    const index = this.pendingNodes.indexOf(nodeId);\r\n    if (index > -1) {\r\n      this.pendingNodes.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retry edge rendering with delay if nodes are still pending\r\n   */\r\n  private retryEdgeRendering(edges: Edge[], retryCount: number = 0, maxRetries: number = 10) {\r\n    const allNodeIds = edges.flatMap(edge => [edge.source, edge.target]);\r\n    const uniqueNodeIds = [...new Set(allNodeIds)];\r\n    \r\n    if (this.hasPendingNodes(uniqueNodeIds) && retryCount < maxRetries) {\r\n      setTimeout(() => {\r\n        this.retryEdgeRendering(edges, retryCount + 1, maxRetries);\r\n      }, 100);\r\n    } else {\r\n      // All nodes are rendered, proceed with edge rendering\r\n      this.state.edges = edges;\r\n      this.updateLookups();\r\n      this.notifySubscribers();\r\n      \r\n      // Mark nodes as rendered\r\n      uniqueNodeIds.forEach(id => this.markNodeAsRendered(id));\r\n    }\r\n  }\r\n\r\n  private notifySubscribers() {\r\n    this.subscribers.forEach(callback => callback(this.state));\r\n  }\r\n}\r\n\r\n","/**\r\n * Store utilities for managing flow state\r\n * Placeholder for future state management integration with @xyflow/system\r\n */\r\n\r\nimport type { FlowState, InternalNode, Node, Edge } from './types';\r\n\r\nexport function createStore(initialState: Partial<FlowState> = {}) {\r\n  const state: FlowState = {\r\n    nodes: initialState.nodes || [],\r\n    edges: initialState.edges || [],\r\n    viewport: initialState.viewport || { x: 0, y: 0, zoom: 1 },\r\n    nodeLookup: new Map(),\r\n    edgeLookup: new Map()\r\n  };\r\n\r\n  const listeners = new Set<(state: FlowState) => void>();\r\n\r\n  const updateLookups = () => {\r\n    state.nodeLookup.clear();\r\n    state.nodes.forEach((node: Node) => {\r\n      const internalNode: InternalNode = {\r\n        ...node,\r\n        measured: node.measured || { width: node.width, height: node.height },\r\n        internals: {\r\n          positionAbsolute: node.position,\r\n          z: node.zIndex || 0,\r\n          userNode: node\r\n        }\r\n      };\r\n      state.nodeLookup.set(node.id, internalNode);\r\n    });\r\n\r\n    state.edgeLookup.clear();\r\n    state.edges.forEach((edge: Edge) => {\r\n      state.edgeLookup.set(edge.id, edge);\r\n    });\r\n  };\r\n\r\n  // initialize lookups based on provided initial state\r\n  updateLookups();\r\n\r\n  return {\r\n    getState: () => state,\r\n    setState: (updates: Partial<FlowState>) => {\r\n      Object.assign(state, updates);\r\n      updateLookups();\r\n      listeners.forEach(listener => listener(state));\r\n    },\r\n    subscribe: (listener: (state: FlowState) => void) => {\r\n      listeners.add(listener);\r\n      return () => listeners.delete(listener);\r\n    }\r\n  };\r\n}\r\n\r\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e;const r=h.fromAttribute(s,t.type);this[e]=r??this._$Ej?.get(e)??r,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.1\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.1\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.1\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import{html as t,svg as r,mathml as e}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst a=Symbol.for(\"\"),o=t=>{if(t?.r===a)return t?._$litStatic$},s=t=>({_$litStatic$:t,r:a}),i=(t,...r)=>({_$litStatic$:r.reduce(((r,e,a)=>r+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\\n            take care to ensure page security.`)})(e)+t[a+1]),t[0]),r:a}),l=new Map,n=t=>(r,...e)=>{const a=e.length;let s,i;const n=[],u=[];let c,$=0,f=!1;for(;$<a;){for(c=r[$];$<a&&void 0!==(i=e[$],s=o(i));)c+=s+r[++$],f=!0;$!==a&&u.push(i),n.push(c),$++}if($===a&&n.push(r[a]),f){const t=n.join(\"$$lit$$\");void 0===(r=l.get(t))&&(n.raw=n,l.set(t,r=n)),e=u}return t(r,...e)},u=n(t),c=n(r),$=n(e);export{u as html,i as literal,$ as mathml,c as svg,s as unsafeStatic,n as withStatic};\n//# sourceMappingURL=static.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as e,Directive as r,PartType as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const n=\"important\",i=\" !\"+n,o=e(class extends r{constructor(t){if(super(t),t.type!==s.ATTRIBUTE||\"style\"!==t.name||t.strings?.length>2)throw Error(\"The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.\")}render(t){return Object.keys(t).reduce(((e,r)=>{const s=t[r];return null==s?e:e+`${r=r.includes(\"-\")?r:r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g,\"-$&\").toLowerCase()}:${s};`}),\"\")}update(e,[r]){const{style:s}=e.element;if(void 0===this.ft)return this.ft=new Set(Object.keys(r)),this.render(r);for(const t of this.ft)null==r[t]&&(this.ft.delete(t),t.includes(\"-\")?s.removeProperty(t):s[t]=null);for(const t in r){const e=r[t];if(null!=e){this.ft.add(t);const r=\"string\"==typeof e&&e.endsWith(i);t.includes(\"-\")||r?s.setProperty(t,r?e.slice(0,-11):e,r?n:\"\"):s[t]=e}}return t}});export{o as styleMap};\n//# sourceMappingURL=style-map.js.map\n","/**\r\n * Geometry utilities for calculating positions, paths, and intersections\r\n * Wraps @xyflow/system utilities for Lit integration\r\n */\r\n\r\nimport { \r\n  getBezierPath as getSystemBezierPath,\r\n  getSmoothStepPath as getSystemSmoothStepPath,\r\n  getStraightPath as getSystemStraightPath,\r\n  Position\r\n} from '@xyflow/system';\r\nimport type { XYPosition } from '../core/types';\r\n\r\n/**\r\n * Calculate distance between two points\r\n */\r\nexport function getDistance(a: XYPosition, b: XYPosition): number {\r\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n}\r\n\r\n/**\r\n * Calculate the center point between two positions\r\n */\r\nexport function getCenter(a: XYPosition, b: XYPosition): XYPosition {\r\n  return {\r\n    x: (a.x + b.x) / 2,\r\n    y: (a.y + b.y) / 2,\r\n  };\r\n}\r\n\r\n/**\r\n * Generate a bezier curve path between two points\r\n * Uses @xyflow/system's getBezierPath utility\r\n */\r\nexport function getBezierPath(params: {\r\n  sourceX: number;\r\n  sourceY: number;\r\n  sourcePosition?: Position;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetPosition?: Position;\r\n  curvature?: number;\r\n}): [path: string, labelX: number, labelY: number, offsetX: number, offsetY: number] {\r\n  return getSystemBezierPath(params);\r\n}\r\n\r\n/**\r\n * Generate a smooth step path between two points\r\n * Uses @xyflow/system's getSmoothStepPath utility\r\n */\r\nexport function getSmoothStepPath(params: {\r\n  sourceX: number;\r\n  sourceY: number;\r\n  sourcePosition?: Position;\r\n  targetX: number;\r\n  targetY: number;\r\n  targetPosition?: Position;\r\n  borderRadius?: number;\r\n  offset?: number;\r\n}): [path: string, labelX: number, labelY: number, offsetX: number, offsetY: number] {\r\n  return getSystemSmoothStepPath(params);\r\n}\r\n\r\n/**\r\n * Generate a straight line path\r\n * Uses @xyflow/system's getStraightPath utility\r\n */\r\nexport function getStraightPath(params: {\r\n  sourceX: number;\r\n  sourceY: number;\r\n  targetX: number;\r\n  targetY: number;\r\n}): [path: string, labelX: number, labelY: number, offsetX: number, offsetY: number] {\r\n  return getSystemStraightPath(params);\r\n}\r\n\r\n/**\r\n * Check if a point is inside a rectangle\r\n */\r\nexport function isPointInRect(\r\n  point: XYPosition,\r\n  rect: { x: number; y: number; width: number; height: number }\r\n): boolean {\r\n  return (\r\n    point.x >= rect.x &&\r\n    point.x <= rect.x + rect.width &&\r\n    point.y >= rect.y &&\r\n    point.y <= rect.y + rect.height\r\n  );\r\n}\r\n\r\n// Re-export Position enum from @xyflow/system\r\nexport { Position };\r\n\r\n","/**\n * FlowCanvas - Main container component for the flow diagram\n * This is the root element that manages the viewport and renders nodes/edges\n */\n\nimport { LitElement, css } from 'lit';\nimport { html, svg, unsafeStatic } from 'lit/static-html.js';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { FlowInstance } from '../core/flow-instance';\nimport type { Node, Edge, Viewport } from '../core/types';\nimport { getBezierPath, Position } from '../utils/geometry';\n\n@customElement('flow-canvas')\nexport class FlowCanvas extends LitElement {\n  protected createRenderRoot() {\n    return super.createRenderRoot();\n  }\n  static styles = css`\n    :host {\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: relative;\n      overflow: hidden;\n      background: var(--flow-background-color, #fafafa);\n    }\n\n    .flow-container {\n      width: 100%;\n      height: 100%;\n      position: relative;\n      cursor: grab;\n    }\n\n    .flow-container.panning {\n      cursor: grabbing;\n    }\n\n    .flow-viewport {\n      width: 100%;\n      height: 100%;\n      position: relative;\n      transform-origin: 0 0;\n      will-change: transform;\n    }\n\n    .flow-nodes-layer {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n    }\n\n    .flow-edges-layer {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n       pointer-events: none;\n    }\n\n    .flow-labels-overlay {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n    }\n\n    .edge-label {\n      position: absolute;\n      transform: translate(-50%, -50%);\n      background: white;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      padding: 2px 6px;\n      font-size: 12px;\n      color: #333;\n      pointer-events: all;\n      white-space: nowrap;\n      user-select: none;\n    }\n  `;\n\n  @property({ type: Array }) nodes: Node[] = [];\n  @property({ type: Array }) edges: Edge[] = [];\n  @property({ type: Object }) viewport: Viewport = { x: 0, y: 0, zoom: 1 };\n  \n  // Node type registry (maps type name to tag name)\n  @property({ type: Object }) nodeTypes: Record<string, string> = {\n    'default': 'flow-node',\n    'shape': 'shape-node',\n    'erd-table': 'erd-table-node'\n  };\n\n  private connection: { \n    from?: { nodeId: string; handleId?: string }; \n    to?: { nodeId: string; handleId?: string }; \n    preview?: { x: number; y: number } \n  } | null = null;\n\n\n\n  private getNodeGeom(nodeId: string): { left: { x: number; y: number }; right: { x: number; y: number } } | null {\n    const el = this.renderRoot.querySelector(`flow-node[id=\"${CSS.escape(nodeId)}\"]`) as HTMLElement | null;\n    const viewportEl = this.renderRoot.querySelector('.flow-viewport') as HTMLElement | null;\n    if (!el || !viewportEl) return null;\n    const rect = el.getBoundingClientRect();\n    const vpRect = viewportEl.getBoundingClientRect();\n    const z = this.viewport.zoom || 1;\n    const x = (rect.left - vpRect.left - this.viewport.x) / z;\n    const y = (rect.top - vpRect.top - this.viewport.y) / z;\n    const w = rect.width / z;\n    const h = rect.height / z;\n    const cy = y + h / 2;\n    return { left: { x: x, y: cy }, right: { x: x + w, y: cy } };\n  }\n\n  /**\n   * Get handle position in canvas coordinates\n   */\n  private getHandleCanvasPosition(nodeId: string, handleId: string): { x: number; y: number } | null {\n    const nodeEl = this.renderRoot.querySelector(`[id=\"${CSS.escape(nodeId)}\"]`) as HTMLElement | null;\n    if (!nodeEl) return null;\n\n    // Find handle element in shadow root or light DOM\n    let handleEl: HTMLElement | null = null;\n    const shadowRoot = nodeEl.shadowRoot;\n    if (shadowRoot) {\n      handleEl = shadowRoot.querySelector(`[data-handle-id=\"${CSS.escape(handleId)}\"]`) as HTMLElement;\n    }\n    if (!handleEl) {\n      handleEl = nodeEl.querySelector(`[data-handle-id=\"${CSS.escape(handleId)}\"]`) as HTMLElement;\n    }\n    if (!handleEl) return null;\n\n    // Get node data\n    const node = this.nodes.find(n => n.id === nodeId);\n    if (!node) return null;\n\n    // For shape nodes, calculate handle position based on shape size and handle type\n    if (node.type === 'shape') {\n      console.log('getHandleCanvasPosition for shape node:', { nodeId, handleId, node });\n      return this.getShapeHandlePosition(node, handleId);\n    }\n\n    // For regular nodes, use the existing method\n    const nodeRect = nodeEl.getBoundingClientRect();\n    const handleRect = handleEl.getBoundingClientRect();\n    const zoom = this.viewport.zoom || 1;\n    \n    const offsetX = (handleRect.left + handleRect.width / 2 - nodeRect.left) / zoom;\n    const offsetY = (handleRect.top + handleRect.height / 2 - nodeRect.top) / zoom;\n    \n    return {\n      x: node.position.x + offsetX,\n      y: node.position.y + offsetY\n    };\n  }\n\n  /**\n   * Get handle position for shape nodes based on shape size and handle type\n   */\n  private getShapeHandlePosition(node: any, handleId: string): { x: number; y: number } | null {\n    const shapeData = node.data;\n    if (!shapeData) return null;\n\n    const size = shapeData.size || { width: 200, height: 200 };\n    const width = size.width;\n    const height = size.height;\n\n    // Parse handle ID to determine position\n    // Handle IDs are like: \"shape-1-source-right\", \"shape-1-target-left\", etc.\n    const parts = handleId.split('-');\n    const handleType = parts[parts.length - 1]; // Get last part (right, left, top, bottom)\n    \n    console.log('getShapeHandlePosition:', { handleId, parts, handleType, node: node.id, size });\n    \n    let offsetX = 0;\n    let offsetY = 0;\n\n    switch (handleType) {\n      case 'right':\n        offsetX = width;\n        offsetY = height / 2;\n        break;\n      case 'left':\n        offsetX = 0;\n        offsetY = height / 2;\n        break;\n      case 'top':\n        offsetX = width / 2;\n        offsetY = 0;\n        break;\n      case 'bottom':\n        offsetX = width / 2;\n        offsetY = height;\n        break;\n      default:\n        // Fallback to center\n        offsetX = width / 2;\n        offsetY = height / 2;\n    }\n\n    const result = {\n      x: node.position.x + offsetX,\n      y: node.position.y + offsetY\n    };\n    \n    console.log('getShapeHandlePosition result:', { \n      nodeId: node.id, \n      position: node.position, \n      offsetX, \n      offsetY, \n      result \n    });\n    \n    return result;\n  }\n\n  setNodes(nodes: Node[]) {\n    this.instance.setNodes(nodes);\n  }\n\n  setEdges(edges: Edge[]) {\n    this.instance.setEdges(edges);\n  }\n\n  /**\n   * Determine the best target handle for a shape node based on connection direction\n   */\n  private determineBestTargetHandle(sourceNodeId: string, targetNodeId: string): string {\n    const sourceNode = this.nodes.find(n => n.id === sourceNodeId);\n    const targetNode = this.nodes.find(n => n.id === targetNodeId);\n    \n    if (!sourceNode || !targetNode) return `${targetNodeId}-target-left`;\n    \n    // Calculate relative positions\n    const sourceX = sourceNode.position.x;\n    const sourceY = sourceNode.position.y;\n    const targetX = targetNode.position.x;\n    const targetY = targetNode.position.y;\n    \n    // Get target node dimensions\n    const targetData = targetNode.data as any;\n    const targetWidth = targetData?.size?.width || 200;\n    const targetHeight = targetData?.size?.height || 200;\n    \n    // Calculate center positions\n    const sourceCenterX = sourceX + (sourceNode.width || 150) / 2;\n    const sourceCenterY = sourceY + (sourceNode.height || 50) / 2;\n    const targetCenterX = targetX + targetWidth / 2;\n    const targetCenterY = targetY + targetHeight / 2;\n    \n    // Determine connection direction\n    const deltaX = targetCenterX - sourceCenterX;\n    const deltaY = targetCenterY - sourceCenterY;\n    \n    // Choose target handle based on direction\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      // Horizontal connection\n      return deltaX > 0 ? `${targetNodeId}-target-left` : `${targetNodeId}-target-right`;\n    } else {\n      // Vertical connection\n      return deltaY > 0 ? `${targetNodeId}-target-top` : `${targetNodeId}-target-bottom`;\n    }\n  }\n\n  private computeLabelCanvasPosition(edge: Edge): { x: number; y: number } | null {\n    const sourceNode = this.nodes.find(n => n.id === edge.source);\n    const targetNode = this.nodes.find(n => n.id === edge.target);\n    if (!sourceNode || !targetNode) return null;\n    \n    // Try to use specific handle positions if available\n    let sourceX: number, sourceY: number;\n    let targetX: number, targetY: number;\n\n    if (edge.sourceHandle) {\n      const handlePos = this.getHandleCanvasPosition(edge.source, edge.sourceHandle);\n      if (handlePos) {\n        sourceX = handlePos.x;\n        sourceY = handlePos.y;\n      } else {\n        // Fallback to node edge\n        const sourceWidth = sourceNode.measured?.width || sourceNode.width || 150;\n        const sourceHeight = sourceNode.measured?.height || sourceNode.height || 50;\n        sourceX = sourceNode.position.x + sourceWidth;\n        sourceY = sourceNode.position.y + sourceHeight / 2;\n      }\n    } else {\n      const sourceWidth = sourceNode.measured?.width || sourceNode.width || 150;\n      const sourceHeight = sourceNode.measured?.height || sourceNode.height || 50;\n      sourceX = sourceNode.position.x + sourceWidth;\n      sourceY = sourceNode.position.y + sourceHeight / 2;\n    }\n\n    if (edge.targetHandle) {\n      const handlePos = this.getHandleCanvasPosition(edge.target, edge.targetHandle);\n      if (handlePos) {\n        targetX = handlePos.x;\n        targetY = handlePos.y;\n      } else {\n        // Fallback to node edge\n        targetX = targetNode.position.x;\n        const targetHeight = targetNode.measured?.height || targetNode.height || 50;\n        targetY = targetNode.position.y + targetHeight / 2;\n      }\n    } else {\n      targetX = targetNode.position.x;\n      const targetHeight = targetNode.measured?.height || targetNode.height || 50;\n      targetY = targetNode.position.y + targetHeight / 2;\n    }\n    \n    const [, labelX, labelY] = getBezierPath({\n      sourceX,\n      sourceY,\n      sourcePosition: Position.Right,\n      targetX,\n      targetY,\n      targetPosition: Position.Left,\n    });\n    \n    return { x: labelX, y: labelY };\n  }\n\n  private computeStartLabelCanvasPosition(edge: Edge): { x: number; y: number } | null {\n    const sourceNode = this.nodes.find(n => n.id === edge.source);\n    if (!sourceNode) return null;\n    \n    let sourceX: number, sourceY: number;\n\n    if (edge.sourceHandle) {\n      const handlePos = this.getHandleCanvasPosition(edge.source, edge.sourceHandle);\n      if (handlePos) {\n        sourceX = handlePos.x;\n        sourceY = handlePos.y;\n      } else {\n        const sourceWidth = sourceNode.measured?.width || sourceNode.width || 150;\n        const sourceHeight = sourceNode.measured?.height || sourceNode.height || 50;\n        sourceX = sourceNode.position.x + sourceWidth;\n        sourceY = sourceNode.position.y + sourceHeight / 2;\n      }\n    } else {\n      const sourceWidth = sourceNode.measured?.width || sourceNode.width || 150;\n      const sourceHeight = sourceNode.measured?.height || sourceNode.height || 50;\n      sourceX = sourceNode.position.x + sourceWidth;\n      sourceY = sourceNode.position.y + sourceHeight / 2;\n    }\n    \n    return { x: sourceX + 12, y: sourceY - 10 };\n  }\n\n  private computeEndLabelCanvasPosition(edge: Edge): { x: number; y: number } | null {\n    const targetNode = this.nodes.find(n => n.id === edge.target);\n    if (!targetNode) return null;\n    \n    let targetX: number, targetY: number;\n\n    if (edge.targetHandle) {\n      const handlePos = this.getHandleCanvasPosition(edge.target, edge.targetHandle);\n      if (handlePos) {\n        targetX = handlePos.x;\n        targetY = handlePos.y;\n      } else {\n        const targetHeight = targetNode.measured?.height || targetNode.height || 50;\n        targetX = targetNode.position.x;\n        targetY = targetNode.position.y + targetHeight / 2;\n      }\n    } else {\n      const targetHeight = targetNode.measured?.height || targetNode.height || 50;\n      targetX = targetNode.position.x;\n      targetY = targetNode.position.y + targetHeight / 2;\n    }\n    \n    return { x: targetX - 12, y: targetY - 10 };\n  }\n\n  instance: FlowInstance;\n  private unsubscribe?: () => void;\n\n  constructor() {\n    super();\n    this.instance = new FlowInstance({ nodes: this.nodes, edges: this.edges });\n  }\n\n  firstUpdated() {\n    const container = this.renderRoot.querySelector('.flow-container') as HTMLElement;\n    if (container) {\n      this.instance.mount(container);\n      this.unsubscribe = this.instance.subscribe((state) => {\n        this.nodes = state.nodes;\n        this.edges = state.edges;\n        this.viewport = state.viewport;\n        this.requestUpdate();\n      });\n      container.addEventListener('mousemove', this.onMouseMove);\n      window.addEventListener('mouseup', this.onMouseUp);\n      \n      // Add selection event listeners\n      container.addEventListener('node-select', this.onNodeSelect as EventListener);\n      // Edge events come from light DOM, so listen on document\n      document.addEventListener('edge-select', this.onEdgeSelect as EventListener);\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.unsubscribe?.();\n    this.instance.destroy();\n    const container = this.renderRoot.querySelector('.flow-container') as HTMLElement | null;\n    container?.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mouseup', this.onMouseUp);\n    container?.removeEventListener('node-select', this.onNodeSelect as EventListener);\n    document.removeEventListener('edge-select', this.onEdgeSelect as EventListener);\n  }\n\n  /**\n   * Renders a node with dynamic tag name based on node type\n   * Falls back to 'flow-node' if type is not registered\n   */\n  private renderNode(node: Node) {\n    // Get the tag name for this node type, or use default 'flow-node'\n    const nodeType = node.type || 'default';\n    const tagName = this.nodeTypes[nodeType] || 'flow-node';\n    \n    // Use lit-html's unsafeStatic to render dynamic tag names\n    const tag = unsafeStatic(tagName);\n    \n    return html`\n      <${tag}\n        .id=${node.id}\n        .data=${node.data}\n        .position=${node.position}\n        .selected=${node.selected || false}\n        .draggable=${node.draggable !== false}\n        .connectable=${node.connectable !== false}\n        .resizable=${node.resizable || false}\n        .instance=${this.instance}\n        @handle-start=${this.onHandleStart}\n      ></${tag}>\n    `;\n  }\n\n  render() {\n    const transform = `translate(${this.viewport.x}px, ${this.viewport.y}px) scale(${this.viewport.zoom})`;\n    \n    return html`\n      <div class=\"flow-container\">\n        <slot name=\"background\"></slot>\n        <div \n          class=\"flow-viewport\" \n          style=${styleMap({ transform })}\n        >\n          <div class=\"flow-edges-layer\">\n            ${this.edges.map(edge => {\n              const sourceNode = this.nodes.find(n => n.id === edge.source);\n              const targetNode = this.nodes.find(n => n.id === edge.target);\n              \n              if (!sourceNode || !targetNode) return null;\n              \n              return html`\n                <flow-edge \n                  .id=${edge.id}\n                  .source=${edge.source}\n                  .target=${edge.target}\n                  .sourceHandle=${edge.sourceHandle}\n                  .targetHandle=${edge.targetHandle}\n                  .sourceNode=${sourceNode}\n                  .targetNode=${targetNode}\n                  .animated=${edge.animated || false}\n                  .label=${(edge as any).label || ''}\n                  .type=${edge.type || 'default'}\n                  .markerStart=${edge.markerStart}\n                  .markerEnd=${edge.markerEnd}\n                ></flow-edge>\n              `;\n            })}\n            ${this.renderPreviewEdge()}\n          </div>\n          <div class=\"flow-nodes-layer\">\n            ${this.nodes.map(node => this.renderNode(node))}\n          </div>\n          <div class=\"flow-labels-overlay\">\n            ${this.edges.map(edge => {\n              const labelHtml = (edge.data && (edge.data as any).labelHtml) as string | undefined;\n              const labelText = (edge.data && (edge.data as any).label) as string | undefined;\n              const hasCenter = !!labelHtml || !!labelText;\n              if (!hasCenter) return null;\n              const pos = this.computeLabelCanvasPosition(edge);\n              if (!pos) return null;\n              const style = `transform: translate(-50%, -50%) translate(${pos.x}px, ${pos.y}px);`;\n              return labelHtml\n                ? html`<div class=\"edge-label\" style=\"${style}\" .innerHTML=${labelHtml}></div>`\n                : html`<div class=\"edge-label\" style=\"${style}\">${labelText}</div>`;\n            })}\n            ${this.edges.map(edge => {\n              const startHtml = (edge.data && (edge.data as any).startLabelHtml) as string | undefined;\n              const startText = (edge.data && (edge.data as any).startLabel) as string | undefined;\n              if (!startHtml && !startText) return null;\n              const pos = this.computeStartLabelCanvasPosition(edge);\n              if (!pos) return null;\n              const style = `transform: translate(-50%, -50%) translate(${pos.x}px, ${pos.y}px);`;\n              return startHtml\n                ? html`<div class=\"edge-label\" style=\"${style}\" .innerHTML=${startHtml}></div>`\n                : html`<div class=\"edge-label\" style=\"${style}\">${startText}</div>`;\n            })}\n            ${this.edges.map(edge => {\n              const endHtml = (edge.data && (edge.data as any).endLabelHtml) as string | undefined;\n              const endText = (edge.data && (edge.data as any).endLabel) as string | undefined;\n              if (!endHtml && !endText) return null;\n              const pos = this.computeEndLabelCanvasPosition(edge);\n              if (!pos) return null;\n              const style = `transform: translate(-50%, -50%) translate(${pos.x}px, ${pos.y}px);`;\n              return endHtml\n                ? html`<div class=\"edge-label\" style=\"${style}\" .innerHTML=${endHtml}></div>`\n                : html`<div class=\"edge-label\" style=\"${style}\">${endText}</div>`;\n            })}\n          </div>\n        </div>\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private screenToCanvas(x: number, y: number) {\n    const container = this.renderRoot.querySelector('.flow-container') as HTMLElement | null;\n    if (!container) return { x, y };\n    const rect = container.getBoundingClientRect();\n    const vx = this.viewport.x;\n    const vy = this.viewport.y;\n    const z = this.viewport.zoom || 1;\n    return { x: (x - rect.left - vx) / z, y: (y - rect.top - vy) / z };\n  }\n\n  private onHandleStart = (e: CustomEvent<{ nodeId: string; type: 'source' | 'target'; handleId?: string }>) => {\n    const { nodeId, type, handleId } = e.detail;\n    // Always start a connection FROM this handle, regardless of its type\n    // The handle type will be determined by the connection direction\n    this.connection = { from: { nodeId, handleId } };\n  };\n\n  private onMouseMove = (e: MouseEvent) => {\n    if (!this.connection) return;\n    const p = this.screenToCanvas(e.clientX, e.clientY);\n    this.connection.preview = p;\n    this.requestUpdate();\n  };\n\n  private onMouseUp = (e: MouseEvent) => {\n    if (!this.connection) return;\n\n    const path = e.composedPath() as EventTarget[];\n    let targetEl: HTMLElement | null = null;\n    let targetHandleId: string | undefined;\n    \n    // Find target node element (can be flow-node or any custom node type)\n    for (const t of path) {\n      if (t instanceof HTMLElement) {\n        const tagName = t.tagName.toLowerCase();\n        // Check if it's a node element (flow-node or any registered custom node type)\n        if (tagName === 'flow-node' || Object.values(this.nodeTypes).some(tag => tag === tagName)) {\n          targetEl = t;\n          break;\n        }\n        // Check if it's a handle element\n        if (t.dataset.handleId) {\n          targetHandleId = t.dataset.handleId;\n        }\n      }\n    }\n    const targetId = targetEl?.getAttribute('id') || undefined;\n\n    // Handle connection completion - always from a source handle to a target handle\n    if (this.connection.from && targetId && targetId !== this.connection.from.nodeId) {\n      const newEdgeId = `e-${this.connection.from.nodeId}-${targetId}-${Date.now()}`;\n      const sourceNodeId = this.connection.from.nodeId;\n      const sourceHandleId = this.connection.from.handleId;\n      \n      // If no target handle was found, determine the best target handle for shape nodes\n      let finalTargetHandleId = targetHandleId;\n      if (!finalTargetHandleId) {\n        const targetNode = this.nodes.find(n => n.id === targetId);\n        if (targetNode && targetNode.type === 'shape') {\n          finalTargetHandleId = this.determineBestTargetHandle(sourceNodeId, targetId);\n          console.log('Auto-determined target handle:', { sourceNodeId, targetId, finalTargetHandleId });\n        }\n      }\n      \n      // Use the instance method which handles retry logic automatically\n      this.instance.addEdge({ \n        id: newEdgeId, \n        source: sourceNodeId, \n        target: targetId, \n        sourceHandle: sourceHandleId,\n        targetHandle: finalTargetHandleId,\n        data: {} \n      });\n    }\n\n    this.connection = null;\n    this.requestUpdate();\n  };\n\n  private onNodeSelect = (e: CustomEvent<{ nodeId: string; selected: boolean; node: any }>) => {\n    const { nodeId, selected, node } = e.detail;\n    \n    // Update the node selection state in the instance\n    this.instance.updateNode(nodeId, { selected });\n    \n    // Dispatch a higher-level selection event from flow-canvas\n    this.dispatchEvent(new CustomEvent('node-selected', {\n      detail: {\n        nodeId,\n        selected,\n        node,\n        allSelectedNodes: this.nodes.filter(n => n.selected)\n      },\n      bubbles: true,\n      composed: true\n    }));\n  };\n\n  private onEdgeSelect = (e: CustomEvent<{ edgeId: string; selected: boolean; edge: any }>) => {\n    const { edgeId, selected, edge } = e.detail;\n    \n    // Update the edge selection state in the instance\n    this.instance.updateEdge(edgeId, { selected });\n    \n    // Dispatch a higher-level selection event from flow-canvas\n    this.dispatchEvent(new CustomEvent('edge-selected', {\n      detail: {\n        edgeId,\n        selected,\n        edge,\n        allSelectedEdges: this.edges.filter(e => e.selected)\n      },\n      bubbles: true,\n      composed: true\n    }));\n  };\n\n  private renderPreviewEdge() {\n    if (!this.connection || !this.connection.preview) return null;\n\n    const preview = this.connection.preview;\n    const nodeFrom = this.connection.from ? this.nodes.find(n => n.id === this.connection!.from!.nodeId) : null;\n    const nodeTo = this.connection.to ? this.nodes.find(n => n.id === this.connection!.to!.nodeId) : null;\n\n    if (nodeFrom) {\n      return html`\n        <flow-edge\n          .id=${'preview'}\n          .source=${nodeFrom.id}\n          .target=${'__preview__'}\n          .sourceHandle=${this.connection.from?.handleId}\n          .sourceNode=${{ ...nodeFrom, position: nodeFrom.position } as any}\n          .targetNode=${{ id: '__preview__', position: { x: preview.x, y: preview.y }, width: 1, height: 1, data: {} } as any}\n          .animated=${true}\n          .label=${''}\n        ></flow-edge>\n      `;\n    }\n\n    if (nodeTo) {\n      return html`\n        <flow-edge\n          .id=${'preview'}\n          .source=${'__preview__'}\n          .target=${nodeTo.id}\n          .sourceNode=${{ id: '__preview__', position: { x: preview.x, y: preview.y }, width: 1, height: 1, data: {} } as any}\n          .targetHandle=${this.connection.to?.handleId}\n          .targetNode=${{ ...nodeTo, position: nodeTo.position } as any}\n          .animated=${true}\n          .label=${''}\n        ></flow-edge>\n      `;\n    }\n\n    return null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flow-canvas': FlowCanvas;\n  }\n}\n\n","/**\r\n * NodeResizer - A modular resize component that can be added to any node\r\n * Inspired by React Flow's NodeResizer component\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\n@customElement('node-resizer')\r\nexport class NodeResizer extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      pointer-events: none;\r\n      z-index: 10;\r\n    }\r\n\r\n    .resize-handle {\r\n      position: absolute;\r\n      background: var(--flow-node-selected-color, #1a73e8);\r\n      border: 2px solid #fff;\r\n      border-radius: 2px;\r\n      opacity: 0;\r\n      transition: opacity 0.2s ease;\r\n      pointer-events: auto;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .resize-handle:hover {\r\n      opacity: 1;\r\n    }\r\n\r\n    :host([visible]) .resize-handle {\r\n      opacity: 1;\r\n    }\r\n\r\n    .resize-handle.nw {\r\n      top: -8px;\r\n      left: -8px;\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: nw-resize;\r\n    }\r\n\r\n    .resize-handle.ne {\r\n      top: -8px;\r\n      right: -8px;\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: ne-resize;\r\n    }\r\n\r\n    .resize-handle.sw {\r\n      bottom: -8px;\r\n      left: -8px;\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: sw-resize;\r\n    }\r\n\r\n    .resize-handle.se {\r\n      bottom: -8px;\r\n      right: -8px;\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: se-resize;\r\n    }\r\n\r\n    .resize-handle.n {\r\n      top: -8px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: n-resize;\r\n    }\r\n\r\n    .resize-handle.s {\r\n      bottom: -8px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: s-resize;\r\n    }\r\n\r\n    .resize-handle.w {\r\n      top: 50%;\r\n      left: -8px;\r\n      transform: translateY(-50%);\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: w-resize;\r\n    }\r\n\r\n    .resize-handle.e {\r\n      top: 50%;\r\n      right: -8px;\r\n      transform: translateY(-50%);\r\n      width: 12px;\r\n      height: 12px;\r\n      cursor: e-resize;\r\n    }\r\n\r\n    .resize-border {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      border: 1px dashed var(--flow-node-selected-color, #1a73e8);\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    }\r\n\r\n    :host([visible]) .resize-border {\r\n      opacity: 1;\r\n    }\r\n  `;\r\n\r\n  @property({ type: Boolean, reflect: true }) visible = false;\r\n  @property({ type: Number }) minWidth = 10;\r\n  @property({ type: Number }) minHeight = 10;\r\n  @property({ type: Number }) maxWidth = Number.MAX_VALUE;\r\n  @property({ type: Number }) maxHeight = Number.MAX_VALUE;\r\n  @property({ type: Boolean }) keepAspectRatio = false;\r\n\r\n  private isResizing = false;\r\n  private resizeStart = { x: 0, y: 0, width: 0, height: 0 };\r\n  private resizeHandle = '';\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.addEventListener('mousedown', this.handleMouseDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.removeEventListener('mousedown', this.handleMouseDown);\r\n    this.cleanup();\r\n  }\r\n\r\n  private cleanup() {\r\n    document.removeEventListener('mousemove', this.handleMouseMove);\r\n    document.removeEventListener('mouseup', this.handleMouseUp);\r\n  }\r\n\r\n  private handleMouseDown = (e: MouseEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    console.log('NodeResizer handleMouseDown:', target, target.classList);\r\n    \r\n    // Check if the target is a resize handle\r\n    // If target is the host element, check if the event originated from a resize handle in shadow DOM\r\n    let isResizeHandle = target.classList.contains('resize-handle');\r\n    \r\n    if (!isResizeHandle && target === this) {\r\n      // If target is the host element, check if the event came from a resize handle\r\n      const path = e.composedPath();\r\n      isResizeHandle = path.some(el => \r\n        el instanceof HTMLElement && el.classList.contains('resize-handle')\r\n      );\r\n    }\r\n    \r\n    console.log('Is resize handle:', isResizeHandle);\r\n    if (!isResizeHandle) return;\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n\r\n    this.isResizing = true;\r\n    \r\n    // Get the parent element (host of the shadow root)\r\n    const parentElement = (this.getRootNode() as ShadowRoot).host as HTMLElement;\r\n    \r\n    this.resizeStart = {\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      width: parentElement?.offsetWidth || 0,\r\n      height: parentElement?.offsetHeight || 0\r\n    };\r\n    // Get the handle direction from the actual resize handle element\r\n    let resizeHandleEl: HTMLElement | null = null;\r\n    \r\n    if (target.classList.contains('resize-handle')) {\r\n      resizeHandleEl = target;\r\n    } else if (target === this) {\r\n      // Find the resize handle in the composed path\r\n      const path = e.composedPath();\r\n      resizeHandleEl = path.find(el => \r\n        el instanceof HTMLElement && el.classList.contains('resize-handle')\r\n      ) as HTMLElement || null;\r\n    }\r\n    \r\n    if (resizeHandleEl) {\r\n      const classes = Array.from(resizeHandleEl.classList);\r\n      this.resizeHandle = classes.find(cls => cls !== 'resize-handle') || '';\r\n      console.log('Resize handle direction:', this.resizeHandle);\r\n    }\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMove);\r\n    document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n    console.log({\r\n        width: this.resizeStart.width,\r\n        height: this.resizeStart.height\r\n      })\r\n\r\n    // Dispatch resize start event\r\n    this.dispatchEvent(new CustomEvent('resize-start', {\r\n      detail: {\r\n        width: this.resizeStart.width,\r\n        height: this.resizeStart.height\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  };\r\n\r\n  private handleMouseMove = (e: MouseEvent) => {\r\n    if (!this.isResizing) return;\r\n    \r\n    // Get the parent element (host of the shadow root)\r\n    const parentElement = (this.getRootNode() as ShadowRoot).host as HTMLElement;\r\n    if (!parentElement) return;\r\n    \r\n    console.log('NodeResizer handleMouseMove:', e);\r\n\r\n    const deltaX = e.clientX - this.resizeStart.x;\r\n    const deltaY = e.clientY - this.resizeStart.y;\r\n\r\n    let newWidth = this.resizeStart.width;\r\n    let newHeight = this.resizeStart.height;\r\n\r\n    // Calculate new dimensions based on handle direction\r\n    switch (this.resizeHandle) {\r\n      case 'nw':\r\n        newWidth = this.resizeStart.width - deltaX;\r\n        newHeight = this.resizeStart.height - deltaY;\r\n        break;\r\n      case 'ne':\r\n        newWidth = this.resizeStart.width + deltaX;\r\n        newHeight = this.resizeStart.height - deltaY;\r\n        break;\r\n      case 'sw':\r\n        newWidth = this.resizeStart.width - deltaX;\r\n        newHeight = this.resizeStart.height + deltaY;\r\n        break;\r\n      case 'se':\r\n        newWidth = this.resizeStart.width + deltaX;\r\n        newHeight = this.resizeStart.height + deltaY;\r\n        break;\r\n      case 'n':\r\n        newHeight = this.resizeStart.height - deltaY;\r\n        break;\r\n      case 's':\r\n        newHeight = this.resizeStart.height + deltaY;\r\n        break;\r\n      case 'w':\r\n        newWidth = this.resizeStart.width - deltaX;\r\n        break;\r\n      case 'e':\r\n        newWidth = this.resizeStart.width + deltaX;\r\n        break;\r\n    }\r\n\r\n    // Apply constraints\r\n    newWidth = Math.max(this.minWidth, Math.min(this.maxWidth, newWidth));\r\n    newHeight = Math.max(this.minHeight, Math.min(this.maxHeight, newHeight));\r\n\r\n    // Keep aspect ratio if enabled\r\n    if (this.keepAspectRatio) {\r\n      const aspectRatio = this.resizeStart.width / this.resizeStart.height;\r\n      if (this.resizeHandle.includes('w') || this.resizeHandle.includes('e')) {\r\n        newHeight = newWidth / aspectRatio;\r\n      } else {\r\n        newWidth = newHeight * aspectRatio;\r\n      }\r\n    }\r\n\r\n    // Apply new dimensions to parent element\r\n    parentElement.style.width = `${newWidth}px`;\r\n    parentElement.style.height = `${newHeight}px`;\r\n\r\n    // Dispatch resize event\r\n    this.dispatchEvent(new CustomEvent('resize', {\r\n      detail: {\r\n        width: newWidth,\r\n        height: newHeight,\r\n        handle: this.resizeHandle\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  };\r\n\r\n  private handleMouseUp = () => {\r\n    if (!this.isResizing) return;\r\n\r\n    this.isResizing = false;\r\n    this.cleanup();\r\n\r\n    // Get the parent element for final dimensions\r\n    const parentElement = (this.getRootNode() as ShadowRoot).host as HTMLElement;\r\n    \r\n    // Dispatch resize end event\r\n    this.dispatchEvent(new CustomEvent('resize-end', {\r\n      detail: {\r\n        width: parentElement?.offsetWidth || 0,\r\n        height: parentElement?.offsetHeight || 0\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    if (!this.visible) return html``;\r\n\r\n    return html`\r\n      <div class=\"resize-border\"></div>\r\n      <div class=\"resize-handle nw\"></div>\r\n      <div class=\"resize-handle ne\"></div>\r\n      <div class=\"resize-handle sw\"></div>\r\n      <div class=\"resize-handle se\"></div>\r\n      <div class=\"resize-handle n\"></div>\r\n      <div class=\"resize-handle s\"></div>\r\n      <div class=\"resize-handle w\"></div>\r\n      <div class=\"resize-handle e\"></div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'node-resizer': NodeResizer;\r\n  }\r\n}\r\n","/**\r\n * FlowNode - Basic node component\r\n * Represents a draggable node in the flow diagram\r\n */\r\n\r\nimport { LitElement, html, css, CSSResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport type { XYPosition } from '../core/types';\r\nimport type { FlowInstance } from '../core/flow-instance';\r\nimport './node-resizer';\r\n\r\n@customElement('flow-node')\r\nexport class FlowNode extends LitElement {\r\n  static styles: CSSResult | CSSResult[] = css`\r\n    :host {\r\n      position: absolute;\r\n      border: 1px solid var(--flow-node-border, #ddd);\r\n      border-radius: 8px;\r\n      background: var(--flow-node-background, white);\r\n      padding: 10px 20px;\r\n      cursor: grab;\r\n      user-select: none;\r\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n      transition: box-shadow 0.2s;\r\n      transform-origin: 0 0;\r\n      will-change: transform;\r\n      pointer-events: auto;\r\n    }\r\n\r\n    :host([dragging]) {\r\n      cursor: grabbing;\r\n      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\r\n    }\r\n\r\n    :host(:hover) {\r\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    :host([selected]) {\r\n      border-color: var(--flow-node-selected-border, #1a73e8);\r\n      box-shadow: 0 0 0 2px rgba(26, 115, 232, 0.3);\r\n    }\r\n\r\n    .node-content {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .handle {\r\n      position: absolute;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 50%;\r\n      background: var(--flow-handle-bg, #fff);\r\n      border: 1px solid var(--flow-handle-border, #1a73e8);\r\n      box-shadow: 0 0 0 1px rgba(26, 115, 232, 0.15);\r\n      cursor: crosshair;\r\n      pointer-events: auto;\r\n    }\r\n\r\n    .handle.source {\r\n      right: -5px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n\r\n    .handle.target {\r\n      left: -5px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n  `;\r\n\r\n  @property({ type: String, reflect: true }) id = '';\r\n  @property({ type: Object }) data: any = {};\r\n  @property({ type: Object }) position: XYPosition = { x: 0, y: 0 };\r\n  @property({ type: Boolean, reflect: true }) selected = false;\r\n  @property({ type: Boolean, reflect: true }) dragging = false;\r\n  @property({ type: Boolean }) draggable = true;\r\n  @property({ type: Object }) instance?: FlowInstance;\r\n  @property({ type: Boolean }) resizable = false;\r\n\r\n  private isDragging = false;\r\n  private dragStart: XYPosition = { x: 0, y: 0 };\r\n  private nodeStart: XYPosition = { x: 0, y: 0 };\r\n  private lastMeasured: { width: number; height: number } | null = null;\r\n\r\n  firstUpdated() {\r\n    if (this.draggable) {\r\n      this.addEventListener('mousedown', this.handleMouseDown);\r\n    }\r\n    this.addEventListener('click', this.handleClick);\r\n    if (this.resizable) {\r\n      this.addEventListener('resize', this.handleResize as EventListener);\r\n      this.addEventListener('resize-end', this.handleResizeEnd as EventListener);\r\n    }\r\n    this.updateMeasuredSize();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.removeEventListener('mousedown', this.handleMouseDown);\r\n    this.removeEventListener('click', this.handleClick);\r\n    if (this.resizable) {\r\n      this.removeEventListener('resize', this.handleResize as EventListener);\r\n      this.removeEventListener('resize-end', this.handleResizeEnd as EventListener);\r\n    }\r\n    this.cleanup();\r\n  }\r\n\r\n  private handleClick = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    if (!this.isDragging && this.instance) {\r\n      // Toggle selection\r\n      const newSelected = !this.selected;\r\n      this.instance.updateNode(this.id, { selected: newSelected });\r\n      \r\n      // Dispatch selection event\r\n      this.dispatchEvent(new CustomEvent('node-select', {\r\n        detail: { \r\n          nodeId: this.id, \r\n          selected: newSelected,\r\n          node: {\r\n            id: this.id,\r\n            data: this.data,\r\n            position: this.position,\r\n            selected: newSelected\r\n          }\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  private handleResize = (e: Event) => {\r\n    const { width, height } = (e as CustomEvent).detail;\r\n    \r\n    // Update node dimensions in the instance\r\n    if (this.instance) {\r\n      this.instance.updateNode(this.id, { \r\n        width: width,\r\n        height: height,\r\n        measured: { width, height }\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleResizeEnd = (e: Event) => {\r\n    const { width, height } = (e as CustomEvent).detail;\r\n    \r\n    // Final update with new dimensions\r\n    if (this.instance) {\r\n      this.instance.updateNode(this.id, { \r\n        width: width,\r\n        height: height,\r\n        measured: { width, height }\r\n      });\r\n    }\r\n\r\n    // Dispatch resize end event\r\n    this.dispatchEvent(new CustomEvent('node-resize-end', {\r\n      detail: {\r\n        nodeId: this.id,\r\n        width: width,\r\n        height: height\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  };\r\n\r\n  private handleMouseDown = (e: MouseEvent) => {\r\n    if (!this.draggable || e.button !== 0) return;\r\n    \r\n    // Check if the event is coming from a resize handle or node-resizer\r\n    const target = e.target as HTMLElement;\r\n    \r\n    // Check if the event originated from a resize handle or node-resizer\r\n    const isFromResizeHandle = target.classList.contains('resize-handle') || \r\n                              target.tagName === 'NODE-RESIZER' ||\r\n                              target.closest('node-resizer') !== null;\r\n    \r\n    if (isFromResizeHandle) {\r\n      return; // Don't start dragging if clicking on resize handle\r\n    }\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    this.isDragging = false;\r\n    this.dragStart = { x: e.clientX, y: e.clientY };\r\n    this.nodeStart = { ...this.position };\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMove);\r\n    document.addEventListener('mouseup', this.handleMouseUp);\r\n  };\r\n\r\n  private handleMouseMove = (e: MouseEvent) => {\r\n    const dx = e.clientX - this.dragStart.x;\r\n    const dy = e.clientY - this.dragStart.y;\r\n    \r\n    // Start dragging if moved more than 3px\r\n    if (!this.isDragging && (Math.abs(dx) > 3 || Math.abs(dy) > 3)) {\r\n      this.isDragging = true;\r\n      this.dragging = true;\r\n      if (this.instance) {\r\n        this.instance.updateNode(this.id, { dragging: true });\r\n      }\r\n    }\r\n\r\n    if (this.isDragging && this.instance) {\r\n      const viewport = this.instance.getViewport();\r\n      const newPosition = {\r\n        x: this.nodeStart.x + dx / viewport.zoom,\r\n        y: this.nodeStart.y + dy / viewport.zoom\r\n      };\r\n      \r\n      this.instance.updateNode(this.id, { position: newPosition });\r\n    }\r\n  };\r\n\r\n  private handleMouseUp = () => {\r\n    if (this.isDragging && this.instance) {\r\n      this.instance.updateNode(this.id, { dragging: false });\r\n    }\r\n    \r\n    this.cleanup();\r\n    \r\n    // Small delay to prevent click event after drag\r\n    setTimeout(() => {\r\n      this.isDragging = false;\r\n      this.dragging = false;\r\n    }, 50);\r\n  };\r\n\r\n  private cleanup() {\r\n    document.removeEventListener('mousemove', this.handleMouseMove);\r\n    document.removeEventListener('mouseup', this.handleMouseUp);\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"node-container\">\r\n        <div class=\"node-content\">\r\n          ${this.data?.label || 'Node'}\r\n        </div>\r\n        <div \r\n          class=\"handle target\" \r\n          data-handle=\"target\" \r\n          data-node-id=${this.id}\r\n          @mousedown=${this.onHandleMouseDown('target')}\r\n        ></div>\r\n        <div \r\n          class=\"handle source\" \r\n          data-handle=\"source\" \r\n          data-node-id=${this.id}\r\n          @mousedown=${this.onHandleMouseDown('source')}\r\n        ></div>\r\n      </div>\r\n      ${this.resizable ? html`\r\n        <node-resizer\r\n          .visible=${this.selected}\r\n          min-width=\"50\"\r\n          min-height=\"30\"\r\n          max-width=\"500\"\r\n          max-height=\"300\"\r\n        ></node-resizer>\r\n      ` : ''}\r\n    `;\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    super.updated(changedProperties);\r\n    this.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`;\r\n    this.updateMeasuredSize();\r\n    \r\n    if (changedProperties.has('resizable')) {\r\n      console.log('FlowNode resizable changed:', this.resizable);\r\n    }\r\n  }\r\n\r\n  private updateMeasuredSize() {\r\n    if (!this.instance) return;\r\n    const rect = this.getBoundingClientRect();\r\n    const zoom = this.instance.getViewport().zoom || 1;\r\n    const width = rect.width / zoom;\r\n    const height = rect.height / zoom;\r\n\r\n    const changed =\r\n      !this.lastMeasured ||\r\n      Math.abs(this.lastMeasured.width - width) > 0.5 ||\r\n      Math.abs(this.lastMeasured.height - height) > 0.5;\r\n\r\n    if (changed) {\r\n      this.lastMeasured = { width, height };\r\n      this.instance.updateNode(this.id, { measured: { width, height }, width, height });\r\n    }\r\n  }\r\n\r\n  private onHandleMouseDown(type: 'source' | 'target') {\r\n    return (e: MouseEvent) => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      this.dispatchEvent(new CustomEvent('handle-start', {\r\n        detail: { nodeId: this.id, type },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    };\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'flow-node': FlowNode;\r\n  }\r\n}\r\n\r\n","/**\r\n * FlowEdge - Edge component for connecting nodes\r\n * Renders SVG paths between nodes\r\n */\r\n\r\nimport { LitElement, html, css, svg } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { getBezierPath, getSmoothStepPath, getStraightPath, Position } from '../utils/geometry';\r\nimport type { Node, MarkerSpec, EdgeType } from '../core/types';\r\n\r\n@customElement('flow-edge')\r\nexport class FlowEdge extends LitElement {\r\n  // Render in light DOM so marker defs in parent shadow root are addressable\r\n  /*\r\n  protected createRenderRoot() {\r\n    return this;\r\n  }\r\n  */\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    svg {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      overflow: visible;\r\n    }\r\n\r\n    .edge-path {\r\n      fill: none;\r\n      stroke: var(--flow-edge-color, #b1b1b7);\r\n      stroke-width: 3;\r\n      cursor: pointer;\r\n      pointer-events: stroke;\r\n    }\r\n\r\n    .edge-path:hover {\r\n      stroke: var(--flow-edge-selected-color, #1a73e8);\r\n    }\r\n\r\n    .edge-path.selected {\r\n      stroke: var(--flow-edge-selected-color, #1a73e8);\r\n    }\r\n\r\n    .edge-path.animated {\r\n      stroke-dasharray: 5;\r\n      animation: dashdraw 0.5s linear infinite;\r\n    }\r\n\r\n    .edge-label {\r\n      pointer-events: none;\r\n      user-select: none;\r\n      fill: #333;\r\n      font-size: 12px;\r\n    }\r\n\r\n    @keyframes dashdraw {\r\n      to {\r\n        stroke-dashoffset: -10;\r\n      }\r\n    }\r\n  `;\r\n\r\n  @property({ type: String }) id = '';\r\n  @property({ type: String }) source = '';\r\n  @property({ type: String }) target = '';\r\n  @property({ type: String }) sourceHandle?: string;\r\n  @property({ type: String }) targetHandle?: string;\r\n  @property({ type: Object }) sourceNode?: Node;\r\n  @property({ type: Object }) targetNode?: Node;\r\n  @property({ type: Boolean }) animated = false;\r\n  @property({ type: Boolean }) selected = false;\r\n  @property({ type: String }) label = '';\r\n  @property({ type: String }) type: EdgeType = 'default';\r\n  @property({ type: Object }) markerStart?: MarkerSpec | string;\r\n  @property({ type: Object }) markerEnd?: MarkerSpec | string;\r\n\r\n  private markerHandleHalf = 5; // half of node handle diameter (10px)\r\n\r\n  /**\r\n   * Create marker ID from marker spec\r\n   */\r\n  private getMarkerId(spec: MarkerSpec | string | undefined): string | undefined {\r\n    if (!spec) return undefined;\r\n    if (typeof spec === 'string') return spec;\r\n    \r\n    const key = this.normalizeMarkerSpec(spec);\r\n    return `marker-${this.hashString(key)}`;\r\n  }\r\n\r\n  /**\r\n   * Create marker SVG from marker spec\r\n   */\r\n  private createMarkerSVG(id: string, spec: MarkerSpec): string {\r\n    if (spec.type === 'custom') {\r\n      const width = spec.width ?? 10;\r\n      const height = spec.height ?? 10;\r\n      const refX = (spec.refX ?? width) + this.markerHandleHalf;\r\n      const refY = spec.refY ?? height / 2;\r\n      const color = spec.color ?? 'currentColor';\r\n      const orient = spec.orient ?? 'auto';\r\n      return `<marker id=\"${id}\" markerWidth=\"${width}\" markerHeight=\"${height}\" refX=\"${refX}\" refY=\"${refY}\" orient=\"${orient}\" markerUnits=\"userSpaceOnUse\"><path d=\"${spec.path}\" fill=\"${color}\" stroke=\"${color}\"/></marker>`;\r\n    }\r\n    \r\n    const width = spec.width ?? 10;\r\n    const height = spec.height ?? 10;\r\n    const orient = spec.orient ?? 'auto';\r\n    const color = spec.color ?? 'currentColor';\r\n    const refX = (spec.type === 'ArrowClosed' ? width : width) + this.markerHandleHalf;\r\n    const refY = height / 2;\r\n    \r\n    if (spec.type === 'ArrowClosed') {\r\n      // Triangle pointing right with tip at (width, height/2)\r\n      const path = `M0,0 L${width},${refY} L0,${height} Z`;\r\n      return `<marker id=\"${id}\" markerWidth=\"${width}\" markerHeight=\"${height}\" refX=\"${refX}\" refY=\"${refY}\" orient=\"${orient}\" markerUnits=\"userSpaceOnUse\"><path d=\"${path}\" fill=\"${color}\"/></marker>`;\r\n    }\r\n    \r\n    // Arrow (open) -> V shape stroke\r\n    const path = `M0,0 L${width},${refY} L0,${height}`;\r\n    return `<marker id=\"${id}\" markerWidth=\"${width}\" markerHeight=\"${height}\" refX=\"${refX}\" refY=\"${refY}\" orient=\"${orient}\" markerUnits=\"userSpaceOnUse\"><path d=\"${path}\" fill=\"none\" stroke=\"${color}\" stroke-width=\"2\"/></marker>`;\r\n  }\r\n\r\n  /**\r\n   * Normalize marker spec to a string key for caching\r\n   */\r\n  private normalizeMarkerSpec(spec: MarkerSpec): string {\r\n    if (spec.type === 'custom') {\r\n      const { path, width = 20, height = 20, refX = 20, refY = 10, orient = 'auto', color = 'currentColor' } = spec;\r\n      return `custom|p=${path}|w=${width}|h=${height}|rx=${refX}|ry=${refY}|o=${orient}|c=${color}`;\r\n    }\r\n    const { width = 20, height = 20, orient = 'auto', color = 'currentColor' } = spec;\r\n    return `builtin|${spec.type}|w=${width}|h=${height}|o=${orient}|c=${color}`;\r\n  }\r\n\r\n  /**\r\n   * Simple hash function for generating unique IDs\r\n   */\r\n  private hashString(input: string): string {\r\n    let h = 0;\r\n    for (let i = 0; i < input.length; i++) {\r\n      h = (h << 5) - h + input.charCodeAt(i);\r\n      h |= 0;\r\n    }\r\n    return Math.abs(h).toString(36);\r\n  }\r\n\r\n  /**\r\n   * Get path based on edge type\r\n   */\r\n  private getPathForType(source: any, target: any): [path: string, labelX: number, labelY: number, offsetX: number, offsetY: number] {\r\n    const sourceX = source.x;\r\n    const sourceY = source.y;\r\n    const targetX = target.x;\r\n    const targetY = target.y;\r\n    const sourcePosition = source.position;\r\n    const targetPosition = target.position;\r\n\r\n    switch (this.type) {\r\n      case 'straight':\r\n        return getStraightPath({\r\n          sourceX,\r\n          sourceY,\r\n          targetX,\r\n          targetY,\r\n        });\r\n      \r\n      case 'smoothstep':\r\n        return getSmoothStepPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        });\r\n      \r\n      case 'step':\r\n        return getSmoothStepPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n          borderRadius: 0, // Step edges have no border radius\r\n        });\r\n      \r\n      case 'simplebezier':\r\n        return getBezierPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n          curvature: 0.5, // Simple bezier with fixed curvature\r\n        });\r\n      \r\n      case 'default':\r\n      default:\r\n        return getBezierPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        });\r\n    }\r\n  }\r\n\r\n  /** Returns the ShadowRoot of the parent flow-canvas */\r\n  private getFlowCanvasRoot(): ShadowRoot | null {\r\n    const root = this.getRootNode();\r\n    return root instanceof ShadowRoot ? root : null;\r\n  }\r\n\r\n  /** Returns the flow-canvas host element (if available) */\r\n  private getFlowCanvasHost(): HTMLElement | null {\r\n    const root = this.getFlowCanvasRoot();\r\n    // root.host will be the <flow-canvas> instance\r\n    return (root && (root as any).host) || null;\r\n  }\r\n\r\n  /**\r\n   * Find a specific handle element within a node\r\n   */\r\n  private findHandleElement(nodeId: string, handleId: string): HTMLElement | null {\r\n    // Look up the node element by id inside the flow-canvas shadowRoot\r\n    const canvasRoot = this.getFlowCanvasRoot();\r\n    if (!canvasRoot) return null;\r\n\r\n    const node = canvasRoot.querySelector(`[id=\"${CSS.escape(nodeId)}\"]`) as HTMLElement | null;\r\n    if (!node) return null; // node not rendered yet\r\n\r\n    // Look in shadow root first, then light DOM\r\n    const shadowRoot = node.shadowRoot;\r\n    let handle: HTMLElement | null = null;\r\n    \r\n    if (shadowRoot) {\r\n      handle = shadowRoot.querySelector(`[data-handle-id=\"${CSS.escape(handleId)}\"]`) as HTMLElement;\r\n    }\r\n    \r\n    if (!handle) {\r\n      handle = node.querySelector(`[data-handle-id=\"${CSS.escape(handleId)}\"]`) as HTMLElement;\r\n    }\r\n    \r\n    return handle;\r\n  }\r\n\r\n  /**\r\n   * Get the canvas coordinates of a specific handle\r\n   */\r\n  private getHandlePosition(nodeId: string, handleId: string): { x: number; y: number } | null {\r\n    const handleEl = this.findHandleElement(nodeId, handleId);\r\n    if (!handleEl) return null;\r\n\r\n    // Get the node element\r\n    const canvasRoot = this.getFlowCanvasRoot();\r\n    if (!canvasRoot) return null;\r\n    \r\n    const nodeEl = canvasRoot.querySelector(`[id=\"${CSS.escape(nodeId)}\"]`) as HTMLElement | null;\r\n    if (!nodeEl) return null;\r\n\r\n    // Get handle's offset relative to node\r\n    // Handles are positioned absolutely within nodes\r\n    const nodeRect = nodeEl.getBoundingClientRect();\r\n    const handleRect = handleEl.getBoundingClientRect();\r\n    \r\n    // Get node's canvas position from its position property\r\n    // Since nodeEl is already transformed by viewport, we need the original position\r\n    const node = this.sourceNode?.id === nodeId ? this.sourceNode : this.targetNode;\r\n    if (!node) return null;\r\n\r\n    // Calculate handle offset within the node (in unscaled pixels)\r\n    const nodeWidth = node.measured?.width || node.width || 150;\r\n    const nodeHeight = node.measured?.height || node.height || 50;\r\n    \r\n    // Get viewport to calculate scale factor\r\n    const flowCanvas = this.getFlowCanvasHost() as any;\r\n    const viewport = flowCanvas?.viewport || { x: 0, y: 0, zoom: 1 };\r\n    const zoom = viewport.zoom || 1;\r\n    \r\n    // Calculate offset from node's top-left in canvas coordinates\r\n    const offsetX = (handleRect.left + handleRect.width / 2 - nodeRect.left) / zoom;\r\n    const offsetY = (handleRect.top + handleRect.height / 2 - nodeRect.top) / zoom;\r\n    \r\n    return {\r\n      x: node.position.x + offsetX,\r\n      y: node.position.y + offsetY\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the source position (handle or node edge)\r\n   */\r\n  private getSourcePosition(): { x: number; y: number; position: Position } {\r\n    // Try to get specific handle position\r\n    if (this.sourceHandle && this.sourceNode) {\r\n      const handlePos = this.getHandlePosition(this.sourceNode.id, this.sourceHandle);\r\n      if (handlePos) {\r\n        return { ...handlePos, position: Position.Right };\r\n      }\r\n    }\r\n\r\n    // Fall back to node right edge center\r\n    const sourceWidth = this.sourceNode!.measured?.width || this.sourceNode!.width || 150;\r\n    const sourceHeight = this.sourceNode!.measured?.height || this.sourceNode!.height || 50;\r\n    return {\r\n      x: this.sourceNode!.position.x + sourceWidth,\r\n      y: this.sourceNode!.position.y + sourceHeight / 2,\r\n      position: Position.Right\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the target position (handle or node edge)\r\n   */\r\n  private getTargetPosition(): { x: number; y: number; position: Position } {\r\n    // Try to get specific handle position\r\n    if (this.targetHandle && this.targetNode) {\r\n      const handlePos = this.getHandlePosition(this.targetNode.id, this.targetHandle);\r\n      if (handlePos) {\r\n        return { ...handlePos, position: Position.Left };\r\n      }\r\n    }\r\n\r\n    // Fall back to node left edge center\r\n    const targetHeight = this.targetNode!.measured?.height || this.targetNode!.height || 50;\r\n    return {\r\n      x: this.targetNode!.position.x,\r\n      y: this.targetNode!.position.y + targetHeight / 2,\r\n      position: Position.Left\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (!this.sourceNode || !this.targetNode) {\r\n      return html``;\r\n    }\r\n\r\n    // Get source and target positions (handles or node edges)\r\n    const source = this.getSourcePosition();\r\n    const target = this.getTargetPosition();\r\n\r\n    // Get path based on edge type\r\n    const [path, labelX, labelY, offsetX, offsetY] = this.getPathForType(source, target);\r\n\r\n    const pathClasses = [\r\n      'edge-path',\r\n      this.animated && 'animated',\r\n      this.selected && 'selected'\r\n    ].filter(Boolean).join(' ');\r\n    \r\n    // Create markers from specs\r\n    const markerStartId = this.getMarkerId(this.markerStart);\r\n    const markerEndId = this.getMarkerId(this.markerEnd);\r\n    \r\n    const markerStart = markerStartId ? `url(#${markerStartId})` : undefined;\r\n    const markerEnd = markerEndId ? `url(#${markerEndId})` : undefined;\r\n\r\n    const dashAttr = this.animated ? '5' : '';\r\n\r\n    return html`\r\n      <svg style=\"position:absolute; top:0; left:0; width:100%; height:100%; overflow:visible\">\r\n        <defs>\r\n          ${markerStartId && typeof this.markerStart === 'object' ? \r\n            svg`<marker id=\"${markerStartId}\" markerWidth=\"${this.markerStart.width || 10}\" markerHeight=\"${this.markerStart.height || 10}\" refX=\"${((this.markerStart.type === 'custom' ? (this.markerStart as any).refX : undefined) || this.markerStart.width || 10) + this.markerHandleHalf}\" refY=\"${(this.markerStart.type === 'custom' ? (this.markerStart as any).refY : undefined) || (this.markerStart.height || 10) / 2}\" orient=\"${this.markerStart.orient || 'auto'}\" markerUnits=\"userSpaceOnUse\">\r\n              ${this.markerStart.type === 'custom' ? \r\n                svg`<path d=\"${(this.markerStart as any).path}\" fill=\"${this.markerStart.color || 'currentColor'}\" stroke=\"${this.markerStart.color || 'currentColor'}\"/>` :\r\n                this.markerStart.type === 'ArrowClosed' ?\r\n                  svg`<path d=\"M0,0 L${this.markerStart.width || 10},${(this.markerStart.height || 10) / 2} L0,${this.markerStart.height || 10} Z\" fill=\"${this.markerStart.color || 'currentColor'}\"/>` :\r\n                  svg`<path d=\"M0,0 L${this.markerStart.width || 10},${(this.markerStart.height || 10) / 2} L0,${this.markerStart.height || 10}\" fill=\"none\" stroke=\"${this.markerStart.color || 'currentColor'}\" stroke-width=\"2\"/>`\r\n              }\r\n            </marker>` : \r\n            ''}\r\n          ${markerEndId && typeof this.markerEnd === 'object' ? \r\n            svg`<marker id=\"${markerEndId}\" markerWidth=\"${this.markerEnd.width || 10}\" markerHeight=\"${this.markerEnd.height || 10}\" refX=\"${((this.markerEnd.type === 'custom' ? (this.markerEnd as any).refX : undefined) || this.markerEnd.width || 10) + this.markerHandleHalf}\" refY=\"${(this.markerEnd.type === 'custom' ? (this.markerEnd as any).refY : undefined) || (this.markerEnd.height || 10) / 2}\" orient=\"${this.markerEnd.orient || 'auto'}\" markerUnits=\"userSpaceOnUse\">\r\n              ${this.markerEnd.type === 'custom' ? \r\n                svg`<path d=\"${(this.markerEnd as any).path}\" fill=\"${this.markerEnd.color || 'currentColor'}\" stroke=\"${this.markerEnd.color || 'currentColor'}\"/>` :\r\n                this.markerEnd.type === 'ArrowClosed' ?\r\n                  svg`<path d=\"M0,0 L${this.markerEnd.width || 10},${(this.markerEnd.height || 10) / 2} L0,${this.markerEnd.height || 10} Z\" fill=\"${this.markerEnd.color || 'currentColor'}\"/>` :\r\n                  svg`<path d=\"M0,0 L${this.markerEnd.width || 10},${(this.markerEnd.height || 10) / 2} L0,${this.markerEnd.height || 10}\" fill=\"none\" stroke=\"${this.markerEnd.color || 'currentColor'}\" stroke-width=\"2\"/>`\r\n              }\r\n            </marker>` : \r\n            ''}\r\n        </defs>\r\n        ${svg`\r\n          <path \r\n            class=\"${pathClasses}\"\r\n            d=\"${path}\"\r\n            stroke-dasharray=\"${dashAttr}\"\r\n            marker-start=\"${markerStart ?? ''}\"\r\n            marker-end=\"${markerEnd ?? ''}\"\r\n            @click=${this.handleClick}\r\n          />\r\n          ${this.label ? svg`\r\n            <text \r\n              x=\"${labelX}\" \r\n              y=\"${labelY}\" \r\n              text-anchor=\"middle\"\r\n              dy=\"-5\"\r\n              fill=\"#333\"\r\n              style=\"user-select:none; pointer-events:none; font-size:12px;\"\r\n            >\r\n              ${this.label}\r\n            </text>\r\n          ` : ''}\r\n        `}\r\n      </svg>\r\n    `;\r\n  }\r\n\r\n  private handleClick(e: MouseEvent) {\r\n    console.log('handleClick', e);\r\n    e.stopPropagation();\r\n    \r\n    // Toggle selection\r\n    const newSelected = !this.selected;\r\n    this.selected = newSelected;\r\n    \r\n    // Dispatch selection event\r\n    this.dispatchEvent(new CustomEvent('edge-select', {\r\n      detail: { \r\n        edgeId: this.id,\r\n        selected: newSelected,\r\n        edge: {\r\n          id: this.id,\r\n          source: this.source,\r\n          target: this.target,\r\n          sourceHandle: this.sourceHandle,\r\n          targetHandle: this.targetHandle,\r\n          label: this.label,\r\n          animated: this.animated,\r\n          selected: newSelected\r\n        }\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'flow-edge': FlowEdge;\r\n  }\r\n}\r\n\r\n","/**\r\n * FlowBackground - Background pattern component\r\n * Provides dots or lines pattern for the flow canvas\r\n */\r\n\r\nimport { LitElement, html, css, svg } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\nexport type BackgroundVariant = 'dots' | 'lines' | 'cross';\r\n\r\n@customElement('flow-background')\r\nexport class FlowBackground extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      inset: 0;\r\n      pointer-events: none;\r\n      z-index: 0;\r\n    }\r\n\r\n    svg {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `;\r\n\r\n  @property({ type: String }) variant: BackgroundVariant = 'dots';\r\n  @property({ type: Number }) gap = 20;\r\n  @property({ type: String }) color = '#ddd';\r\n  @property({ type: Number }) size = 1;\r\n\r\n  render() {\r\n    const patternId = `flow-bg-pattern-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    return html`\r\n      <svg>\r\n        <defs>\r\n          ${this.variant === 'dots' ? this.renderDotsPattern(patternId) : this.renderLinesPattern(patternId)}\r\n        </defs>\r\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#${patternId})\" />\r\n      </svg>\r\n    `;\r\n  }\r\n\r\n  private renderDotsPattern(id: string) {\r\n    return svg`\r\n      <pattern id=\"${id}\" x=\"0\" y=\"0\" width=\"${this.gap}\" height=\"${this.gap}\" patternUnits=\"userSpaceOnUse\">\r\n        <circle cx=\"${this.size}\" cy=\"${this.size}\" r=\"${this.size}\" fill=\"${this.color}\" />\r\n      </pattern>\r\n    `;\r\n  }\r\n\r\n  private renderLinesPattern(id: string) {\r\n    return svg`\r\n      <pattern id=\"${id}\" x=\"0\" y=\"0\" width=\"${this.gap}\" height=\"${this.gap}\" patternUnits=\"userSpaceOnUse\">\r\n        <path d=\"M ${this.gap} 0 L 0 0 0 ${this.gap}\" fill=\"none\" stroke=\"${this.color}\" stroke-width=\"${this.size}\" />\r\n      </pattern>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'flow-background': FlowBackground;\r\n  }\r\n}\r\n\r\n","/**\r\n * FlowMinimap - Miniature overview component\r\n * Shows a small overview of the entire flow with viewport indicator\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\n@customElement('flow-minimap')\r\nexport class FlowMinimap extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      bottom: 20px;\r\n      right: 20px;\r\n      width: 200px;\r\n      height: 150px;\r\n      background: white;\r\n      border: 1px solid #ddd;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n      overflow: hidden;\r\n      z-index: 10;\r\n    }\r\n\r\n    .minimap-container {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: relative;\r\n    }\r\n\r\n    .viewport-indicator {\r\n      position: absolute;\r\n      border: 2px solid #1a73e8;\r\n      background: rgba(26, 115, 232, 0.1);\r\n      pointer-events: none;\r\n    }\r\n  `;\r\n\r\n  @property({ type: Number }) width = 200;\r\n  @property({ type: Number }) height = 150;\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"minimap-container\">\r\n        <div class=\"viewport-indicator\"></div>\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'flow-minimap': FlowMinimap;\r\n  }\r\n}\r\n\r\n","/**\r\n * FlowControls - Zoom and pan controls component\r\n * Provides UI buttons for viewport manipulation\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport type { FlowInstance } from '../core/flow-instance';\r\n\r\n@customElement('flow-controls')\r\nexport class FlowControls extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      bottom: 20px;\r\n      left: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n      z-index: 10;\r\n    }\r\n\r\n    button {\r\n      width: 36px;\r\n      height: 36px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      background: white;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 18px;\r\n      transition: all 0.2s;\r\n    }\r\n\r\n    button:hover {\r\n      background: #f5f5f5;\r\n      border-color: #999;\r\n    }\r\n\r\n    button:active {\r\n      background: #e0e0e0;\r\n    }\r\n\r\n    .divider {\r\n      height: 1px;\r\n      background: #ddd;\r\n      margin: 4px 0;\r\n    }\r\n  `;\r\n\r\n  @property({ type: Object }) instance?: FlowInstance;\r\n\r\n  render() {\r\n    return html`\r\n      <button @click=${this.handleZoomIn} title=\"Zoom In\">+</button>\r\n      <button @click=${this.handleZoomOut} title=\"Zoom Out\">−</button>\r\n      <div class=\"divider\"></div>\r\n      <button @click=${this.handleFitView} title=\"Fit View\">⛶</button>\r\n    `;\r\n  }\r\n\r\n  private handleZoomIn = () => {\r\n    this.instance?.zoomIn();\r\n  };\r\n\r\n  private handleZoomOut = () => {\r\n    this.instance?.zoomOut();\r\n  };\r\n\r\n  private handleFitView = () => {\r\n    this.instance?.fitView();\r\n  };\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'flow-controls': FlowControls;\r\n  }\r\n}\r\n\r\n","/**\r\n * ERDTableNode - Database table node with field-level handles\r\n * Example of a custom node type for ERD diagrams\r\n */\r\n\r\nimport { html, css, CSSResult } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\nimport { FlowNode } from '../flow-node';\r\nimport '../node-resizer';\r\n\r\nexport interface ERDField {\r\n  name: string;\r\n  type: string;\r\n  key?: 'PK' | 'FK' | 'UK';\r\n  nullable?: boolean;\r\n}\r\n\r\nexport interface ERDTableData {\r\n  tableName: string;\r\n  fields: ERDField[];\r\n  color?: string;\r\n  size?: { width?: number; height?: number };\r\n}\r\n\r\n@customElement('erd-table-node')\r\nexport class ERDTableNode extends FlowNode {\r\n  static styles: CSSResult | CSSResult[] = [\r\n    ...(Array.isArray(super.styles) ? super.styles : [super.styles]),\r\n    css`\r\n      :host {\r\n        padding: 0;\r\n        min-width: 200px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background: var(--erd-table-bg, white);\r\n      }\r\n\r\n      .table-header {\r\n        background: var(--erd-table-header-bg, #2563eb);\r\n        color: white;\r\n        padding: 12px 16px;\r\n        font-weight: 600;\r\n        border-radius: 8px 8px 0 0;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .table-icon {\r\n        font-size: 18px;\r\n      }\r\n\r\n      .table-body {\r\n        padding: 0;\r\n        overflow: auto;\r\n      }\r\n\r\n      .field-row {\r\n        display: grid;\r\n        grid-template-columns: 30px 1fr auto auto;\r\n        gap: 8px;\r\n        padding: 10px 16px;\r\n        border-bottom: 1px solid var(--erd-border, #e5e7eb);\r\n        align-items: center;\r\n        position: relative;\r\n        background: white;\r\n        transition: background 0.2s;\r\n      }\r\n\r\n      .field-row:hover {\r\n        background: var(--erd-row-hover, #f3f4f6);\r\n      }\r\n\r\n      .field-row:last-child {\r\n        border-bottom: none;\r\n        border-radius: 0 0 8px 8px;\r\n      }\r\n\r\n      .field-key {\r\n        font-size: 10px;\r\n        font-weight: 700;\r\n        color: var(--erd-key-color, #dc2626);\r\n      }\r\n\r\n      .field-name {\r\n        font-weight: 500;\r\n        color: var(--erd-text, #1f2937);\r\n      }\r\n\r\n      .field-type {\r\n        font-size: 11px;\r\n        color: var(--erd-type-color, #6b7280);\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      .field-nullable {\r\n        font-size: 10px;\r\n        color: #9ca3af;\r\n      }\r\n\r\n      /* Handles for each field */\r\n      .field-handle {\r\n        position: absolute;\r\n        width: 10px;\r\n        height: 10px;\r\n        border-radius: 50%;\r\n        background: var(--flow-handle-bg, #f1f1f1);\r\n        cursor: crosshair;\r\n        pointer-events: auto;\r\n        z-index: 10;\r\n        transition: all 0.2s;\r\n      }\r\n\r\n      .field-handle.left {\r\n        left: 3px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n\r\n      .field-handle.right {\r\n        right: 3px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n\r\n      .field-handle:hover {\r\n        background: var(--flow-handle-border, #2563eb);\r\n        transform: translateY(-50%) scale(1.3);\r\n      }\r\n    `\r\n  ];\r\n\r\n  // Apply initial size from data.size exactly once\r\n  private appliedInitialSize = false;\r\n\r\n  firstUpdated() {\r\n    // Apply initial size before base measures, so measured size reflects it\r\n    const data = this.data as ERDTableData | undefined;\r\n    const w = data?.size?.width;\r\n    const h = data?.size?.height;\r\n    if ((typeof w === 'number' && w > 0) || (typeof h === 'number' && h > 0)) {\r\n      if (typeof w === 'number' && w > 0) this.style.width = `${w}px`;\r\n      if (typeof h === 'number' && h > 0) this.style.height = `${h}px`;\r\n      if (this.instance) {\r\n        this.instance.updateNode(this.id, {\r\n          width: typeof w === 'number' && w > 0 ? w : (this as any).width,\r\n          height: typeof h === 'number' && h > 0 ? h : (this as any).height,\r\n        });\r\n      }\r\n      this.appliedInitialSize = true;\r\n    }\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    // No-op; initial sizing is handled in firstUpdated before measurement\r\n    super.updated(changedProperties as any);\r\n  }\r\n\r\n  private onFieldHandleMouseDown(fieldName: string, side: 'left' | 'right') {\r\n    return (e: MouseEvent) => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      \r\n      // Generate unique handle ID\r\n      const handleId = `${this.id}-${fieldName}-${side}`;\r\n      \r\n      // Dispatch handle-start event with field information\r\n      this.dispatchEvent(new CustomEvent('handle-start', {\r\n        detail: { \r\n          nodeId: this.id, \r\n          type: side === 'left' ? 'target' : 'source',\r\n          handleId,\r\n          fieldName\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const tableData = this.data as ERDTableData;\r\n    const tableName = tableData?.tableName || 'Table';\r\n    const fields = tableData?.fields || [];\r\n\r\n    return html`\r\n      <div class=\"table-header\" style=\"${tableData.color ? `background: ${tableData.color}` : ''}\">\r\n        <span class=\"table-icon\">📊</span>\r\n        <span>${tableName}</span>\r\n      </div>\r\n      \r\n      <div class=\"table-body\">\r\n        ${fields.map(field => html`\r\n          <div class=\"field-row\" data-field=\"${field.name}\">\r\n            <div class=\"field-key\">\r\n              ${field.key || ''}\r\n            </div>\r\n            <div class=\"field-name\">${field.name}</div>\r\n            <div class=\"field-type\">${field.type}</div>\r\n            <div class=\"field-nullable\">\r\n              ${field.nullable ? 'NULL' : ''}\r\n            </div>\r\n            \r\n            <!-- Left handle (input) for this field -->\r\n            <div \r\n              class=\"field-handle left\"\r\n              data-handle=\"target\"\r\n              data-field=\"${field.name}\"\r\n              data-handle-id=\"${this.id}-${field.name}-left\"\r\n              @mousedown=${this.onFieldHandleMouseDown(field.name, 'left')}\r\n            ></div>\r\n            \r\n            <!-- Right handle (output) for this field -->\r\n            <div \r\n              class=\"field-handle right\"\r\n              data-handle=\"source\"\r\n              data-field=\"${field.name}\"\r\n              data-handle-id=\"${this.id}-${field.name}-right\"\r\n              @mousedown=${this.onFieldHandleMouseDown(field.name, 'right')}\r\n            ></div>\r\n          </div>\r\n        `)}\r\n      </div>\r\n      ${this.resizable ? html`\r\n        <node-resizer\r\n          .visible=${this.selected}\r\n          min-width=\"150\"\r\n          min-height=\"80\"\r\n          max-width=\"500\"\r\n          max-height=\"400\"\r\n        ></node-resizer>\r\n      ` : ''}\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'erd-table-node': ERDTableNode;\r\n  }\r\n}\r\n\r\n","/**\r\n * Basic shape definitions for Lit Flow\r\n */\r\n\r\nimport type { ShapeDefinition } from '../types';\r\n\r\nexport const basicShapes: ShapeDefinition[] = [\r\n  {\r\n    type: 'circle',\r\n    name: 'Circle',\r\n    category: 'basic',\r\n    path: 'M 100 100 m -95 0 a 95 95 0 1 1 190 0 a 95 95 0 1 1 -190 0',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  },\r\n  {\r\n    type: 'rectangle',\r\n    name: 'Rectangle',\r\n    category: 'basic',\r\n    path: 'M 5 5 L 195 5 L 195 195 L 5 195 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  },\r\n  {\r\n    type: 'diamond',\r\n    name: 'Diamond',\r\n    category: 'basic',\r\n    path: 'M 100 5 L 195 100 L 100 195 L 5 100 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  },\r\n  {\r\n    type: 'triangle',\r\n    name: 'Triangle',\r\n    category: 'basic',\r\n    path: 'M 100 5 L 195 195 L 5 195 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  }\r\n];\r\n","/**\r\n * Geometric shape definitions for Lit Flow\r\n */\r\n\r\nimport type { ShapeDefinition } from '../types';\r\n\r\nexport const geometricShapes: ShapeDefinition[] = [\r\n  {\r\n    type: 'hexagon',\r\n    name: 'Hexagon',\r\n    category: 'geometric',\r\n    path: 'M 100 5 L 175 52 L 175 148 L 100 195 L 25 148 L 25 52 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  },\r\n  {\r\n    type: 'octagon',\r\n    name: 'Octagon',\r\n    category: 'geometric',\r\n    path: 'M 100 5 L 175 25 L 195 100 L 175 175 L 100 195 L 25 175 L 5 100 L 25 25 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  }\r\n];\r\n","/**\r\n * Symbolic shape definitions for Lit Flow\r\n */\r\n\r\nimport type { ShapeDefinition } from '../types';\r\n\r\nexport const symbolicShapes: ShapeDefinition[] = [\r\n  {\r\n    type: 'heart',\r\n    name: 'Heart',\r\n    category: 'symbolic',\r\n    path: 'M 100 185 C 100 185, 10 95, 10 50 C 10 25, 35 5, 60 5 C 80 5, 100 25, 100 50 C 100 25, 120 5, 140 5 C 165 5, 190 25, 190 50 C 190 95, 100 185, 100 185 Z',\r\n    viewBox: '0 0 200 200',\r\n    defaultSize: { width: 200, height: 200 },\r\n    centerPoint: { x: 100, y: 100 }\r\n  }\r\n];\r\n","/**\r\n * Shape Registry - Centralized shape definitions and management\r\n */\r\n\r\nimport type { ShapeType, ShapeDefinition } from './types';\r\nimport { basicShapes } from './shapes/basic-shapes';\r\nimport { geometricShapes } from './shapes/geometric-shapes';\r\nimport { symbolicShapes } from './shapes/symbolic-shapes';\r\n\r\nexport class ShapeRegistry {\r\n  private static shapes = new Map<ShapeType, ShapeDefinition>();\r\n\r\n  /**\r\n   * Initialize the registry with default shapes\r\n   */\r\n  static initialize(): void {\r\n    // Register all default shapes\r\n    const allShapes = [...basicShapes, ...geometricShapes, ...symbolicShapes];\r\n    allShapes.forEach(shape => {\r\n      this.shapes.set(shape.type, shape);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register a new shape definition\r\n   */\r\n  static register(definition: ShapeDefinition): void {\r\n    this.shapes.set(definition.type, definition);\r\n  }\r\n\r\n  /**\r\n   * Get a shape definition by type\r\n   */\r\n  static get(shapeType: ShapeType): ShapeDefinition | undefined {\r\n    return this.shapes.get(shapeType);\r\n  }\r\n\r\n  /**\r\n   * Get all registered shapes\r\n   */\r\n  static getAll(): ShapeDefinition[] {\r\n    return Array.from(this.shapes.values());\r\n  }\r\n\r\n  /**\r\n   * Get shapes by category\r\n   */\r\n  static getByCategory(category: string): ShapeDefinition[] {\r\n    return Array.from(this.shapes.values()).filter(shape => shape.category === category);\r\n  }\r\n\r\n  /**\r\n   * Check if a shape type is registered\r\n   */\r\n  static has(shapeType: ShapeType): boolean {\r\n    return this.shapes.has(shapeType);\r\n  }\r\n\r\n  /**\r\n   * Get all available shape types\r\n   */\r\n  static getShapeTypes(): ShapeType[] {\r\n    return Array.from(this.shapes.keys());\r\n  }\r\n\r\n  /**\r\n   * Clear all registered shapes\r\n   */\r\n  static clear(): void {\r\n    this.shapes.clear();\r\n  }\r\n\r\n  /**\r\n   * Get shape count\r\n   */\r\n  static getCount(): number {\r\n    return this.shapes.size;\r\n  }\r\n}\r\n\r\n// Initialize the registry when the module is loaded\r\nShapeRegistry.initialize();\r\n","/**\r\n * ShapeNode - Component for rendering shape-based nodes\r\n * Uses a centralized Shape component that renders different SVG paths based on shape type\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport type { ShapeNodeData, ShapeNodeDataDirect } from './types';\r\nimport { ShapeRegistry } from './shape-registry';\r\nimport '../node-resizer';\r\n\r\n@customElement('shape-node')\r\nexport class ShapeNode extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      position: absolute;\r\n      display: block;\r\n      pointer-events: auto;\r\n      transform-origin: 0 0;\r\n      will-change: transform;\r\n      transform: translate(var(--position-x, 0px), var(--position-y, 0px));\r\n    }\r\n\r\n    .shape-node {\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: grab;\r\n      user-select: none;\r\n      pointer-events: auto;\r\n      width: var(--shape-width, 200px);\r\n      height: var(--shape-height, 200px);\r\n    }\r\n\r\n    .shape-node:active {\r\n      cursor: grabbing;\r\n    }\r\n\r\n    .shape-node.selected {\r\n      outline: 2px solid var(--flow-node-selected-color, #1a73e8);\r\n      outline-offset: 2px;\r\n    }\r\n\r\n    :host([dragging]) .shape-node {\r\n      cursor: grabbing;\r\n      filter: drop-shadow(0 8px 16px rgba(0, 0, 0, 0.25));\r\n    }\r\n\r\n    .shape-svg {\r\n      display: block;\r\n      transition: transform 0.2s ease;\r\n      pointer-events: none;\r\n    }\r\n\r\n    .shape-content {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      pointer-events: none;\r\n      z-index: 1;\r\n    }\r\n\r\n    .shape-node:hover .shape-svg {\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    .unknown-shape {\r\n      width: 100px;\r\n      height: 100px;\r\n      background: #f0f0f0;\r\n      border: 2px dashed #ccc;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: #666;\r\n      font-size: 12px;\r\n      pointer-events: none;\r\n    }\r\n\r\n    .handle {\r\n      position: absolute;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 50%;\r\n      background: var(--flow-handle-bg, #fff);\r\n      border: 1px solid var(--flow-handle-border, #1a73e8);\r\n      box-shadow: 0 0 0 1px rgba(26, 115, 232, 0.15);\r\n      cursor: crosshair;\r\n      pointer-events: auto;\r\n      z-index: 10;\r\n      opacity: 0;\r\n      transition: opacity 0.2s ease;\r\n    }\r\n\r\n    .handle:hover {\r\n      opacity: 1;\r\n      transform: scale(1.2);\r\n    }\r\n\r\n    .handle.source {\r\n      right: -5px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n\r\n    .handle.target {\r\n      left: -5px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n\r\n    .handle.top {\r\n      top: -5px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    .handle.bottom {\r\n      bottom: -5px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    .shape-node:hover .handle {\r\n      opacity: 1;\r\n    }\r\n\r\n    .shape-label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: rgba(255, 255, 255, 0.9);\r\n      border: 1px solid rgba(0, 0, 0, 0.1);\r\n      border-radius: 4px;\r\n      padding: 2px 6px;\r\n      font-size: 12px;\r\n      color: #333;\r\n      white-space: nowrap;\r\n      user-select: none;\r\n      pointer-events: none;\r\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n      z-index: 5;\r\n    }\r\n\r\n    .shape-label.editable {\r\n      pointer-events: auto;\r\n      cursor: text;\r\n    }\r\n\r\n    .shape-label.editable:hover {\r\n      background: rgba(255, 255, 255, 1);\r\n      border-color: var(--flow-node-selected-color, #1a73e8);\r\n    }\r\n\r\n    .handle:active {\r\n      opacity: 1;\r\n      transform: scale(1.3);\r\n    }\r\n  `;\r\n\r\n  @property({ type: String, reflect: true }) id = '';\r\n  @property({ type: Object }) data!: ShapeNodeDataDirect;\r\n  @property({ \r\n    type: Object, \r\n    hasChanged: (newVal: { x: number; y: number }, oldVal: { x: number; y: number }) => {\r\n      return !oldVal || newVal.x !== oldVal.x || newVal.y !== oldVal.y;\r\n    }\r\n  }) position!: { x: number; y: number };\r\n  @property({ type: Boolean, reflect: true }) selected = false;\r\n  @property({ type: Boolean, reflect: true }) dragging = false;\r\n  @property({ type: Boolean }) draggable = true;\r\n  @property({ type: Boolean }) connectable = true;\r\n  @property({ type: Object }) instance: any = null;\r\n  @property({ type: Boolean }) resizable = false;\r\n\r\n  private isDragging = false;\r\n  private dragStart = { x: 0, y: 0 };\r\n  private nodeStart = { x: 0, y: 0 };\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    super.updated(changedProperties);\r\n    \r\n    // Handle property changes if needed\r\n    if (changedProperties.has('position') && !this.isDragging) {\r\n      // Position updated from outside (not during dragging)\r\n      // This can be used for future features like animation\r\n    }\r\n    \r\n    if (changedProperties.has('resizable')) {\r\n      console.log('ShapeNode resizable changed:', this.resizable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the shape definition from the registry\r\n   */\r\n  private getShapeDefinition() {\r\n    if (!this.data?.type) {\r\n      return undefined;\r\n    }\r\n    return ShapeRegistry.get(this.data.type);\r\n  }\r\n\r\n  /**\r\n   * Render the SVG shape\r\n   */\r\n  private renderShape() {\r\n    const shapeDef = this.getShapeDefinition();\r\n    if (!shapeDef) {\r\n      return html`\r\n        <div class=\"unknown-shape\">\r\n          Unknown shape: ${this.data?.type || 'undefined'}\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const config = this.data;\r\n    const size = config.size || shapeDef.defaultSize;\r\n    const fillColor = config.backgroundColor || config.color || '#ffffff';\r\n    const strokeColor = config.strokeColor || '#000000';\r\n    const strokeWidth = config.strokeWidth || 2;\r\n    const rotation = config.rotation || 0;\r\n\r\n    return html`\r\n      <svg \r\n        class=\"shape-svg\"\r\n        width=\"${size.width}\" \r\n        height=\"${size.height}\" \r\n        viewBox=\"${shapeDef.viewBox}\"\r\n        style=\"transform: rotate(${rotation}deg)\"\r\n      >\r\n        <path \r\n          d=\"${shapeDef.path}\" \r\n          fill=\"${fillColor}\"\r\n          stroke=\"${strokeColor}\"\r\n          stroke-width=\"${strokeWidth}\"\r\n        />\r\n      </svg>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Render gradient definitions if needed\r\n   */\r\n  private renderGradients() {\r\n    const config = this.data;\r\n    if (config && 'gradient' in config && config.gradient) {\r\n      const gradientId = `gradient-${this.data.type}-${Math.random().toString(36).substr(2, 9)}`;\r\n      const gradient = config.gradient;\r\n      \r\n      if (gradient.type === 'linear') {\r\n        return html`\r\n          <defs>\r\n            <linearGradient id=\"${gradientId}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              ${gradient.colors.map((color, index) => \r\n                html`<stop offset=\"${(index / (gradient.colors.length - 1)) * 100}%\" stop-color=\"${color}\"/>`\r\n              )}\r\n            </linearGradient>\r\n          </defs>\r\n        `;\r\n      } else if (gradient.type === 'radial') {\r\n        return html`\r\n          <defs>\r\n            <radialGradient id=\"${gradientId}\" cx=\"50%\" cy=\"50%\" r=\"50%\">\r\n              ${gradient.colors.map((color, index) => \r\n                html`<stop offset=\"${(index / (gradient.colors.length - 1)) * 100}%\" stop-color=\"${color}\"/>`\r\n              )}\r\n            </radialGradient>\r\n          </defs>\r\n        `;\r\n      }\r\n    }\r\n    return html``;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.addEventListener('click', this.handleClick);\r\n    this.addEventListener('mousedown', this.handleMouseDown);\r\n    if (this.resizable) {\r\n      this.addEventListener('resize', this.handleResize as EventListener);\r\n      this.addEventListener('resize-end', this.handleResizeEnd as EventListener);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.removeEventListener('click', this.handleClick);\r\n    this.removeEventListener('mousedown', this.handleMouseDown);\r\n    if (this.resizable) {\r\n      this.removeEventListener('resize', this.handleResize as EventListener);\r\n      this.removeEventListener('resize-end', this.handleResizeEnd as EventListener);\r\n    }\r\n    this.cleanup();\r\n  }\r\n\r\n  private cleanup() {\r\n    document.removeEventListener('mousemove', this.handleMouseMove);\r\n    document.removeEventListener('mouseup', this.handleMouseUp);\r\n  }\r\n\r\n  /**\r\n   * Handle click events\r\n   */\r\n  private handleClick = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    if (!this.isDragging && this.instance) {\r\n      // Toggle selection\r\n      const newSelected = !this.selected;\r\n      this.instance.updateNode(this.id, { selected: newSelected });\r\n      \r\n      // Dispatch selection event\r\n      this.dispatchEvent(new CustomEvent('node-select', {\r\n        detail: {\r\n          nodeId: this.id,\r\n          selected: newSelected,\r\n          node: {\r\n            id: this.id,\r\n            data: this.data,\r\n            position: this.position,\r\n            selected: newSelected\r\n          }\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  private handleResize = (e: Event) => {\r\n    const { width, height } = (e as CustomEvent).detail;\r\n    \r\n    // Update the shape data with new size\r\n    if (this.data && this.instance) {\r\n      const updatedData = {\r\n        ...this.data,\r\n        size: { width, height }\r\n      };\r\n      \r\n      this.instance.updateNode(this.id, { \r\n        data: updatedData,\r\n        width: width,\r\n        height: height,\r\n        measured: { width, height }\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleResizeEnd = (e: Event) => {\r\n    const { width, height } = (e as CustomEvent).detail;\r\n    \r\n    // Final update with new dimensions\r\n    if (this.data && this.instance) {\r\n      const updatedData = {\r\n        ...this.data,\r\n        size: { width, height }\r\n      };\r\n      \r\n      this.instance.updateNode(this.id, { \r\n        data: updatedData,\r\n        width: width,\r\n        height: height,\r\n        measured: { width, height }\r\n      });\r\n    }\r\n\r\n    // Dispatch resize end event\r\n    this.dispatchEvent(new CustomEvent('node-resize-end', {\r\n      detail: {\r\n        nodeId: this.id,\r\n        width: width,\r\n        height: height\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  };\r\n\r\n  private handleMouseDown = (e: MouseEvent) => {\r\n    if (!this.draggable || e.button !== 0) return;\r\n    \r\n    // Check if the event is coming from a resize handle or node-resizer\r\n    const target = e.target as HTMLElement;\r\n    \r\n    // Check if the event originated from a resize handle or node-resizer\r\n    const isFromResizeHandle = target.classList.contains('resize-handle') || \r\n                              target.tagName === 'NODE-RESIZER' ||\r\n                              target.closest('node-resizer') !== null;\r\n    \r\n    if (isFromResizeHandle) {\r\n      return; // Don't start dragging if clicking on resize handle\r\n    }\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    this.isDragging = false;\r\n    this.dragStart = { x: e.clientX, y: e.clientY };\r\n    this.nodeStart = { ...this.position };\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMove);\r\n    document.addEventListener('mouseup', this.handleMouseUp);\r\n  };\r\n\r\n  private handleMouseMove = (e: MouseEvent) => {\r\n    const dx = e.clientX - this.dragStart.x;\r\n    const dy = e.clientY - this.dragStart.y;\r\n    \r\n    // Start dragging if moved more than 3px\r\n    if (!this.isDragging && (Math.abs(dx) > 3 || Math.abs(dy) > 3)) {\r\n      this.isDragging = true;\r\n      if (this.instance) {\r\n        this.instance.updateNode(this.id, { dragging: true });\r\n      }\r\n    }\r\n\r\n    if (this.isDragging && this.instance) {\r\n      const viewport = this.instance.getViewport();\r\n      const newPosition = {\r\n        x: this.nodeStart.x + dx / viewport.zoom,\r\n        y: this.nodeStart.y + dy / viewport.zoom\r\n      };\r\n      \r\n      this.instance.updateNode(this.id, { position: newPosition });\r\n    }\r\n  };\r\n\r\n  private handleMouseUp = () => {\r\n    console.log('handleMouseUp');\r\n    if (this.isDragging && this.instance) {\r\n      this.instance.updateNode(this.id, { dragging: false });\r\n    }\r\n    \r\n    this.isDragging = false;\r\n    this.cleanup();\r\n  };\r\n\r\n  private handleHandleStart = (e: MouseEvent) => {\r\n    console.log('handleHandleStart', e);\r\n    e.stopPropagation();\r\n    this.isDragging = false;\r\n    \r\n    const handle = e.target as HTMLElement;\r\n    const handleId = handle.dataset.handleId;\r\n    const handleType = handle.dataset.handleType;\r\n    \r\n    if (handleType && handleId) {\r\n      this.dispatchEvent(new CustomEvent('handle-start', {\r\n        detail: {\r\n          nodeId: this.id,\r\n          handleId: handleId,\r\n          handleType: handleType,\r\n          position: this.position\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // Set CSS custom properties on the host element\r\n    this.style.setProperty('--position-x', `${this.position.x}px`);\r\n    this.style.setProperty('--position-y', `${this.position.y}px`);\r\n    \r\n    // Set shape dimensions\r\n    const shapeDef = this.getShapeDefinition();\r\n    const config = this.data;\r\n    const size = config?.size || shapeDef?.defaultSize || { width: 200, height: 200 };\r\n    this.style.setProperty('--shape-width', `${size.width}px`);\r\n    this.style.setProperty('--shape-height', `${size.height}px`);\r\n    \r\n    return html`\r\n      <div class=\"shape-node ${this.selected ? 'selected' : ''}\">\r\n        ${this.renderGradients()}\r\n        ${this.renderShape()}\r\n        <div class=\"shape-content\">\r\n          <slot></slot>\r\n        </div>\r\n        ${this.connectable ? this.renderHandles() : ''}\r\n        ${this.renderLabel()}\r\n      </div>\r\n      ${this.resizable ? html`\r\n        <node-resizer\r\n          .visible=${this.selected}\r\n          min-width=\"50\"\r\n          min-height=\"50\"\r\n          max-width=\"500\"\r\n          max-height=\"500\"\r\n        ></node-resizer>\r\n      ` : ''}\r\n    `;\r\n  }\r\n\r\n  private renderHandles() {\r\n    const nodeId = this.id;\r\n    return html`\r\n      <div \r\n        class=\"handle source\" \r\n        data-handle=\"source\" \r\n        data-node-id=\"${nodeId}\"\r\n        data-handle-id=\"${nodeId}-source-right\"\r\n        data-handle-type=\"source\"\r\n        @mousedown=${this.handleHandleStart}\r\n      ></div>\r\n      <div \r\n        class=\"handle target\" \r\n        data-handle=\"target\" \r\n        data-node-id=\"${nodeId}\"\r\n        data-handle-id=\"${nodeId}-target-left\"\r\n        data-handle-type=\"target\"\r\n        @mousedown=${this.handleHandleStart}\r\n      ></div>\r\n      <div \r\n        class=\"handle top\" \r\n        data-handle=\"source\" \r\n        data-node-id=\"${nodeId}\"\r\n        data-handle-id=\"${nodeId}-source-top\"\r\n        data-handle-type=\"source\"\r\n        @mousedown=${this.handleHandleStart}\r\n      ></div>\r\n      <div \r\n        class=\"handle bottom\" \r\n        data-handle=\"target\" \r\n        data-node-id=\"${nodeId}\"\r\n        data-handle-id=\"${nodeId}-target-bottom\"\r\n        data-handle-type=\"target\"\r\n        @mousedown=${this.handleHandleStart}\r\n      ></div>\r\n    `;\r\n  }\r\n\r\n  private renderLabel() {\r\n    const shapeConfig = this.data;\r\n    if (!shapeConfig) return '';\r\n\r\n    // Get the label - use provided label or default to shape type\r\n    const label = shapeConfig.label || shapeConfig.type;\r\n    \r\n    return html`\r\n      <div class=\"shape-label\">\r\n        ${label}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'shape-node': ShapeNode;\r\n  }\r\n}\r\n","/**\r\n * Base Node UI components (Lit)\r\n * Similar to React Flow UI Base Node: header, content, footer wrappers\r\n */\r\n\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\n@customElement('base-node')\r\nexport class BaseNode extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n      border: 1px solid var(--flow-node-border, #e5e7eb);\r\n      border-radius: 8px;\r\n      background: var(--flow-node-background, #ffffff);\r\n      color: var(--flow-node-foreground, #111827);\r\n      overflow: hidden;\r\n    }\r\n  `;\r\n\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n}\r\n\r\n@customElement('base-node-header')\r\nexport class BaseNodeHeader extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 10px 12px;\r\n      background: var(--base-node-header-bg, #f9fafb);\r\n      border-bottom: 1px solid var(--flow-node-border, #e5e7eb);\r\n      font-weight: 600;\r\n    }\r\n  `;\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n}\r\n\r\n@customElement('base-node-header-title')\r\nexport class BaseNodeHeaderTitle extends LitElement {\r\n  static styles = css`\r\n    :host { display: contents; }\r\n    .title {\r\n      font-size: 14px;\r\n      font-weight: 600;\r\n      color: var(--base-node-title, #111827);\r\n    }\r\n  `;\r\n  render() {\r\n    return html`<span class=\"title\"><slot></slot></span>`;\r\n  }\r\n}\r\n\r\n@customElement('base-node-content')\r\nexport class BaseNodeContent extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n      padding: 12px;\r\n    }\r\n  `;\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n}\r\n\r\n@customElement('base-node-footer')\r\nexport class BaseNodeFooter extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 10px 12px;\r\n      background: var(--base-node-footer-bg, #fafafa);\r\n      border-top: 1px solid var(--flow-node-border, #e5e7eb);\r\n    }\r\n  `;\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'base-node': BaseNode;\r\n    'base-node-header': BaseNodeHeader;\r\n    'base-node-header-title': BaseNodeHeaderTitle;\r\n    'base-node-content': BaseNodeContent;\r\n    'base-node-footer': BaseNodeFooter;\r\n  }\r\n}\r\n\r\n\r\n","/**\r\n * NodeMixin - Provides core node functionality without inheritance\r\n * Can be applied to any LitElement to add node behavior\r\n * \r\n * Features:\r\n * - Dragging and positioning\r\n * - Selection handling\r\n * - Resizing with configurable constraints\r\n * - Event dispatching for all interactions\r\n * \r\n * Usage:\r\n * \r\n * The mixin automatically appends the resizer to the DOM when resizable=true and selected=true.\r\n * Components can use any render method - the resizer will be automatically added.\r\n * \r\n * ```typescript\r\n * @customElement('my-node')\r\n * export class MyNode extends NodeMixin(LitElement) {\r\n *   constructor() {\r\n *     super();\r\n *     this.resizable = true;\r\n *     this.minWidth = 100;\r\n *     this.minHeight = 50;\r\n *   }\r\n * \r\n *   // Any render method works - resizer is automatically appended\r\n *   render() {\r\n *     return html`<div>My node content</div>`;\r\n *   }\r\n * }\r\n * ```\r\n * \r\n * For manual control, you can also use:\r\n * ```typescript\r\n * render() {\r\n *   return html`\r\n *     <div>My node content</div>\r\n *     ${this.getResizer()}\r\n *   `;\r\n * }\r\n * ```\r\n */\r\n\r\nimport { LitElement, html, css, render } from 'lit';\r\nimport { property } from 'lit/decorators.js';\r\n\r\nexport interface NodeMixinInterface {\r\n  id: string;\r\n  position: { x: number; y: number };\r\n  data: any;\r\n  selected: boolean;\r\n  dragging: boolean;\r\n  instance: any;\r\n  resizable: boolean;\r\n  draggable: boolean;\r\n  connectable: boolean;\r\n  minWidth: number;\r\n  maxWidth: number;\r\n  minHeight: number;\r\n  maxHeight: number;\r\n  keepAspectRatio: boolean;\r\n  renderComponent(): any;\r\n  getResizer(): any;\r\n  notifyHandlesUpdated(options?: { handleIds?: string[]; updateDimensions?: boolean }): Promise<void>;\r\n}\r\n\r\nexport const NodeMixin = <T extends Constructor<LitElement>>(superClass: T) => {\r\n  class NodeMixinClass extends superClass {\r\n    static get styles() {\r\n      return [css`\r\n      :host {\r\n        position: absolute;\r\n        cursor: var(--node-cursor, grab);\r\n        user-select: none;\r\n        transform-origin: 0 0;\r\n        will-change: transform;\r\n        pointer-events: auto;\r\n        border: var(--node-border, 1px solid #ddd);\r\n        border-radius: var(--node-border-radius, 8px);\r\n        background: var(--node-background, white);\r\n        box-shadow: var(--node-shadow, 0 1px 3px rgba(0, 0, 0, 0.1));\r\n        transition: var(--node-transition, box-shadow 0.2s);\r\n      }\r\n\r\n      :host(:hover) {\r\n        box-shadow: var(--node-hover-shadow, 0 4px 6px rgba(0, 0, 0, 0.15));\r\n      }\r\n\r\n      :host([dragging]) {\r\n        cursor: var(--node-dragging-cursor, grabbing);\r\n        box-shadow: var(--node-dragging-shadow, 0 8px 16px rgba(0, 0, 0, 0.25));\r\n      }\r\n\r\n      :host([selected]) {\r\n        border-color: var(--node-selected-border, #1a73e8);\r\n        box-shadow: var(--node-selected-shadow, 0 0 0 2px rgba(26, 115, 232, 0.3));\r\n      }\r\n\r\n      /* Resizer styles - matching existing components */\r\n      .resize-border {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        border: var(--resize-border-style, 1px dashed var(--node-selected-border, #1a73e8));\r\n        border-radius: var(--node-border-radius, 8px);\r\n        opacity: var(--resize-border-opacity, 0);\r\n        pointer-events: none;\r\n        transition: var(--resize-transition, opacity 0.2s ease);\r\n      }\r\n\r\n      :host([selected]) .resize-border {\r\n        opacity: var(--resize-border-opacity-selected, 1);\r\n      }\r\n\r\n      .resize-handle {\r\n        position: absolute;\r\n        background: var(--resize-handle-background, var(--node-selected-border, #1a73e8));\r\n        border: var(--resize-handle-border, 2px solid #fff);\r\n        border-radius: var(--resize-handle-border-radius, 2px);\r\n        width: var(--resize-handle-size, 12px);\r\n        height: var(--resize-handle-size, 12px);\r\n        opacity: var(--resize-handle-opacity, 0);\r\n        transition: var(--resize-transition, opacity 0.2s ease);\r\n        pointer-events: auto;\r\n        box-shadow: var(--resize-handle-shadow, 0 2px 4px rgba(0, 0, 0, 0.2));\r\n        z-index: 10;\r\n      }\r\n\r\n      .resize-handle:hover {\r\n        opacity: var(--resize-handle-opacity-hover, 1);\r\n      }\r\n\r\n      :host([selected]) .resize-handle {\r\n        opacity: var(--resize-handle-opacity-selected, 1);\r\n      }\r\n\r\n      .resize-handle.nw {\r\n        top: var(--resize-handle-offset, -8px);\r\n        left: var(--resize-handle-offset, -8px);\r\n        cursor: nw-resize;\r\n      }\r\n\r\n      .resize-handle.ne {\r\n        top: var(--resize-handle-offset, -8px);\r\n        right: var(--resize-handle-offset, -8px);\r\n        cursor: ne-resize;\r\n      }\r\n\r\n      .resize-handle.sw {\r\n        bottom: var(--resize-handle-offset, -8px);\r\n        left: var(--resize-handle-offset, -8px);\r\n        cursor: sw-resize;\r\n      }\r\n\r\n      .resize-handle.se {\r\n        bottom: var(--resize-handle-offset, -8px);\r\n        right: var(--resize-handle-offset, -8px);\r\n        cursor: se-resize;\r\n      }\r\n\r\n      .resize-handle.n {\r\n        top: var(--resize-handle-offset, -8px);\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        cursor: n-resize;\r\n      }\r\n\r\n      .resize-handle.s {\r\n        bottom: var(--resize-handle-offset, -8px);\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        cursor: s-resize;\r\n      }\r\n\r\n      .resize-handle.w {\r\n        top: 50%;\r\n        left: var(--resize-handle-offset, -8px);\r\n        transform: translateY(-50%);\r\n        cursor: w-resize;\r\n      }\r\n\r\n      .resize-handle.e {\r\n        top: 50%;\r\n        right: var(--resize-handle-offset, -8px);\r\n        transform: translateY(-50%);\r\n        cursor: e-resize;\r\n      }\r\n      `];\r\n    }\r\n\r\n    @property({ type: String, reflect: true }) id = '';\r\n    @property({ type: Object }) position = { x: 0, y: 0 };\r\n    @property({ type: Object }) data = {};\r\n    @property({ type: Boolean, reflect: true }) selected = false;\r\n    @property({ type: Boolean, reflect: true }) dragging = false;\r\n    @property({ type: Object }) instance: any = null;\r\n    @property({ type: Boolean }) resizable = false;\r\n    @property({ type: Boolean }) draggable = true;\r\n    @property({ type: Boolean }) connectable = true;\r\n    @property({ type: Number }) minWidth = 10;\r\n    @property({ type: Number }) maxWidth = Number.MAX_VALUE;\r\n    @property({ type: Number }) minHeight = 10;\r\n    @property({ type: Number }) maxHeight = Number.MAX_VALUE;\r\n    @property({ type: Boolean }) keepAspectRatio = false;\r\n\r\n    private isDragging = false;\r\n    private dragStart = { x: 0, y: 0 };\r\n    private nodeStart = { x: 0, y: 0 };\r\n    \r\n    // Resizer state\r\n    private isResizing = false;\r\n    private resizeStart = { x: 0, y: 0, width: 0, height: 0 };\r\n    private resizeHandle = '';\r\n\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      if (this.draggable) {\r\n        this.addEventListener('mousedown', this.handleMouseDown);\r\n      }\r\n      this.addEventListener('click', this.handleClick);\r\n      // Add global click handler for deselection\r\n      document.addEventListener('click', this.handleGlobalClick);\r\n      // Resizer functionality is now handled directly in the mixin\r\n    }\r\n\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      this.removeEventListener('mousedown', this.handleMouseDown);\r\n      this.removeEventListener('click', this.handleClick);\r\n      document.removeEventListener('click', this.handleGlobalClick);\r\n      // Resizer functionality is now handled directly in the mixin\r\n      this.cleanup();\r\n    }\r\n\r\n\r\n    private handleClick = (e: MouseEvent) => {\r\n      e.stopPropagation();\r\n      if (!this.isDragging) {\r\n        const newSelected = !this.selected;\r\n        this.selected = newSelected;\r\n        \r\n        // Update instance if available\r\n        if (this.instance) {\r\n          this.instance.updateNode(this.id, { selected: newSelected });\r\n        }\r\n        \r\n        this.dispatchEvent(new CustomEvent('node-select', {\r\n          detail: { \r\n            nodeId: this.id, \r\n            selected: newSelected,\r\n            node: {\r\n              id: this.id,\r\n              data: this.data,\r\n              position: this.position,\r\n              selected: newSelected\r\n            }\r\n          },\r\n          bubbles: true,\r\n          composed: true\r\n        }));\r\n      }\r\n    };\r\n\r\n    private handleMouseDown = (e: MouseEvent) => {\r\n      if (e.button !== 0) return;\r\n      \r\n      const target = e.target as HTMLElement;\r\n      \r\n      // Check if the target is a resize handle or if it's inside a resize handle\r\n      const isFromResizeHandle = target.classList.contains('resize-handle') || \r\n                                target.closest('.resize-handle') !== null;\r\n      \r\n      if (isFromResizeHandle) {\r\n        this.handleResizeStart(e);\r\n        return;\r\n      }\r\n      \r\n      if (!this.draggable) return;\r\n      \r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      \r\n      this.isDragging = false;\r\n      this.dragStart = { x: e.clientX, y: e.clientY };\r\n      this.nodeStart = { ...this.position };\r\n\r\n      document.addEventListener('mousemove', this.handleMouseMove);\r\n      document.addEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    private handleMouseMove = (e: MouseEvent) => {\r\n      if (this.isResizing) {\r\n        this.handleResizeMove(e);\r\n        return;\r\n      }\r\n      \r\n      const dx = e.clientX - this.dragStart.x;\r\n      const dy = e.clientY - this.dragStart.y;\r\n      \r\n      if (!this.isDragging && (Math.abs(dx) > 3 || Math.abs(dy) > 3)) {\r\n        this.isDragging = true;\r\n        this.dragging = true;\r\n        if (this.instance) {\r\n          this.instance.updateNode(this.id, { dragging: true });\r\n        }\r\n      }\r\n\r\n      if (this.isDragging && this.instance) {\r\n        const viewport = this.instance.getViewport();\r\n        const newPosition = {\r\n          x: this.nodeStart.x + dx / viewport.zoom,\r\n          y: this.nodeStart.y + dy / viewport.zoom\r\n        };\r\n        \r\n        this.instance.updateNode(this.id, { position: newPosition });\r\n      }\r\n    };\r\n\r\n    private handleMouseUp = () => {\r\n      if (this.isDragging && this.instance) {\r\n        this.instance.updateNode(this.id, { dragging: false });\r\n      }\r\n      \r\n      if (this.isResizing) {\r\n        this.handleResizeEnd();\r\n      }\r\n      \r\n      this.cleanup();\r\n      setTimeout(() => {\r\n        this.isDragging = false;\r\n        this.dragging = false;\r\n        this.isResizing = false;\r\n      }, 50);\r\n    };\r\n\r\n    private handleResizeStart = (e: MouseEvent, handle?: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      e.stopImmediatePropagation();\r\n\r\n      this.isResizing = true;\r\n      \r\n      // Get the actual computed dimensions, accounting for any CSS transforms\r\n      const rect = this.getBoundingClientRect();\r\n      const computedStyle = getComputedStyle(this);\r\n      \r\n      // Use the computed width/height if available, otherwise use the bounding rect\r\n      let width = parseFloat(computedStyle.width);\r\n      let height = parseFloat(computedStyle.height);\r\n      \r\n      // If computed values are not available or are 0, use the bounding rect\r\n      if (!width || width === 0) {\r\n        width = rect.width;\r\n      }\r\n      if (!height || height === 0) {\r\n        height = rect.height;\r\n      }\r\n      \r\n      this.resizeStart = {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n        width: width,\r\n        height: height\r\n      };\r\n\r\n      // Use the provided handle or try to detect it\r\n      if (handle) {\r\n        this.resizeHandle = handle;\r\n      } else {\r\n        // Get the handle direction from the target element\r\n        let target = e.target as HTMLElement;\r\n        \r\n        // If the target is not a resize handle, find the closest one\r\n        if (!target.classList.contains('resize-handle')) {\r\n          const resizeHandle = target.closest('.resize-handle') as HTMLElement;\r\n          if (resizeHandle) {\r\n            target = resizeHandle;\r\n          }\r\n        }\r\n        \r\n        const classes = Array.from(target.classList);\r\n        this.resizeHandle = classes.find(cls => cls !== 'resize-handle') || '';\r\n      }\r\n\r\n      // console.log('Resize started with handle:', this.resizeHandle);\r\n\r\n      document.addEventListener('mousemove', this.handleMouseMove);\r\n      document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n      // Dispatch resize start event\r\n      this.dispatchEvent(new CustomEvent('resize-start', {\r\n        detail: {\r\n          width: this.resizeStart.width,\r\n          height: this.resizeStart.height\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n    };\r\n\r\n    private handleResizeMove = (e: MouseEvent) => {\r\n      if (!this.isResizing) return;\r\n\r\n      const deltaX = e.clientX - this.resizeStart.x;\r\n      const deltaY = e.clientY - this.resizeStart.y;\r\n\r\n      // console.log('Resizing with handle:', this.resizeHandle, 'delta:', deltaX, deltaY);\r\n\r\n      let newWidth = this.resizeStart.width;\r\n      let newHeight = this.resizeStart.height;\r\n\r\n      // Calculate new dimensions based on handle direction\r\n      switch (this.resizeHandle) {\r\n        case 'nw':\r\n          newWidth = this.resizeStart.width - deltaX;\r\n          newHeight = this.resizeStart.height - deltaY;\r\n          break;\r\n        case 'ne':\r\n          newWidth = this.resizeStart.width + deltaX;\r\n          newHeight = this.resizeStart.height - deltaY;\r\n          break;\r\n        case 'sw':\r\n          newWidth = this.resizeStart.width - deltaX;\r\n          newHeight = this.resizeStart.height + deltaY;\r\n          break;\r\n        case 'se':\r\n          newWidth = this.resizeStart.width + deltaX;\r\n          newHeight = this.resizeStart.height + deltaY;\r\n          break;\r\n        case 'n':\r\n          newHeight = this.resizeStart.height - deltaY;\r\n          break;\r\n        case 's':\r\n          newHeight = this.resizeStart.height + deltaY;\r\n          break;\r\n        case 'w':\r\n          newWidth = this.resizeStart.width - deltaX;\r\n          break;\r\n        case 'e':\r\n          newWidth = this.resizeStart.width + deltaX;\r\n          break;\r\n      }\r\n\r\n      // Apply constraints\r\n      newWidth = Math.max(this.minWidth, Math.min(this.maxWidth, newWidth));\r\n      newHeight = Math.max(this.minHeight, Math.min(this.maxHeight, newHeight));\r\n\r\n      // Keep aspect ratio if enabled\r\n      if (this.keepAspectRatio) {\r\n        const aspectRatio = this.resizeStart.width / this.resizeStart.height;\r\n        if (this.resizeHandle.includes('w') || this.resizeHandle.includes('e')) {\r\n          newHeight = newWidth / aspectRatio;\r\n        } else {\r\n          newWidth = newHeight * aspectRatio;\r\n        }\r\n      }\r\n\r\n      // Apply new dimensions\r\n      this.style.width = `${newWidth}px`;\r\n      this.style.height = `${newHeight}px`;\r\n\r\n      // Dispatch resize event\r\n      this.dispatchEvent(new CustomEvent('resize', {\r\n        detail: {\r\n          width: newWidth,\r\n          height: newHeight,\r\n          handle: this.resizeHandle\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n\r\n      // Update instance if available\r\n      if (this.instance) {\r\n        this.instance.updateNode(this.id, { \r\n          width: newWidth,\r\n          height: newHeight,\r\n          measured: { width: newWidth, height: newHeight }\r\n        });\r\n      }\r\n    };\r\n\r\n    private handleResizeEnd = () => {\r\n      if (!this.isResizing) return;\r\n\r\n      // console.log('Resize ending - final dimensions:', this.offsetWidth, this.offsetHeight);\r\n      this.isResizing = false;\r\n\r\n      // Dispatch resize end event\r\n      this.dispatchEvent(new CustomEvent('resize-end', {\r\n        detail: {\r\n          width: this.offsetWidth,\r\n          height: this.offsetHeight\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      }));\r\n\r\n      // Update instance if available\r\n      if (this.instance) {\r\n        this.instance.updateNode(this.id, { \r\n          width: this.offsetWidth,\r\n          height: this.offsetHeight,\r\n          measured: { width: this.offsetWidth, height: this.offsetHeight }\r\n        });\r\n      }\r\n    };\r\n\r\n    private handleGlobalClick = (e: MouseEvent) => {\r\n      // Check if the click is outside this node\r\n      const target = e.target as HTMLElement;\r\n      const isNodeClick = target.closest(this.tagName.toLowerCase()) !== null;\r\n      \r\n      if (!isNodeClick) {\r\n        // Deselect this node if it's selected\r\n        if (this.selected) {\r\n          this.selected = false;\r\n          \r\n          // Update instance if available\r\n          if (this.instance) {\r\n            this.instance.updateNode(this.id, { selected: false });\r\n          }\r\n          \r\n          // Dispatch deselection event\r\n          this.dispatchEvent(new CustomEvent('node-deselect', {\r\n            detail: { \r\n              nodeId: this.id, \r\n              selected: false,\r\n              node: {\r\n                id: this.id,\r\n                data: this.data,\r\n                position: this.position,\r\n                selected: false\r\n              }\r\n            },\r\n            bubbles: true,\r\n            composed: true\r\n          }));\r\n        }\r\n      }\r\n    };\r\n\r\n    private cleanup() {\r\n      document.removeEventListener('mousemove', this.handleMouseMove);\r\n      document.removeEventListener('mouseup', this.handleMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Renders the resizer handles and border when the node is resizable and selected\r\n     * This is now called automatically by the mixin's render method\r\n     */\r\n    private renderResizer() {\r\n      if (!this.resizable || !this.selected) {\r\n        return html``;\r\n      }\r\n      return html`\r\n        <div class=\"resize-border\"></div>\r\n        <div class=\"resize-handle nw\" @mousedown=${this.handleResizeHandleClick('nw')}></div>\r\n        <div class=\"resize-handle ne\" @mousedown=${this.handleResizeHandleClick('ne')}></div>\r\n        <div class=\"resize-handle sw\" @mousedown=${this.handleResizeHandleClick('sw')}></div>\r\n        <div class=\"resize-handle se\" @mousedown=${this.handleResizeHandleClick('se')}></div>\r\n        <div class=\"resize-handle n\" @mousedown=${this.handleResizeHandleClick('n')}></div>\r\n        <div class=\"resize-handle s\" @mousedown=${this.handleResizeHandleClick('s')}></div>\r\n        <div class=\"resize-handle w\" @mousedown=${this.handleResizeHandleClick('w')}></div>\r\n        <div class=\"resize-handle e\" @mousedown=${this.handleResizeHandleClick('e')}></div>\r\n      `;\r\n    }\r\n\r\n    /**\r\n     * Helper method to get just the resizer HTML\r\n     * Use this in components that override render() method\r\n     */\r\n    protected getResizer() {\r\n      return this.renderResizer();\r\n    }\r\n\r\n    /**\r\n     * Automatically append resizer to DOM after rendering\r\n     * This works even when components override render() method\r\n     */\r\n    firstUpdated() {\r\n      this.appendResizerToDOM();\r\n    }\r\n\r\n    updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n      super.updated(changedProperties);\r\n      // Apply transform for positioning\r\n      this.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`;\r\n      \r\n      // Re-append resizer if resizable or selected state changed\r\n      if (changedProperties.has('resizable') || changedProperties.has('selected')) {\r\n        this.appendResizerToDOM();\r\n      }\r\n    }\r\n\r\n    private appendResizerToDOM() {\r\n      // Remove existing resizer if it exists\r\n      this.removeExistingResizer();\r\n      \r\n      // Only append resizer if resizable and selected\r\n      if (this.resizable && this.selected) {\r\n        const resizerTemplate = this.renderResizer();\r\n        if (resizerTemplate) {\r\n          // Create a container for the resizer\r\n          const resizerContainer = document.createElement('div');\r\n          resizerContainer.className = 'mixin-resizer-container';\r\n          resizerContainer.style.cssText = `\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            pointer-events: none;\r\n            z-index: 10;\r\n          `;\r\n          \r\n          // Append to shadow DOM\r\n          this.shadowRoot?.appendChild(resizerContainer);\r\n          \r\n          // Render the resizer content using Lit's render function\r\n          render(resizerTemplate, resizerContainer);\r\n        }\r\n      }\r\n    }\r\n\r\n    private removeExistingResizer() {\r\n      const existingResizer = this.shadowRoot?.querySelector('.mixin-resizer-container');\r\n      if (existingResizer) {\r\n        existingResizer.remove();\r\n      }\r\n    }\r\n\r\n    private handleResizeHandleClick = (handle: string) => {\r\n      return (e: MouseEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n        this.handleResizeStart(e, handle);\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Notifies the flow instance that handles have been dynamically added/updated\r\n     * Call this after using Lit's render() to add handles dynamically (e.g., after API data loads)\r\n     * \r\n     * This method:\r\n     * 1. Waits for DOM update to complete\r\n     * 2. Updates node dimensions to trigger handle position recalculation\r\n     * 3. Dispatches a custom event for flow canvas to listen to\r\n     * \r\n     * @example\r\n     * ```typescript\r\n     * async loadFields() {\r\n     *   const fields = await fetchFields();\r\n     *   const container = this.shadowRoot.querySelector('.fields-container');\r\n     *   render(fieldsTemplate, container);\r\n     *   \r\n     *   // Notify flow instance after handles are rendered\r\n     *   this.notifyHandlesUpdated();\r\n     * }\r\n     * ```\r\n     */\r\n    protected async notifyHandlesUpdated(options?: {\r\n      /** Optional list of handle IDs that were added/updated */\r\n      handleIds?: string[];\r\n      /** Whether to update node dimensions (default: true) */\r\n      updateDimensions?: boolean;\r\n    }) {\r\n      const { handleIds, updateDimensions = true } = options || {};\r\n      \r\n      // Wait for any pending DOM updates\r\n      await this.updateComplete;\r\n      \r\n      // Small delay to ensure handles are fully rendered in the DOM\r\n      await new Promise(resolve => setTimeout(resolve, 0));\r\n      \r\n      if (this.instance && this.id) {\r\n        // Update node dimensions to trigger flow canvas recalculation\r\n        // This forces the flow canvas to recalculate handle positions\r\n        if (updateDimensions) {\r\n          const rect = this.getBoundingClientRect();\r\n          const currentWidth = rect.width;\r\n          const currentHeight = rect.height;\r\n          \r\n          this.instance.updateNode(this.id, {\r\n            width: currentWidth,\r\n            height: currentHeight,\r\n            measured: { width: currentWidth, height: currentHeight }\r\n          });\r\n        }\r\n        \r\n        // Dispatch custom event that flow canvas can listen to\r\n        this.dispatchEvent(new CustomEvent('node-handles-updated', {\r\n          detail: { \r\n            nodeId: this.id,\r\n            handleIds: handleIds || [],\r\n            timestamp: Date.now()\r\n          },\r\n          bubbles: true,\r\n          composed: true\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  return NodeMixinClass as any;\r\n};\r\n\r\ntype Constructor<T = {}> = new (...args: any[]) => T;\r\n"],"names":["noop","dispatch","i","n","_","t","Dispatch","parseTypenames","typenames","types","name","typename","callback","T","get","set","copy","type","that","args","c","xhtml","namespaces","namespace","prefix","creatorInherit","document","uri","creatorFixed","fullname","creator","none","selector","selection_select","select","groups","m","subgroups","j","group","subgroup","node","subnode","Selection","array","x","empty","selectorAll","arrayAll","selection_selectAll","parents","matcher","childMatcher","find","childFind","match","childFirst","selection_selectChild","filter","children","childrenFilter","selection_selectChildren","selection_filter","sparse","update","selection_enter","EnterNode","parent","datum","child","next","constant$2","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","key","nodeByKeyValue","keyValues","keyValue","selection_data","value","bind","constant","arraylike","enterGroup","updateGroup","exitGroup","i0","i1","previous","selection_exit","selection_join","onenter","onupdate","onexit","selection_merge","context","selection","groups0","groups1","m0","m1","merges","group0","group1","merge","selection_order","selection_sort","compare","ascending","compareNode","a","b","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","size","selection_empty","selection_each","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","attrFunction","v","attrFunctionNS","selection_attr","defaultView","styleRemove","styleConstant","priority","styleFunction","selection_style","styleValue","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","string","classList","ClassList","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","textRemove","textConstant","textFunction","selection_text","htmlRemove","htmlConstant","htmlFunction","selection_html","raise","selection_raise","lower","selection_lower","selection_append","create","constantNull","selection_insert","before","remove","selection_remove","selection_cloneShallow","clone","selection_cloneDeep","selection_clone","deep","selection_datum","contextListener","listener","event","onRemove","on","o","onAdd","options","selection_on","dispatchEvent","params","window","dispatchConstant","dispatchFunction","selection_dispatch","selection_iterator","root","selection_selection","sourceEvent","pointer","svg","point","rect","nonpassivecapture","noevent$1","dragDisable","view","noevent","yesdrag","noclick","define","constructor","factory","prototype","extend","definition","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","color","channels","color_formatHex","color_formatHex8","color_formatHsl","color_formatRgb","hslConvert","format","l","rgbn","Rgb","rgba","hsla","r","g","rgbConvert","rgb","opacity","k","clampi","clampa","rgb_formatHex","rgb_formatHex8","rgb_formatRgb","hex","h","s","Hsl","min","max","hsl","m2","hsl2rgb","clamph","clampt","constant$1","linear","d","exponential","y","gamma","nogamma","interpolateRgb","rgbGamma","start","end","colorRgb","numberArray","isNumberArray","genericArray","nb","na","date","interpolateNumber","object","reA","reB","zero","one","interpolateString","bi","am","bm","bs","q","number","interpolate$1","degrees","identity","decompose","e","f","scaleX","scaleY","skewX","svgNode","parseCss","parseSvg","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","rotate","scale","interpolateTransformCss","interpolateTransformSvg","epsilon2","cosh","sinh","tanh","interpolateZoom","zoomRho","rho","rho2","rho4","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","S","d1","b0","b1","r0","r1","coshr0","u","_1","_2","_4","frame","timeout","interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","setFrame","now","clearNow","Timer","timer","delay","time","sleep","timerFlush","wake","nap","poke","t0","t1","t2","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","id","index","timing","schedules","init","self","tween","stop","tick","interrupt","active","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","tweenValue","transition","interpolate","value1","string00","string1","interpolate0","string0","string10","transition_attr","attrInterpolate","attrInterpolateNS","attrTweenNS","attrTween","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","easeVarying","transition_easeVarying","transition_filter","Transition","transition_merge","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","inherit","transition_selection","styleNull","style","styleMaybeRemove","listener0","transition_style","styleInterpolate","styleTween","transition_styleTween","transition_text","textInterpolate","textTween","transition_textTween","transition_transition","id0","id1","newId","transition_end","resolve","reject","cancel","selection_prototype","cubicInOut","defaultTiming","easeCubicInOut","selection_transition","ZoomEvent","target","transform","Transform","location","nopropagation","defaultFilter","defaultExtent","defaultTransform","defaultWheelDelta","defaultTouchable","defaultConstrain","extent","translateExtent","dx0","dx1","dy0","dy1","constrain","wheelDelta","touchable","scaleExtent","duration","listeners","touchstarting","touchfirst","touchending","touchDelay","wheelDelay","clickDistance2","tapDistance","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","collection","gesture","p","k0","k1","centroid","w","clean","Gesture","wheelidled","currentTarget","mousemoved","mouseupped","x0","y0","dragEnable","touches","started","l0","l1","dp","dl","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","clamp","val","isNumeric","isMacOs","getBezierEdgeCenter","sourceX","sourceY","targetX","targetY","sourceControlX","sourceControlY","targetControlX","targetControlY","centerX","centerY","offsetX","offsetY","calculateControlOffset","distance","curvature","getControlWithCurvature","pos","x1","y1","x2","y2","getBezierPath","sourcePosition","targetPosition","labelX","labelY","getEdgeCenter","xOffset","yOffset","getStraightPath","handleDirections","getDirection","source","getPoints","center","offset","stepPosition","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","sourceGapOffset","targetGapOffset","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceGapPoint","targetGapPoint","maxXDistance","maxYDistance","getBend","bendSize","xDir","yDir","getSmoothStepPath","borderRadius","res","segment","viewChanged","prevViewport","eventViewport","transformToViewport","viewportToTransform","zoomIdentity","isWrappedWithClass","className","isRightClickPan","panOnDrag","usedButton","defaultEase","getD3Transition","ease","onEnd","hasDuration","factor","createPanOnScrollHandler","zoomPanValues","noWheelClassName","d3Selection","d3Zoom","panOnScrollMode","panOnScrollSpeed","zoomOnPinch","onPanZoomStart","onPanZoom","onPanZoomEnd","currentZoom","pinchDelta","deltaNormalize","deltaX","deltaY","nextViewport","createZoomOnScrollHandler","preventScrolling","d3ZoomHandler","isWheel","preventZoom","hasNoWheelClass","createPanZoomStartHandler","onDraggingChange","viewport","createPanZoomHandler","onPaneContextMenu","onTransformChange","createPanZoomEndHandler","panOnScroll","createFilter","zoomActivationKeyPressed","zoomOnScroll","zoomOnDoubleClick","userSelectionActive","noPanClassName","lib","connectionInProgress","zoomScroll","pinchZoom","isWheelEvent","buttonAllowed","XYPanZoom","domNode","minZoom","maxZoom","paneClickDistance","bbox","d3ZoomInstance","setViewportConstrained","d3DblClickZoomHandler","setTransform","destroy","wheelHandler","startHandler","panZoomHandler","panZoomEndHandler","nextTransform","contrainedTransform","setViewport","syncViewport","currentTransform","getViewport","zoomTransform","scaleTo","scaleBy","setScaleExtent","setTranslateExtent","setClickDistance","validDistance","ResizeControlVariant","FlowInstance","container","isDragging","_event","_viewport","_t","nodes","edges","updates","edge","newZoom","minX","minY","maxX","maxY","width","height","bounds","containerWidth","containerHeight","padding","zoomX","zoomY","internalNode","nodeId","nodeEl","nodeIds","retryCount","maxRetries","allNodeIds","uniqueNodeIds","createStore","initialState","state","updateLookups","n$5","$","E","A","C","P","V","N","H","I","L","M","R","z","B","i$1","getDistance","getCenter","getSystemBezierPath","getSystemSmoothStepPath","getSystemStraightPath","isPointInRect","FlowCanvas","LitElement","handleId","path","targetEl","targetHandleId","tagName","tag","targetId","newEdgeId","sourceNodeId","sourceHandleId","finalTargetHandleId","targetNode","selected","edgeId","el","viewportEl","vpRect","cy","handleEl","shadowRoot","nodeRect","handleRect","shapeData","parts","handleType","result","targetNodeId","sourceNode","targetData","targetWidth","targetHeight","sourceCenterX","sourceCenterY","targetCenterX","targetCenterY","handlePos","sourceWidth","sourceHeight","nodeType","unsafeStatic","html","styleMap","labelHtml","labelText","startHtml","startText","endHtml","endText","vx","vy","preview","nodeFrom","nodeTo","css","__decorateClass","property","customElement","NodeResizer","isResizeHandle","parentElement","resizeHandleEl","classes","cls","newWidth","newHeight","aspectRatio","FlowNode","newSelected","newPosition","changedProperties","FlowEdge","spec","refX","refY","orient","input","canvasRoot","handle","pathClasses","markerStartId","markerEndId","markerStart","markerEnd","dashAttr","FlowBackground","patternId","FlowMinimap","FlowControls","ERDTableNode","fieldName","side","tableData","tableName","fields","field","__superGet","basicShapes","geometricShapes","symbolicShapes","_ShapeRegistry","shape","shapeType","category","ShapeRegistry","ShapeNode","updatedData","shapeDef","config","fillColor","strokeColor","strokeWidth","rotation","gradientId","gradient","shapeConfig","label","newVal","oldVal","BaseNode","BaseNodeHeader","BaseNodeHeaderTitle","BaseNodeContent","BaseNodeFooter","NodeMixin","superClass","NodeMixinClass","computedStyle","resizeHandle","resizerTemplate","resizerContainer","render","existingResizer","handleIds","updateDimensions","currentWidth","currentHeight"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113]}